Nonterminals useless in grammar

   call_func
   data_type
   prim_type
   abs_type
   data_types


Terminals unused in grammar

   SEMICOLON
   LBRACE
   RBRACE
   LBRACK
   RBRACK
   DOT
   SKIP
   NOT
   NIL
   TRUE
   FALSE
   BREAK
   SET
   LIST
   DIVM
   ADDPERC
   SUBPERC
   ADDEQ
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   DICT
   MAIN
   CONTSTMT
   DIV
   AND
   OR
   NEQ
   EQ
   LT
   LE
   GT
   GE
   PERC
   '-'


Rules useless in grammar

   51 call_func: ID LPAREN RPAREN
   52          | ID LPAREN data_types RPAREN

   53 data_type: prim_type
   54          | abs_type

   55 prim_type: INT
   56          | REAL
   57          | STR
   58          | NIL

   59 abs_type: ID

   60 data_types: data_type
   61           | data_type COMMA data_types


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: definition end_stmt
    5     | decl_var end_stmt
    6     | estr_cond end_stmt
    7     | f_builtin end_stmt
    8     | expr end_stmt
    9     | estr_while end_stmt
   10     | estr_for end_stmt

   11 end_stmt: ENDLINE

   12 decl_var: decl_data_type ID
   13         | decl_data_type ID ASSIGN expr

   14 decl_data_type: DECINT
   15               | DECREAL
   16               | DECSTR
   17               | ID

   18 var: ID

   19 definition: type_def
   20           | func_def

   21 decl_field_type: decl_var ENDLINE
   22                | decl_var ENDLINE decl_field_type

   23 type_def: TYPE ID COLON ENDLINE decl_field_type END

   24 param_func: decl_var
   25           | decl_var COMMA param_func

   26 func_def: %empty
   27         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

   31 expr: LPAREN expr RPAREN
   32     | expr PLUS expr
   33     | expr MINUS expr
   34     | expr TIMES expr
   35     | expr DIVIDE expr
   36     | REAL
   37     | INT
   38     | STR

   39 f_builtin: f_print
   40          | f_input

   41 f_print: PRINT expr

   42 f_input: INPUT ID

   43 estr_cond: IF expr COLON ENDLINE stmt_list END
   44          | IF expr COLON ENDLINE stmt_list cond_else
   45          | IF expr COLON ENDLINE stmt_list cond_elif

   46 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif
   47          | ELIF expr COLON ENDLINE stmt_list cond_else

   48 cond_else: ELSE COLON ENDLINE stmt_list END

   49 estr_while: WHILE expr COLON stmt_list END

   50 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END


Terminals, with rules where they appear

$end (0) 0
'-' (45)
error (256)
INT (258) 37
REAL (259) 36
STR (260) 38
ID (261) 12 13 17 18 23 27 28 29 30 42
TYPE (262) 23
PRINT (263) 41
INPUT (264) 42
COMMA (265) 25 50
COLON (266) 23 27 28 29 30 43 44 45 46 47 48 49 50
SEMICOLON (267)
LPAREN (268) 27 28 29 30 31
RPAREN (269) 27 28 29 30 31
LBRACE (270)
RBRACE (271)
LBRACK (272)
RBRACK (273)
DOT (274)
ASSIGN (275) 13
ELIF (276) 46 47
IF (277) 43 44 45
ELSE (278) 48
RETURN (279) 28 29
WHILE (280) 49
FOR (281) 50
SKIP (282)
IN (283) 50
NOT (284)
NIL (285)
DEF (286) 27 28 29 30
TRUE (287)
FALSE (288)
BREAK (289)
SET (290)
LIST (291)
DIVM (292)
ADDPERC (293)
SUBPERC (294)
ADDEQ (295)
SUBEQ (296)
DIVEQ (297)
MULTEQ (298)
DIVMEQ (299)
DICT (300)
MAIN (301)
END (302) 23 27 28 29 30 43 48 49 50
ENDLINE (303) 11 21 22 23 27 28 29 30 43 44 45 46 47 48
CONTSTMT (304)
DIV (305)
DECINT (306) 14
DECREAL (307) 15
DECSTR (308) 16
PLUS (309) 32
MINUS (310) 33
AND (311)
OR (312)
NEQ (313)
EQ (314)
LT (315)
LE (316)
GT (317)
GE (318)
PERC (319)
TIMES (320) 34
DIVIDE (321) 35


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
prog (69)
    on left: 1, on right: 0
stmt_list (70)
    on left: 2 3, on right: 1 3 27 28 29 30 43 44 45 46 47 48 49 50
stmt (71)
    on left: 4 5 6 7 8 9 10, on right: 2 3
end_stmt (72)
    on left: 11, on right: 4 5 6 7 8 9 10
decl_var (73)
    on left: 12 13, on right: 5 21 22 24 25 50
decl_data_type (74)
    on left: 14 15 16 17, on right: 12 13
var (75)
    on left: 18, on right: 50
definition (76)
    on left: 19 20, on right: 4
decl_field_type (77)
    on left: 21 22, on right: 22 23
type_def (78)
    on left: 23, on right: 19
param_func (79)
    on left: 24 25, on right: 25 29 30
func_def (80)
    on left: 26 27 28 29 30, on right: 20
expr (81)
    on left: 31 32 33 34 35 36 37 38, on right: 8 13 31 32 33 34 35
    41 43 44 45 46 47 49
f_builtin (82)
    on left: 39 40, on right: 7
f_print (83)
    on left: 41, on right: 39
f_input (84)
    on left: 42, on right: 40
estr_cond (85)
    on left: 43 44 45, on right: 6
cond_elif (86)
    on left: 46 47, on right: 45 46
cond_else (87)
    on left: 48, on right: 44 47
estr_while (88)
    on left: 49, on right: 9
estr_for (89)
    on left: 50, on right: 10


State 0

    0 $accept: . prog $end

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    prog            go to state 16
    stmt_list       go to state 17
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 1

   37 expr: INT .

    $default  reduce using rule 37 (expr)


State 2

   36 expr: REAL .

    $default  reduce using rule 36 (expr)


State 3

   38 expr: STR .

    $default  reduce using rule 38 (expr)


State 4

   17 decl_data_type: ID .

    $default  reduce using rule 17 (decl_data_type)


State 5

   23 type_def: TYPE . ID COLON ENDLINE decl_field_type END

    ID  shift, and go to state 31


State 6

   41 f_print: PRINT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    LPAREN  shift, and go to state 8

    expr  go to state 32


State 7

   42 f_input: INPUT . ID

    ID  shift, and go to state 33


State 8

   31 expr: LPAREN . expr RPAREN

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    LPAREN  shift, and go to state 8

    expr  go to state 34


State 9

   43 estr_cond: IF . expr COLON ENDLINE stmt_list END
   44          | IF . expr COLON ENDLINE stmt_list cond_else
   45          | IF . expr COLON ENDLINE stmt_list cond_elif

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    LPAREN  shift, and go to state 8

    expr  go to state 35


State 10

   49 estr_while: WHILE . expr COLON stmt_list END

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    LPAREN  shift, and go to state 8

    expr  go to state 36


State 11

   50 estr_for: FOR . decl_var COMMA var IN var COLON stmt_list END

    ID       shift, and go to state 4
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 37
    decl_data_type  go to state 20


State 12

   27 func_def: DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    ID  shift, and go to state 38


State 13

   14 decl_data_type: DECINT .

    $default  reduce using rule 14 (decl_data_type)


State 14

   15 decl_data_type: DECREAL .

    $default  reduce using rule 15 (decl_data_type)


State 15

   16 decl_data_type: DECSTR .

    $default  reduce using rule 16 (decl_data_type)


State 16

    0 $accept: prog . $end

    $end  shift, and go to state 39


State 17

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 18

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    ENDLINE   reduce using rule 26 (func_def)
    $default  reduce using rule 2 (stmt_list)

    stmt_list       go to state 40
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 19

    5 stmt: decl_var . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 42


State 20

   12 decl_var: decl_data_type . ID
   13         | decl_data_type . ID ASSIGN expr

    ID  shift, and go to state 43


State 21

    4 stmt: definition . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 44


State 22

   19 definition: type_def .

    $default  reduce using rule 19 (definition)


State 23

   20 definition: func_def .

    $default  reduce using rule 20 (definition)


State 24

    8 stmt: expr . end_stmt
   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr

    ENDLINE  shift, and go to state 41
    PLUS     shift, and go to state 45
    MINUS    shift, and go to state 46
    TIMES    shift, and go to state 47
    DIVIDE   shift, and go to state 48

    end_stmt  go to state 49


State 25

    7 stmt: f_builtin . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 50


State 26

   39 f_builtin: f_print .

    $default  reduce using rule 39 (f_builtin)


State 27

   40 f_builtin: f_input .

    $default  reduce using rule 40 (f_builtin)


State 28

    6 stmt: estr_cond . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 51


State 29

    9 stmt: estr_while . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 52


State 30

   10 stmt: estr_for . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 53


State 31

   23 type_def: TYPE ID . COLON ENDLINE decl_field_type END

    COLON  shift, and go to state 54


State 32

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   41 f_print: PRINT expr .

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 41 (f_print)


State 33

   42 f_input: INPUT ID .

    $default  reduce using rule 42 (f_input)


State 34

   31 expr: LPAREN expr . RPAREN
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr

    RPAREN  shift, and go to state 55
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48


State 35

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   43 estr_cond: IF expr . COLON ENDLINE stmt_list END
   44          | IF expr . COLON ENDLINE stmt_list cond_else
   45          | IF expr . COLON ENDLINE stmt_list cond_elif

    COLON   shift, and go to state 56
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48


State 36

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   49 estr_while: WHILE expr . COLON stmt_list END

    COLON   shift, and go to state 57
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48


State 37

   50 estr_for: FOR decl_var . COMMA var IN var COLON stmt_list END

    COMMA  shift, and go to state 58


State 38

   27 func_def: DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    LPAREN  shift, and go to state 59


State 39

    0 $accept: prog $end .

    $default  accept


State 40

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 41

   11 end_stmt: ENDLINE .

    $default  reduce using rule 11 (end_stmt)


State 42

    5 stmt: decl_var end_stmt .

    $default  reduce using rule 5 (stmt)


State 43

   12 decl_var: decl_data_type ID .
   13         | decl_data_type ID . ASSIGN expr

    ASSIGN  shift, and go to state 60

    $default  reduce using rule 12 (decl_var)


State 44

    4 stmt: definition end_stmt .

    $default  reduce using rule 4 (stmt)


State 45

   32 expr: expr PLUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    LPAREN  shift, and go to state 8

    expr  go to state 61


State 46

   33 expr: expr MINUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    LPAREN  shift, and go to state 8

    expr  go to state 62


State 47

   34 expr: expr TIMES . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    LPAREN  shift, and go to state 8

    expr  go to state 63


State 48

   35 expr: expr DIVIDE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    LPAREN  shift, and go to state 8

    expr  go to state 64


State 49

    8 stmt: expr end_stmt .

    $default  reduce using rule 8 (stmt)


State 50

    7 stmt: f_builtin end_stmt .

    $default  reduce using rule 7 (stmt)


State 51

    6 stmt: estr_cond end_stmt .

    $default  reduce using rule 6 (stmt)


State 52

    9 stmt: estr_while end_stmt .

    $default  reduce using rule 9 (stmt)


State 53

   10 stmt: estr_for end_stmt .

    $default  reduce using rule 10 (stmt)


State 54

   23 type_def: TYPE ID COLON . ENDLINE decl_field_type END

    ENDLINE  shift, and go to state 65


State 55

   31 expr: LPAREN expr RPAREN .

    $default  reduce using rule 31 (expr)


State 56

   43 estr_cond: IF expr COLON . ENDLINE stmt_list END
   44          | IF expr COLON . ENDLINE stmt_list cond_else
   45          | IF expr COLON . ENDLINE stmt_list cond_elif

    ENDLINE  shift, and go to state 66


State 57

   49 estr_while: WHILE expr COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 67
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 58

   50 estr_for: FOR decl_var COMMA . var IN var COLON stmt_list END

    ID  shift, and go to state 68

    var  go to state 69


State 59

   27 func_def: DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list END

    ID       shift, and go to state 4
    RPAREN   shift, and go to state 70
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 71
    decl_data_type  go to state 20
    param_func      go to state 72


State 60

   13 decl_var: decl_data_type ID ASSIGN . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    LPAREN  shift, and go to state 8

    expr  go to state 73


State 61

   32 expr: expr . PLUS expr
   32     | expr PLUS expr .
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 32 (expr)


State 62

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   33     | expr MINUS expr .
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 33 (expr)


State 63

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   34     | expr TIMES expr .
   35     | expr . DIVIDE expr

    $default  reduce using rule 34 (expr)


State 64

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   35     | expr DIVIDE expr .

    $default  reduce using rule 35 (expr)


State 65

   23 type_def: TYPE ID COLON ENDLINE . decl_field_type END

    ID       shift, and go to state 4
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var         go to state 74
    decl_data_type   go to state 20
    decl_field_type  go to state 75


State 66

   43 estr_cond: IF expr COLON ENDLINE . stmt_list END
   44          | IF expr COLON ENDLINE . stmt_list cond_else
   45          | IF expr COLON ENDLINE . stmt_list cond_elif

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 76
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 67

   49 estr_while: WHILE expr COLON stmt_list . END

    END  shift, and go to state 77


State 68

   18 var: ID .

    $default  reduce using rule 18 (var)


State 69

   50 estr_for: FOR decl_var COMMA var . IN var COLON stmt_list END

    IN  shift, and go to state 78


State 70

   27 func_def: DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END

    COLON  shift, and go to state 79


State 71

   24 param_func: decl_var .
   25           | decl_var . COMMA param_func

    COMMA  shift, and go to state 80

    $default  reduce using rule 24 (param_func)


State 72

   29 func_def: DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list END

    RPAREN  shift, and go to state 81


State 73

   13 decl_var: decl_data_type ID ASSIGN expr .
   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 13 (decl_var)


State 74

   21 decl_field_type: decl_var . ENDLINE
   22                | decl_var . ENDLINE decl_field_type

    ENDLINE  shift, and go to state 82


State 75

   23 type_def: TYPE ID COLON ENDLINE decl_field_type . END

    END  shift, and go to state 83


State 76

   43 estr_cond: IF expr COLON ENDLINE stmt_list . END
   44          | IF expr COLON ENDLINE stmt_list . cond_else
   45          | IF expr COLON ENDLINE stmt_list . cond_elif

    ELIF  shift, and go to state 84
    ELSE  shift, and go to state 85
    END   shift, and go to state 86

    cond_elif  go to state 87
    cond_else  go to state 88


State 77

   49 estr_while: WHILE expr COLON stmt_list END .

    $default  reduce using rule 49 (estr_while)


State 78

   50 estr_for: FOR decl_var COMMA var IN . var COLON stmt_list END

    ID  shift, and go to state 68

    var  go to state 89


State 79

   27 func_def: DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END

    ENDLINE  shift, and go to state 90


State 80

   25 param_func: decl_var COMMA . param_func

    ID       shift, and go to state 4
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 71
    decl_data_type  go to state 20
    param_func      go to state 91


State 81

   29 func_def: DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 92


State 82

   21 decl_field_type: decl_var ENDLINE .
   22                | decl_var ENDLINE . decl_field_type

    ID       shift, and go to state 4
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 21 (decl_field_type)

    decl_var         go to state 74
    decl_data_type   go to state 20
    decl_field_type  go to state 93


State 83

   23 type_def: TYPE ID COLON ENDLINE decl_field_type END .

    $default  reduce using rule 23 (type_def)


State 84

   46 cond_elif: ELIF . expr COLON ENDLINE stmt_list cond_elif
   47          | ELIF . expr COLON ENDLINE stmt_list cond_else

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    LPAREN  shift, and go to state 8

    expr  go to state 94


State 85

   48 cond_else: ELSE . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 95


State 86

   43 estr_cond: IF expr COLON ENDLINE stmt_list END .

    $default  reduce using rule 43 (estr_cond)


State 87

   45 estr_cond: IF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 45 (estr_cond)


State 88

   44 estr_cond: IF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 44 (estr_cond)


State 89

   50 estr_for: FOR decl_var COMMA var IN var . COLON stmt_list END

    COLON  shift, and go to state 96


State 90

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 97
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 91

   25 param_func: decl_var COMMA param_func .

    $default  reduce using rule 25 (param_func)


State 92

   29 func_def: DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 98


State 93

   22 decl_field_type: decl_var ENDLINE decl_field_type .

    $default  reduce using rule 22 (decl_field_type)


State 94

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   46 cond_elif: ELIF expr . COLON ENDLINE stmt_list cond_elif
   47          | ELIF expr . COLON ENDLINE stmt_list cond_else

    COLON   shift, and go to state 99
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48


State 95

   48 cond_else: ELSE COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 100


State 96

   50 estr_for: FOR decl_var COMMA var IN var COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 101
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 97

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END

    RETURN  shift, and go to state 102
    END     shift, and go to state 103


State 98

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 104
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 99

   46 cond_elif: ELIF expr COLON . ENDLINE stmt_list cond_elif
   47          | ELIF expr COLON . ENDLINE stmt_list cond_else

    ENDLINE  shift, and go to state 105


State 100

   48 cond_else: ELSE COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 106
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 101

   50 estr_for: FOR decl_var COMMA var IN var COLON stmt_list . END

    END  shift, and go to state 107


State 102

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 108


State 103

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 27 (func_def)


State 104

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . END

    RETURN  shift, and go to state 109
    END     shift, and go to state 110


State 105

   46 cond_elif: ELIF expr COLON ENDLINE . stmt_list cond_elif
   47          | ELIF expr COLON ENDLINE . stmt_list cond_else

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 111
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 106

   48 cond_else: ELSE COLON ENDLINE stmt_list . END

    END  shift, and go to state 112


State 107

   50 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END .

    $default  reduce using rule 50 (estr_for)


State 108

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 113


State 109

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 114


State 110

   30 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 30 (func_def)


State 111

   46 cond_elif: ELIF expr COLON ENDLINE stmt_list . cond_elif
   47          | ELIF expr COLON ENDLINE stmt_list . cond_else

    ELIF  shift, and go to state 84
    ELSE  shift, and go to state 85

    cond_elif  go to state 115
    cond_else  go to state 116


State 112

   48 cond_else: ELSE COLON ENDLINE stmt_list END .

    $default  reduce using rule 48 (cond_else)


State 113

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 117


State 114

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 118


State 115

   46 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 46 (cond_elif)


State 116

   47 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 47 (cond_elif)


State 117

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 28 (func_def)


State 118

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 119


State 119

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 29 (func_def)
