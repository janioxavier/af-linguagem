Terminals unused in grammar

   SEMICOLON
   DOT
   SKIP
   TRUE
   FALSE
   BREAK
   SET
   ADDPERC
   SUBPERC
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   MAIN
   DIVIDE


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: assign end_stmt
    5     | definition end_stmt
    6     | decl_var end_stmt
    7     | estr_cond end_stmt
    8     | estr_while end_stmt
    9     | estr_for end_stmt

   10 end_stmt: ENDLINE
   11         | CONTSTMT end_stmt

   12 assign: lhs ASSIGN rhs

   13 lhs: decl_var
   14    | var

   15 rhs: var
   16    | expr
   17    | call_func

   18 call_func: ID LPAREN RPAREN
   19          | ID LPAREN data_types RPAREN

   20 decl_var: decl_data_type ID

   21 decl_data_type: DECINT
   22               | DECREAL
   23               | DECSTR
   24               | ID

   25 var: ID

   26 data_type: prim_type
   27          | abs_type

   28 prim_type: INT
   29          | REAL
   30          | STR
   31          | DICT ASSIGN dict
   32          | LIST ASSIGN list
   33          | NIL

   34 abs_type: TYPE ID

   35 dict: LBRACK key_value RBRACK

   36 key_value: data_type COLON data_type
   37          | data_type COLON data_type COMMA key_value

   38 list: LBRACE data_types RBRACE

   39 data_types: data_type
   40           | data_type COMMA data_types

   41 definition: type_def
   42           | func_def

   43 decl_field_type: decl_var ENDLINE
   44                | decl_var ENDLINE decl_field_type

   45 type_def: TYPE ID COLON ENDLINE decl_field_type END

   46 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list END
   47         | DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

   48 expr: expr opbi1 term
   49     | term

   50 opbi1: PLUS
   51      | MINUS
   52      | LT
   53      | LE
   54      | GE
   55      | GT
   56      | EQ
   57      | AND
   58      | OR
   59      | DIVM
   60      | NEQ
   61      | ADDEQ

   62 opbi2: DIV
   63      | TIMES

   64 term: term opbi2 fact
   65     | fact

   66 fact: LPAREN expr RPAREN
   67     | opuna data_type
   68     | data_type

   69 opuna: NOT
   70      | PERC
   71      | MINUS

   72 estr_cond: %empty
   73          | IF expr COLON ENDLINE stmt_list END
   74          | IF expr COLON ENDLINE stmt_list cond_else
   75          | IF expr COLON ENDLINE stmt_list cond_elif

   76 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif
   77          | ELIF expr COLON ENDLINE stmt_list cond_else

   78 cond_else: ELSE COLON ENDLINE stmt_list END

   79 estr_while: WHILE expr COLON stmt_list END

   80 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 28
REAL (259) 29
STR (260) 30
TYPE (261) 34 45
ID (262) 18 19 20 24 25 34 45 46 47
COMMA (263) 37 40 80
COLON (264) 36 37 45 46 47 73 74 75 76 77 78 79 80
SEMICOLON (265)
LPAREN (266) 18 19 46 47 66
RPAREN (267) 18 19 46 47 66
LBRACE (268) 38
RBRACE (269) 38
LBRACK (270) 35
RBRACK (271) 35
DOT (272)
PLUS (273) 50
MINUS (274) 51 71
TIMES (275) 63
DIV (276) 62
NEQ (277) 60
RETURN (278) 47
EQ (279) 56
LT (280) 52
LE (281) 53
GT (282) 55
GE (283) 54
AND (284) 57
OR (285) 58
ASSIGN (286) 12 31 32
ELIF (287) 76 77
IF (288) 73 74 75
ELSE (289) 78
WHILE (290) 79
FOR (291) 80
SKIP (292)
IN (293) 80
NOT (294) 69
NIL (295) 33
DEF (296) 46 47
TRUE (297)
FALSE (298)
BREAK (299)
SET (300)
LIST (301) 32
DIVM (302) 59
PERC (303) 70
ADDPERC (304)
SUBPERC (305)
ADDEQ (306) 61
SUBEQ (307)
DIVEQ (308)
MULTEQ (309)
DIVMEQ (310)
DICT (311) 31
MAIN (312)
END (313) 45 46 47 73 78 79 80
ENDLINE (314) 10 43 44 45 46 47 73 74 75 76 77 78
CONTSTMT (315) 11
DIVIDE (316)
DECINT (317) 21
DECREAL (318) 22
DECSTR (319) 23


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
prog (66)
    on left: 1, on right: 0
stmt_list (67)
    on left: 2 3, on right: 1 3 46 47 73 74 75 76 77 78 79 80
stmt (68)
    on left: 4 5 6 7 8 9, on right: 2 3
end_stmt (69)
    on left: 10 11, on right: 4 5 6 7 8 9 11
assign (70)
    on left: 12, on right: 4
lhs (71)
    on left: 13 14, on right: 12
rhs (72)
    on left: 15 16 17, on right: 12
call_func (73)
    on left: 18 19, on right: 17
decl_var (74)
    on left: 20, on right: 6 13 43 44 80
decl_data_type (75)
    on left: 21 22 23 24, on right: 20
var (76)
    on left: 25, on right: 14 15 80
data_type (77)
    on left: 26 27, on right: 36 37 39 40 47 67 68
prim_type (78)
    on left: 28 29 30 31 32 33, on right: 26
abs_type (79)
    on left: 34, on right: 27
dict (80)
    on left: 35, on right: 31
key_value (81)
    on left: 36 37, on right: 35 37
list (82)
    on left: 38, on right: 32
data_types (83)
    on left: 39 40, on right: 19 38 40 46 47
definition (84)
    on left: 41 42, on right: 5
decl_field_type (85)
    on left: 43 44, on right: 44 45
type_def (86)
    on left: 45, on right: 41
func_def (87)
    on left: 46 47, on right: 42
expr (88)
    on left: 48 49, on right: 16 48 66 73 74 75 76 77 79
opbi1 (89)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61, on right: 48
opbi2 (90)
    on left: 62 63, on right: 64
term (91)
    on left: 64 65, on right: 48 49 64
fact (92)
    on left: 66 67 68, on right: 64 65
opuna (93)
    on left: 69 70 71, on right: 67
estr_cond (94)
    on left: 72 73 74 75, on right: 7
cond_elif (95)
    on left: 76 77, on right: 75 76
cond_else (96)
    on left: 78, on right: 74 77
estr_while (97)
    on left: 79, on right: 8
estr_for (98)
    on left: 80, on right: 9


State 0

    0 $accept: . prog $end

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    FOR      shift, and go to state 5
    DEF      shift, and go to state 6
    DECINT   shift, and go to state 7
    DECREAL  shift, and go to state 8
    DECSTR   shift, and go to state 9

    $default  reduce using rule 72 (estr_cond)

    prog            go to state 10
    stmt_list       go to state 11
    stmt            go to state 12
    assign          go to state 13
    lhs             go to state 14
    decl_var        go to state 15
    decl_data_type  go to state 16
    var             go to state 17
    definition      go to state 18
    type_def        go to state 19
    func_def        go to state 20
    estr_cond       go to state 21
    estr_while      go to state 22
    estr_for        go to state 23


State 1

   45 type_def: TYPE . ID COLON ENDLINE decl_field_type END

    ID  shift, and go to state 24


State 2

   24 decl_data_type: ID .
   25 var: ID .

    ASSIGN    reduce using rule 25 (var)
    $default  reduce using rule 24 (decl_data_type)


State 3

   73 estr_cond: IF . expr COLON ENDLINE stmt_list END
   74          | IF . expr COLON ENDLINE stmt_list cond_else
   75          | IF . expr COLON ENDLINE stmt_list cond_elif

    INT     shift, and go to state 25
    REAL    shift, and go to state 26
    STR     shift, and go to state 27
    TYPE    shift, and go to state 28
    LPAREN  shift, and go to state 29
    MINUS   shift, and go to state 30
    NOT     shift, and go to state 31
    NIL     shift, and go to state 32
    LIST    shift, and go to state 33
    PERC    shift, and go to state 34
    DICT    shift, and go to state 35

    data_type  go to state 36
    prim_type  go to state 37
    abs_type   go to state 38
    expr       go to state 39
    term       go to state 40
    fact       go to state 41
    opuna      go to state 42


State 4

   79 estr_while: WHILE . expr COLON stmt_list END

    INT     shift, and go to state 25
    REAL    shift, and go to state 26
    STR     shift, and go to state 27
    TYPE    shift, and go to state 28
    LPAREN  shift, and go to state 29
    MINUS   shift, and go to state 30
    NOT     shift, and go to state 31
    NIL     shift, and go to state 32
    LIST    shift, and go to state 33
    PERC    shift, and go to state 34
    DICT    shift, and go to state 35

    data_type  go to state 36
    prim_type  go to state 37
    abs_type   go to state 38
    expr       go to state 43
    term       go to state 40
    fact       go to state 41
    opuna      go to state 42


State 5

   80 estr_for: FOR . decl_var COMMA var IN var COLON stmt_list END

    ID       shift, and go to state 44
    DECINT   shift, and go to state 7
    DECREAL  shift, and go to state 8
    DECSTR   shift, and go to state 9

    decl_var        go to state 45
    decl_data_type  go to state 16


State 6

   46 func_def: DEF . ID LPAREN data_types RPAREN COLON ENDLINE stmt_list END
   47         | DEF . ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

    ID  shift, and go to state 46


State 7

   21 decl_data_type: DECINT .

    $default  reduce using rule 21 (decl_data_type)


State 8

   22 decl_data_type: DECREAL .

    $default  reduce using rule 22 (decl_data_type)


State 9

   23 decl_data_type: DECSTR .

    $default  reduce using rule 23 (decl_data_type)


State 10

    0 $accept: prog . $end

    $end  shift, and go to state 47


State 11

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 12

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    FOR      shift, and go to state 5
    DEF      shift, and go to state 6
    DECINT   shift, and go to state 7
    DECREAL  shift, and go to state 8
    DECSTR   shift, and go to state 9

    ENDLINE   reduce using rule 72 (estr_cond)
    CONTSTMT  reduce using rule 72 (estr_cond)
    $default  reduce using rule 2 (stmt_list)

    stmt_list       go to state 48
    stmt            go to state 12
    assign          go to state 13
    lhs             go to state 14
    decl_var        go to state 15
    decl_data_type  go to state 16
    var             go to state 17
    definition      go to state 18
    type_def        go to state 19
    func_def        go to state 20
    estr_cond       go to state 21
    estr_while      go to state 22
    estr_for        go to state 23


State 13

    4 stmt: assign . end_stmt

    ENDLINE   shift, and go to state 49
    CONTSTMT  shift, and go to state 50

    end_stmt  go to state 51


State 14

   12 assign: lhs . ASSIGN rhs

    ASSIGN  shift, and go to state 52


State 15

    6 stmt: decl_var . end_stmt
   13 lhs: decl_var .

    ENDLINE   shift, and go to state 49
    CONTSTMT  shift, and go to state 50

    $default  reduce using rule 13 (lhs)

    end_stmt  go to state 53


State 16

   20 decl_var: decl_data_type . ID

    ID  shift, and go to state 54


State 17

   14 lhs: var .

    $default  reduce using rule 14 (lhs)


State 18

    5 stmt: definition . end_stmt

    ENDLINE   shift, and go to state 49
    CONTSTMT  shift, and go to state 50

    end_stmt  go to state 55


State 19

   41 definition: type_def .

    $default  reduce using rule 41 (definition)


State 20

   42 definition: func_def .

    $default  reduce using rule 42 (definition)


State 21

    7 stmt: estr_cond . end_stmt

    ENDLINE   shift, and go to state 49
    CONTSTMT  shift, and go to state 50

    end_stmt  go to state 56


State 22

    8 stmt: estr_while . end_stmt

    ENDLINE   shift, and go to state 49
    CONTSTMT  shift, and go to state 50

    end_stmt  go to state 57


State 23

    9 stmt: estr_for . end_stmt

    ENDLINE   shift, and go to state 49
    CONTSTMT  shift, and go to state 50

    end_stmt  go to state 58


State 24

   45 type_def: TYPE ID . COLON ENDLINE decl_field_type END

    COLON  shift, and go to state 59


State 25

   28 prim_type: INT .

    $default  reduce using rule 28 (prim_type)


State 26

   29 prim_type: REAL .

    $default  reduce using rule 29 (prim_type)


State 27

   30 prim_type: STR .

    $default  reduce using rule 30 (prim_type)


State 28

   34 abs_type: TYPE . ID

    ID  shift, and go to state 60


State 29

   66 fact: LPAREN . expr RPAREN

    INT     shift, and go to state 25
    REAL    shift, and go to state 26
    STR     shift, and go to state 27
    TYPE    shift, and go to state 28
    LPAREN  shift, and go to state 29
    MINUS   shift, and go to state 30
    NOT     shift, and go to state 31
    NIL     shift, and go to state 32
    LIST    shift, and go to state 33
    PERC    shift, and go to state 34
    DICT    shift, and go to state 35

    data_type  go to state 36
    prim_type  go to state 37
    abs_type   go to state 38
    expr       go to state 61
    term       go to state 40
    fact       go to state 41
    opuna      go to state 42


State 30

   71 opuna: MINUS .

    $default  reduce using rule 71 (opuna)


State 31

   69 opuna: NOT .

    $default  reduce using rule 69 (opuna)


State 32

   33 prim_type: NIL .

    $default  reduce using rule 33 (prim_type)


State 33

   32 prim_type: LIST . ASSIGN list

    ASSIGN  shift, and go to state 62


State 34

   70 opuna: PERC .

    $default  reduce using rule 70 (opuna)


State 35

   31 prim_type: DICT . ASSIGN dict

    ASSIGN  shift, and go to state 63


State 36

   68 fact: data_type .

    $default  reduce using rule 68 (fact)


State 37

   26 data_type: prim_type .

    $default  reduce using rule 26 (data_type)


State 38

   27 data_type: abs_type .

    $default  reduce using rule 27 (data_type)


State 39

   48 expr: expr . opbi1 term
   73 estr_cond: IF expr . COLON ENDLINE stmt_list END
   74          | IF expr . COLON ENDLINE stmt_list cond_else
   75          | IF expr . COLON ENDLINE stmt_list cond_elif

    COLON  shift, and go to state 64
    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    NEQ    shift, and go to state 67
    EQ     shift, and go to state 68
    LT     shift, and go to state 69
    LE     shift, and go to state 70
    GT     shift, and go to state 71
    GE     shift, and go to state 72
    AND    shift, and go to state 73
    OR     shift, and go to state 74
    DIVM   shift, and go to state 75
    ADDEQ  shift, and go to state 76

    opbi1  go to state 77


State 40

   49 expr: term .
   64 term: term . opbi2 fact

    TIMES  shift, and go to state 78
    DIV    shift, and go to state 79

    $default  reduce using rule 49 (expr)

    opbi2  go to state 80


State 41

   65 term: fact .

    $default  reduce using rule 65 (term)


State 42

   67 fact: opuna . data_type

    INT   shift, and go to state 25
    REAL  shift, and go to state 26
    STR   shift, and go to state 27
    TYPE  shift, and go to state 28
    NIL   shift, and go to state 32
    LIST  shift, and go to state 33
    DICT  shift, and go to state 35

    data_type  go to state 81
    prim_type  go to state 37
    abs_type   go to state 38


State 43

   48 expr: expr . opbi1 term
   79 estr_while: WHILE expr . COLON stmt_list END

    COLON  shift, and go to state 82
    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    NEQ    shift, and go to state 67
    EQ     shift, and go to state 68
    LT     shift, and go to state 69
    LE     shift, and go to state 70
    GT     shift, and go to state 71
    GE     shift, and go to state 72
    AND    shift, and go to state 73
    OR     shift, and go to state 74
    DIVM   shift, and go to state 75
    ADDEQ  shift, and go to state 76

    opbi1  go to state 77


State 44

   24 decl_data_type: ID .

    $default  reduce using rule 24 (decl_data_type)


State 45

   80 estr_for: FOR decl_var . COMMA var IN var COLON stmt_list END

    COMMA  shift, and go to state 83


State 46

   46 func_def: DEF ID . LPAREN data_types RPAREN COLON ENDLINE stmt_list END
   47         | DEF ID . LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

    LPAREN  shift, and go to state 84


State 47

    0 $accept: prog $end .

    $default  accept


State 48

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 49

   10 end_stmt: ENDLINE .

    $default  reduce using rule 10 (end_stmt)


State 50

   11 end_stmt: CONTSTMT . end_stmt

    ENDLINE   shift, and go to state 49
    CONTSTMT  shift, and go to state 50

    end_stmt  go to state 85


State 51

    4 stmt: assign end_stmt .

    $default  reduce using rule 4 (stmt)


State 52

   12 assign: lhs ASSIGN . rhs

    INT     shift, and go to state 25
    REAL    shift, and go to state 26
    STR     shift, and go to state 27
    TYPE    shift, and go to state 28
    ID      shift, and go to state 86
    LPAREN  shift, and go to state 29
    MINUS   shift, and go to state 30
    NOT     shift, and go to state 31
    NIL     shift, and go to state 32
    LIST    shift, and go to state 33
    PERC    shift, and go to state 34
    DICT    shift, and go to state 35

    rhs        go to state 87
    call_func  go to state 88
    var        go to state 89
    data_type  go to state 36
    prim_type  go to state 37
    abs_type   go to state 38
    expr       go to state 90
    term       go to state 40
    fact       go to state 41
    opuna      go to state 42


State 53

    6 stmt: decl_var end_stmt .

    $default  reduce using rule 6 (stmt)


State 54

   20 decl_var: decl_data_type ID .

    $default  reduce using rule 20 (decl_var)


State 55

    5 stmt: definition end_stmt .

    $default  reduce using rule 5 (stmt)


State 56

    7 stmt: estr_cond end_stmt .

    $default  reduce using rule 7 (stmt)


State 57

    8 stmt: estr_while end_stmt .

    $default  reduce using rule 8 (stmt)


State 58

    9 stmt: estr_for end_stmt .

    $default  reduce using rule 9 (stmt)


State 59

   45 type_def: TYPE ID COLON . ENDLINE decl_field_type END

    ENDLINE  shift, and go to state 91


State 60

   34 abs_type: TYPE ID .

    $default  reduce using rule 34 (abs_type)


State 61

   48 expr: expr . opbi1 term
   66 fact: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 92
    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NEQ     shift, and go to state 67
    EQ      shift, and go to state 68
    LT      shift, and go to state 69
    LE      shift, and go to state 70
    GT      shift, and go to state 71
    GE      shift, and go to state 72
    AND     shift, and go to state 73
    OR      shift, and go to state 74
    DIVM    shift, and go to state 75
    ADDEQ   shift, and go to state 76

    opbi1  go to state 77


State 62

   32 prim_type: LIST ASSIGN . list

    LBRACE  shift, and go to state 93

    list  go to state 94


State 63

   31 prim_type: DICT ASSIGN . dict

    LBRACK  shift, and go to state 95

    dict  go to state 96


State 64

   73 estr_cond: IF expr COLON . ENDLINE stmt_list END
   74          | IF expr COLON . ENDLINE stmt_list cond_else
   75          | IF expr COLON . ENDLINE stmt_list cond_elif

    ENDLINE  shift, and go to state 97


State 65

   50 opbi1: PLUS .

    $default  reduce using rule 50 (opbi1)


State 66

   51 opbi1: MINUS .

    $default  reduce using rule 51 (opbi1)


State 67

   60 opbi1: NEQ .

    $default  reduce using rule 60 (opbi1)


State 68

   56 opbi1: EQ .

    $default  reduce using rule 56 (opbi1)


State 69

   52 opbi1: LT .

    $default  reduce using rule 52 (opbi1)


State 70

   53 opbi1: LE .

    $default  reduce using rule 53 (opbi1)


State 71

   55 opbi1: GT .

    $default  reduce using rule 55 (opbi1)


State 72

   54 opbi1: GE .

    $default  reduce using rule 54 (opbi1)


State 73

   57 opbi1: AND .

    $default  reduce using rule 57 (opbi1)


State 74

   58 opbi1: OR .

    $default  reduce using rule 58 (opbi1)


State 75

   59 opbi1: DIVM .

    $default  reduce using rule 59 (opbi1)


State 76

   61 opbi1: ADDEQ .

    $default  reduce using rule 61 (opbi1)


State 77

   48 expr: expr opbi1 . term

    INT     shift, and go to state 25
    REAL    shift, and go to state 26
    STR     shift, and go to state 27
    TYPE    shift, and go to state 28
    LPAREN  shift, and go to state 29
    MINUS   shift, and go to state 30
    NOT     shift, and go to state 31
    NIL     shift, and go to state 32
    LIST    shift, and go to state 33
    PERC    shift, and go to state 34
    DICT    shift, and go to state 35

    data_type  go to state 36
    prim_type  go to state 37
    abs_type   go to state 38
    term       go to state 98
    fact       go to state 41
    opuna      go to state 42


State 78

   63 opbi2: TIMES .

    $default  reduce using rule 63 (opbi2)


State 79

   62 opbi2: DIV .

    $default  reduce using rule 62 (opbi2)


State 80

   64 term: term opbi2 . fact

    INT     shift, and go to state 25
    REAL    shift, and go to state 26
    STR     shift, and go to state 27
    TYPE    shift, and go to state 28
    LPAREN  shift, and go to state 29
    MINUS   shift, and go to state 30
    NOT     shift, and go to state 31
    NIL     shift, and go to state 32
    LIST    shift, and go to state 33
    PERC    shift, and go to state 34
    DICT    shift, and go to state 35

    data_type  go to state 36
    prim_type  go to state 37
    abs_type   go to state 38
    fact       go to state 99
    opuna      go to state 42


State 81

   67 fact: opuna data_type .

    $default  reduce using rule 67 (fact)


State 82

   79 estr_while: WHILE expr COLON . stmt_list END

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    FOR      shift, and go to state 5
    DEF      shift, and go to state 6
    DECINT   shift, and go to state 7
    DECREAL  shift, and go to state 8
    DECSTR   shift, and go to state 9

    $default  reduce using rule 72 (estr_cond)

    stmt_list       go to state 100
    stmt            go to state 12
    assign          go to state 13
    lhs             go to state 14
    decl_var        go to state 15
    decl_data_type  go to state 16
    var             go to state 17
    definition      go to state 18
    type_def        go to state 19
    func_def        go to state 20
    estr_cond       go to state 21
    estr_while      go to state 22
    estr_for        go to state 23


State 83

   80 estr_for: FOR decl_var COMMA . var IN var COLON stmt_list END

    ID  shift, and go to state 101

    var  go to state 102


State 84

   46 func_def: DEF ID LPAREN . data_types RPAREN COLON ENDLINE stmt_list END
   47         | DEF ID LPAREN . data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

    INT   shift, and go to state 25
    REAL  shift, and go to state 26
    STR   shift, and go to state 27
    TYPE  shift, and go to state 28
    NIL   shift, and go to state 32
    LIST  shift, and go to state 33
    DICT  shift, and go to state 35

    data_type   go to state 103
    prim_type   go to state 37
    abs_type    go to state 38
    data_types  go to state 104


State 85

   11 end_stmt: CONTSTMT end_stmt .

    $default  reduce using rule 11 (end_stmt)


State 86

   18 call_func: ID . LPAREN RPAREN
   19          | ID . LPAREN data_types RPAREN
   25 var: ID .

    LPAREN  shift, and go to state 105

    $default  reduce using rule 25 (var)


State 87

   12 assign: lhs ASSIGN rhs .

    $default  reduce using rule 12 (assign)


State 88

   17 rhs: call_func .

    $default  reduce using rule 17 (rhs)


State 89

   15 rhs: var .

    $default  reduce using rule 15 (rhs)


State 90

   16 rhs: expr .
   48 expr: expr . opbi1 term

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    NEQ    shift, and go to state 67
    EQ     shift, and go to state 68
    LT     shift, and go to state 69
    LE     shift, and go to state 70
    GT     shift, and go to state 71
    GE     shift, and go to state 72
    AND    shift, and go to state 73
    OR     shift, and go to state 74
    DIVM   shift, and go to state 75
    ADDEQ  shift, and go to state 76

    $default  reduce using rule 16 (rhs)

    opbi1  go to state 77


State 91

   45 type_def: TYPE ID COLON ENDLINE . decl_field_type END

    ID       shift, and go to state 44
    DECINT   shift, and go to state 7
    DECREAL  shift, and go to state 8
    DECSTR   shift, and go to state 9

    decl_var         go to state 106
    decl_data_type   go to state 16
    decl_field_type  go to state 107


State 92

   66 fact: LPAREN expr RPAREN .

    $default  reduce using rule 66 (fact)


State 93

   38 list: LBRACE . data_types RBRACE

    INT   shift, and go to state 25
    REAL  shift, and go to state 26
    STR   shift, and go to state 27
    TYPE  shift, and go to state 28
    NIL   shift, and go to state 32
    LIST  shift, and go to state 33
    DICT  shift, and go to state 35

    data_type   go to state 103
    prim_type   go to state 37
    abs_type    go to state 38
    data_types  go to state 108


State 94

   32 prim_type: LIST ASSIGN list .

    $default  reduce using rule 32 (prim_type)


State 95

   35 dict: LBRACK . key_value RBRACK

    INT   shift, and go to state 25
    REAL  shift, and go to state 26
    STR   shift, and go to state 27
    TYPE  shift, and go to state 28
    NIL   shift, and go to state 32
    LIST  shift, and go to state 33
    DICT  shift, and go to state 35

    data_type  go to state 109
    prim_type  go to state 37
    abs_type   go to state 38
    key_value  go to state 110


State 96

   31 prim_type: DICT ASSIGN dict .

    $default  reduce using rule 31 (prim_type)


State 97

   73 estr_cond: IF expr COLON ENDLINE . stmt_list END
   74          | IF expr COLON ENDLINE . stmt_list cond_else
   75          | IF expr COLON ENDLINE . stmt_list cond_elif

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    FOR      shift, and go to state 5
    DEF      shift, and go to state 6
    DECINT   shift, and go to state 7
    DECREAL  shift, and go to state 8
    DECSTR   shift, and go to state 9

    $default  reduce using rule 72 (estr_cond)

    stmt_list       go to state 111
    stmt            go to state 12
    assign          go to state 13
    lhs             go to state 14
    decl_var        go to state 15
    decl_data_type  go to state 16
    var             go to state 17
    definition      go to state 18
    type_def        go to state 19
    func_def        go to state 20
    estr_cond       go to state 21
    estr_while      go to state 22
    estr_for        go to state 23


State 98

   48 expr: expr opbi1 term .
   64 term: term . opbi2 fact

    TIMES  shift, and go to state 78
    DIV    shift, and go to state 79

    $default  reduce using rule 48 (expr)

    opbi2  go to state 80


State 99

   64 term: term opbi2 fact .

    $default  reduce using rule 64 (term)


State 100

   79 estr_while: WHILE expr COLON stmt_list . END

    END  shift, and go to state 112


State 101

   25 var: ID .

    $default  reduce using rule 25 (var)


State 102

   80 estr_for: FOR decl_var COMMA var . IN var COLON stmt_list END

    IN  shift, and go to state 113


State 103

   39 data_types: data_type .
   40           | data_type . COMMA data_types

    COMMA  shift, and go to state 114

    $default  reduce using rule 39 (data_types)


State 104

   46 func_def: DEF ID LPAREN data_types . RPAREN COLON ENDLINE stmt_list END
   47         | DEF ID LPAREN data_types . RPAREN COLON ENDLINE stmt_list RETURN data_type END

    RPAREN  shift, and go to state 115


State 105

   18 call_func: ID LPAREN . RPAREN
   19          | ID LPAREN . data_types RPAREN

    INT     shift, and go to state 25
    REAL    shift, and go to state 26
    STR     shift, and go to state 27
    TYPE    shift, and go to state 28
    RPAREN  shift, and go to state 116
    NIL     shift, and go to state 32
    LIST    shift, and go to state 33
    DICT    shift, and go to state 35

    data_type   go to state 103
    prim_type   go to state 37
    abs_type    go to state 38
    data_types  go to state 117


State 106

   43 decl_field_type: decl_var . ENDLINE
   44                | decl_var . ENDLINE decl_field_type

    ENDLINE  shift, and go to state 118


State 107

   45 type_def: TYPE ID COLON ENDLINE decl_field_type . END

    END  shift, and go to state 119


State 108

   38 list: LBRACE data_types . RBRACE

    RBRACE  shift, and go to state 120


State 109

   36 key_value: data_type . COLON data_type
   37          | data_type . COLON data_type COMMA key_value

    COLON  shift, and go to state 121


State 110

   35 dict: LBRACK key_value . RBRACK

    RBRACK  shift, and go to state 122


State 111

   73 estr_cond: IF expr COLON ENDLINE stmt_list . END
   74          | IF expr COLON ENDLINE stmt_list . cond_else
   75          | IF expr COLON ENDLINE stmt_list . cond_elif

    ELIF  shift, and go to state 123
    ELSE  shift, and go to state 124
    END   shift, and go to state 125

    cond_elif  go to state 126
    cond_else  go to state 127


State 112

   79 estr_while: WHILE expr COLON stmt_list END .

    $default  reduce using rule 79 (estr_while)


State 113

   80 estr_for: FOR decl_var COMMA var IN . var COLON stmt_list END

    ID  shift, and go to state 101

    var  go to state 128


State 114

   40 data_types: data_type COMMA . data_types

    INT   shift, and go to state 25
    REAL  shift, and go to state 26
    STR   shift, and go to state 27
    TYPE  shift, and go to state 28
    NIL   shift, and go to state 32
    LIST  shift, and go to state 33
    DICT  shift, and go to state 35

    data_type   go to state 103
    prim_type   go to state 37
    abs_type    go to state 38
    data_types  go to state 129


State 115

   46 func_def: DEF ID LPAREN data_types RPAREN . COLON ENDLINE stmt_list END
   47         | DEF ID LPAREN data_types RPAREN . COLON ENDLINE stmt_list RETURN data_type END

    COLON  shift, and go to state 130


State 116

   18 call_func: ID LPAREN RPAREN .

    $default  reduce using rule 18 (call_func)


State 117

   19 call_func: ID LPAREN data_types . RPAREN

    RPAREN  shift, and go to state 131


State 118

   43 decl_field_type: decl_var ENDLINE .
   44                | decl_var ENDLINE . decl_field_type

    ID       shift, and go to state 44
    DECINT   shift, and go to state 7
    DECREAL  shift, and go to state 8
    DECSTR   shift, and go to state 9

    $default  reduce using rule 43 (decl_field_type)

    decl_var         go to state 106
    decl_data_type   go to state 16
    decl_field_type  go to state 132


State 119

   45 type_def: TYPE ID COLON ENDLINE decl_field_type END .

    $default  reduce using rule 45 (type_def)


State 120

   38 list: LBRACE data_types RBRACE .

    $default  reduce using rule 38 (list)


State 121

   36 key_value: data_type COLON . data_type
   37          | data_type COLON . data_type COMMA key_value

    INT   shift, and go to state 25
    REAL  shift, and go to state 26
    STR   shift, and go to state 27
    TYPE  shift, and go to state 28
    NIL   shift, and go to state 32
    LIST  shift, and go to state 33
    DICT  shift, and go to state 35

    data_type  go to state 133
    prim_type  go to state 37
    abs_type   go to state 38


State 122

   35 dict: LBRACK key_value RBRACK .

    $default  reduce using rule 35 (dict)


State 123

   76 cond_elif: ELIF . expr COLON ENDLINE stmt_list cond_elif
   77          | ELIF . expr COLON ENDLINE stmt_list cond_else

    INT     shift, and go to state 25
    REAL    shift, and go to state 26
    STR     shift, and go to state 27
    TYPE    shift, and go to state 28
    LPAREN  shift, and go to state 29
    MINUS   shift, and go to state 30
    NOT     shift, and go to state 31
    NIL     shift, and go to state 32
    LIST    shift, and go to state 33
    PERC    shift, and go to state 34
    DICT    shift, and go to state 35

    data_type  go to state 36
    prim_type  go to state 37
    abs_type   go to state 38
    expr       go to state 134
    term       go to state 40
    fact       go to state 41
    opuna      go to state 42


State 124

   78 cond_else: ELSE . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 135


State 125

   73 estr_cond: IF expr COLON ENDLINE stmt_list END .

    $default  reduce using rule 73 (estr_cond)


State 126

   75 estr_cond: IF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 75 (estr_cond)


State 127

   74 estr_cond: IF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 74 (estr_cond)


State 128

   80 estr_for: FOR decl_var COMMA var IN var . COLON stmt_list END

    COLON  shift, and go to state 136


State 129

   40 data_types: data_type COMMA data_types .

    $default  reduce using rule 40 (data_types)


State 130

   46 func_def: DEF ID LPAREN data_types RPAREN COLON . ENDLINE stmt_list END
   47         | DEF ID LPAREN data_types RPAREN COLON . ENDLINE stmt_list RETURN data_type END

    ENDLINE  shift, and go to state 137


State 131

   19 call_func: ID LPAREN data_types RPAREN .

    $default  reduce using rule 19 (call_func)


State 132

   44 decl_field_type: decl_var ENDLINE decl_field_type .

    $default  reduce using rule 44 (decl_field_type)


State 133

   36 key_value: data_type COLON data_type .
   37          | data_type COLON data_type . COMMA key_value

    COMMA  shift, and go to state 138

    $default  reduce using rule 36 (key_value)


State 134

   48 expr: expr . opbi1 term
   76 cond_elif: ELIF expr . COLON ENDLINE stmt_list cond_elif
   77          | ELIF expr . COLON ENDLINE stmt_list cond_else

    COLON  shift, and go to state 139
    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    NEQ    shift, and go to state 67
    EQ     shift, and go to state 68
    LT     shift, and go to state 69
    LE     shift, and go to state 70
    GT     shift, and go to state 71
    GE     shift, and go to state 72
    AND    shift, and go to state 73
    OR     shift, and go to state 74
    DIVM   shift, and go to state 75
    ADDEQ  shift, and go to state 76

    opbi1  go to state 77


State 135

   78 cond_else: ELSE COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 140


State 136

   80 estr_for: FOR decl_var COMMA var IN var COLON . stmt_list END

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    FOR      shift, and go to state 5
    DEF      shift, and go to state 6
    DECINT   shift, and go to state 7
    DECREAL  shift, and go to state 8
    DECSTR   shift, and go to state 9

    $default  reduce using rule 72 (estr_cond)

    stmt_list       go to state 141
    stmt            go to state 12
    assign          go to state 13
    lhs             go to state 14
    decl_var        go to state 15
    decl_data_type  go to state 16
    var             go to state 17
    definition      go to state 18
    type_def        go to state 19
    func_def        go to state 20
    estr_cond       go to state 21
    estr_while      go to state 22
    estr_for        go to state 23


State 137

   46 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE . stmt_list END
   47         | DEF ID LPAREN data_types RPAREN COLON ENDLINE . stmt_list RETURN data_type END

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    FOR      shift, and go to state 5
    DEF      shift, and go to state 6
    DECINT   shift, and go to state 7
    DECREAL  shift, and go to state 8
    DECSTR   shift, and go to state 9

    $default  reduce using rule 72 (estr_cond)

    stmt_list       go to state 142
    stmt            go to state 12
    assign          go to state 13
    lhs             go to state 14
    decl_var        go to state 15
    decl_data_type  go to state 16
    var             go to state 17
    definition      go to state 18
    type_def        go to state 19
    func_def        go to state 20
    estr_cond       go to state 21
    estr_while      go to state 22
    estr_for        go to state 23


State 138

   37 key_value: data_type COLON data_type COMMA . key_value

    INT   shift, and go to state 25
    REAL  shift, and go to state 26
    STR   shift, and go to state 27
    TYPE  shift, and go to state 28
    NIL   shift, and go to state 32
    LIST  shift, and go to state 33
    DICT  shift, and go to state 35

    data_type  go to state 109
    prim_type  go to state 37
    abs_type   go to state 38
    key_value  go to state 143


State 139

   76 cond_elif: ELIF expr COLON . ENDLINE stmt_list cond_elif
   77          | ELIF expr COLON . ENDLINE stmt_list cond_else

    ENDLINE  shift, and go to state 144


State 140

   78 cond_else: ELSE COLON ENDLINE . stmt_list END

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    FOR      shift, and go to state 5
    DEF      shift, and go to state 6
    DECINT   shift, and go to state 7
    DECREAL  shift, and go to state 8
    DECSTR   shift, and go to state 9

    $default  reduce using rule 72 (estr_cond)

    stmt_list       go to state 145
    stmt            go to state 12
    assign          go to state 13
    lhs             go to state 14
    decl_var        go to state 15
    decl_data_type  go to state 16
    var             go to state 17
    definition      go to state 18
    type_def        go to state 19
    func_def        go to state 20
    estr_cond       go to state 21
    estr_while      go to state 22
    estr_for        go to state 23


State 141

   80 estr_for: FOR decl_var COMMA var IN var COLON stmt_list . END

    END  shift, and go to state 146


State 142

   46 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list . END
   47         | DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list . RETURN data_type END

    RETURN  shift, and go to state 147
    END     shift, and go to state 148


State 143

   37 key_value: data_type COLON data_type COMMA key_value .

    $default  reduce using rule 37 (key_value)


State 144

   76 cond_elif: ELIF expr COLON ENDLINE . stmt_list cond_elif
   77          | ELIF expr COLON ENDLINE . stmt_list cond_else

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    FOR      shift, and go to state 5
    DEF      shift, and go to state 6
    DECINT   shift, and go to state 7
    DECREAL  shift, and go to state 8
    DECSTR   shift, and go to state 9

    $default  reduce using rule 72 (estr_cond)

    stmt_list       go to state 149
    stmt            go to state 12
    assign          go to state 13
    lhs             go to state 14
    decl_var        go to state 15
    decl_data_type  go to state 16
    var             go to state 17
    definition      go to state 18
    type_def        go to state 19
    func_def        go to state 20
    estr_cond       go to state 21
    estr_while      go to state 22
    estr_for        go to state 23


State 145

   78 cond_else: ELSE COLON ENDLINE stmt_list . END

    END  shift, and go to state 150


State 146

   80 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END .

    $default  reduce using rule 80 (estr_for)


State 147

   47 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN . data_type END

    INT   shift, and go to state 25
    REAL  shift, and go to state 26
    STR   shift, and go to state 27
    TYPE  shift, and go to state 28
    NIL   shift, and go to state 32
    LIST  shift, and go to state 33
    DICT  shift, and go to state 35

    data_type  go to state 151
    prim_type  go to state 37
    abs_type   go to state 38


State 148

   46 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 46 (func_def)


State 149

   76 cond_elif: ELIF expr COLON ENDLINE stmt_list . cond_elif
   77          | ELIF expr COLON ENDLINE stmt_list . cond_else

    ELIF  shift, and go to state 123
    ELSE  shift, and go to state 124

    cond_elif  go to state 152
    cond_else  go to state 153


State 150

   78 cond_else: ELSE COLON ENDLINE stmt_list END .

    $default  reduce using rule 78 (cond_else)


State 151

   47 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type . END

    END  shift, and go to state 154


State 152

   76 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 76 (cond_elif)


State 153

   77 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 77 (cond_elif)


State 154

   47 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END .

    $default  reduce using rule 47 (func_def)
