Terminals unused in grammar

   SEMICOLON
   DOT
   WHILE
   FOR
   SKIP
   IN
   TRUE
   FALSE
   BREAK
   SET
   ADDPERC
   SUBPERC
   ADDEQ
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   MAIN
   CONTSTMT
   DIVIDE


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: assign end_stmt
    5     | definition end_stmt
    6     | decl_var end_stmt
    7     | estr_cond end_stmt
    8     | f_builtin end_stmt
    9     | expr end_stmt

   10 end_stmt: ENDLINE

   11 assign: lhs ASSIGN rhs

   12 lhs: decl_var
   13    | var

   14 rhs: expr

   15 call_func: ID LPAREN RPAREN
   16          | ID LPAREN data_types RPAREN

   17 decl_var: decl_data_type ID

   18 decl_data_type: DECINT
   19               | DECREAL
   20               | DECSTR
   21               | ID

   22 var: ID

   23 data_type: prim_type
   24          | abs_type

   25 prim_type: INT
   26          | REAL
   27          | STR
   28          | DICT ASSIGN dict
   29          | LIST ASSIGN list
   30          | NIL

   31 abs_type: ID

   32 dict: LBRACK key_value RBRACK

   33 key_value: data_type COLON data_type
   34          | data_type COLON data_type COMMA key_value

   35 list: LBRACE data_types RBRACE

   36 data_types: data_type
   37           | data_type COMMA data_types

   38 definition: type_def
   39           | func_def

   40 decl_field_type: decl_var ENDLINE
   41                | decl_var ENDLINE decl_field_type

   42 type_def: TYPE ID COLON ENDLINE decl_field_type END

   43 param_func: decl_var
   44           | decl_var COMMA param_func

   45 func_def: %empty
   46         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END
   47         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   48         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   49         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

   50 expr: expr opbi1 term
   51     | term

   52 term: term opbi2 fact
   53     | fact

   54 fact: LPAREN expr RPAREN
   55     | unaop data_type
   56     | data_type
   57     | call_func

   58 opbi1: PLUS
   59      | MINUS
   60      | LT
   61      | LE
   62      | GE
   63      | GT
   64      | EQ
   65      | AND
   66      | OR
   67      | DIVM
   68      | NEQ

   69 opbi2: DIV
   70      | TIMES

   71 unaop: NOT
   72      | PERC
   73      | MINUS

   74 f_builtin: f_print
   75          | f_input

   76 f_print: PRINT expr

   77 f_input: INPUT ID

   78 estr_cond: IF expr COLON ENDLINE stmt_list END
   79          | IF expr COLON ENDLINE stmt_list cond_else
   80          | IF expr COLON ENDLINE stmt_list cond_elif

   81 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif
   82          | ELIF expr COLON ENDLINE stmt_list cond_else

   83 cond_else: ELSE COLON ENDLINE stmt_list END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 25
REAL (259) 26
STR (260) 27
ID (261) 15 16 17 21 22 31 42 46 47 48 49 77
TYPE (262) 42
PRINT (263) 76
INPUT (264) 77
COMMA (265) 34 37 44
COLON (266) 33 34 42 46 47 48 49 78 79 80 81 82 83
SEMICOLON (267)
LPAREN (268) 15 16 46 47 48 49 54
RPAREN (269) 15 16 46 47 48 49 54
LBRACE (270) 35
RBRACE (271) 35
LBRACK (272) 32
RBRACK (273) 32
DOT (274)
PLUS (275) 58
MINUS (276) 59 73
TIMES (277) 70
DIV (278) 69
NEQ (279) 68
RETURN (280) 47 48
EQ (281) 64
LT (282) 60
LE (283) 61
GT (284) 63
GE (285) 62
AND (286) 65
OR (287) 66
ASSIGN (288) 11 28 29
ELIF (289) 81 82
IF (290) 78 79 80
ELSE (291) 83
WHILE (292)
FOR (293)
SKIP (294)
IN (295)
NOT (296) 71
NIL (297) 30
DEF (298) 46 47 48 49
TRUE (299)
FALSE (300)
BREAK (301)
SET (302)
LIST (303) 29
DIVM (304) 67
PERC (305) 72
ADDPERC (306)
SUBPERC (307)
ADDEQ (308)
SUBEQ (309)
DIVEQ (310)
MULTEQ (311)
DIVMEQ (312)
DICT (313) 28
MAIN (314)
END (315) 42 46 47 48 49 78 83
ENDLINE (316) 10 40 41 42 46 47 48 49 78 79 80 81 82 83
CONTSTMT (317)
DIVIDE (318)
DECINT (319) 18
DECREAL (320) 19
DECSTR (321) 20


Nonterminals, with rules where they appear

$accept (67)
    on left: 0
prog (68)
    on left: 1, on right: 0
stmt_list (69)
    on left: 2 3, on right: 1 3 46 47 48 49 78 79 80 81 82 83
stmt (70)
    on left: 4 5 6 7 8 9, on right: 2 3
end_stmt (71)
    on left: 10, on right: 4 5 6 7 8 9
assign (72)
    on left: 11, on right: 4
lhs (73)
    on left: 12 13, on right: 11
rhs (74)
    on left: 14, on right: 11
call_func (75)
    on left: 15 16, on right: 57
decl_var (76)
    on left: 17, on right: 6 12 40 41 43 44
decl_data_type (77)
    on left: 18 19 20 21, on right: 17
var (78)
    on left: 22, on right: 13
data_type (79)
    on left: 23 24, on right: 33 34 36 37 55 56
prim_type (80)
    on left: 25 26 27 28 29 30, on right: 23
abs_type (81)
    on left: 31, on right: 24
dict (82)
    on left: 32, on right: 28
key_value (83)
    on left: 33 34, on right: 32 34
list (84)
    on left: 35, on right: 29
data_types (85)
    on left: 36 37, on right: 16 35 37
definition (86)
    on left: 38 39, on right: 5
decl_field_type (87)
    on left: 40 41, on right: 41 42
type_def (88)
    on left: 42, on right: 38
param_func (89)
    on left: 43 44, on right: 44 48 49
func_def (90)
    on left: 45 46 47 48 49, on right: 39
expr (91)
    on left: 50 51, on right: 9 14 50 54 76 78 79 80 81 82
term (92)
    on left: 52 53, on right: 50 51 52
fact (93)
    on left: 54 55 56 57, on right: 52 53
opbi1 (94)
    on left: 58 59 60 61 62 63 64 65 66 67 68, on right: 50
opbi2 (95)
    on left: 69 70, on right: 52
unaop (96)
    on left: 71 72 73, on right: 55
f_builtin (97)
    on left: 74 75, on right: 8
f_print (98)
    on left: 76, on right: 74
f_input (99)
    on left: 77, on right: 75
estr_cond (100)
    on left: 78 79 80, on right: 7
cond_elif (101)
    on left: 81 82, on right: 80 81
cond_else (102)
    on left: 83, on right: 79 82


State 0

    0 $accept: . prog $end

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    NOT      shift, and go to state 11
    NIL      shift, and go to state 12
    DEF      shift, and go to state 13
    LIST     shift, and go to state 14
    PERC     shift, and go to state 15
    DICT     shift, and go to state 16
    DECINT   shift, and go to state 17
    DECREAL  shift, and go to state 18
    DECSTR   shift, and go to state 19

    $default  reduce using rule 45 (func_def)

    prog            go to state 20
    stmt_list       go to state 21
    stmt            go to state 22
    assign          go to state 23
    lhs             go to state 24
    call_func       go to state 25
    decl_var        go to state 26
    decl_data_type  go to state 27
    var             go to state 28
    data_type       go to state 29
    prim_type       go to state 30
    abs_type        go to state 31
    definition      go to state 32
    type_def        go to state 33
    func_def        go to state 34
    expr            go to state 35
    term            go to state 36
    fact            go to state 37
    unaop           go to state 38
    f_builtin       go to state 39
    f_print         go to state 40
    f_input         go to state 41
    estr_cond       go to state 42


State 1

   25 prim_type: INT .

    $default  reduce using rule 25 (prim_type)


State 2

   26 prim_type: REAL .

    $default  reduce using rule 26 (prim_type)


State 3

   27 prim_type: STR .

    $default  reduce using rule 27 (prim_type)


State 4

   15 call_func: ID . LPAREN RPAREN
   16          | ID . LPAREN data_types RPAREN
   21 decl_data_type: ID .
   22 var: ID .
   31 abs_type: ID .

    LPAREN  shift, and go to state 43

    ID        reduce using rule 21 (decl_data_type)
    ASSIGN    reduce using rule 22 (var)
    $default  reduce using rule 31 (abs_type)


State 5

   42 type_def: TYPE . ID COLON ENDLINE decl_field_type END

    ID  shift, and go to state 44


State 6

   76 f_print: PRINT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 45
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 11
    NIL     shift, and go to state 12
    LIST    shift, and go to state 14
    PERC    shift, and go to state 15
    DICT    shift, and go to state 16

    call_func  go to state 25
    data_type  go to state 29
    prim_type  go to state 30
    abs_type   go to state 31
    expr       go to state 46
    term       go to state 36
    fact       go to state 37
    unaop      go to state 38


State 7

   77 f_input: INPUT . ID

    ID  shift, and go to state 47


State 8

   54 fact: LPAREN . expr RPAREN

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 45
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 11
    NIL     shift, and go to state 12
    LIST    shift, and go to state 14
    PERC    shift, and go to state 15
    DICT    shift, and go to state 16

    call_func  go to state 25
    data_type  go to state 29
    prim_type  go to state 30
    abs_type   go to state 31
    expr       go to state 48
    term       go to state 36
    fact       go to state 37
    unaop      go to state 38


State 9

   73 unaop: MINUS .

    $default  reduce using rule 73 (unaop)


State 10

   78 estr_cond: IF . expr COLON ENDLINE stmt_list END
   79          | IF . expr COLON ENDLINE stmt_list cond_else
   80          | IF . expr COLON ENDLINE stmt_list cond_elif

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 45
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 11
    NIL     shift, and go to state 12
    LIST    shift, and go to state 14
    PERC    shift, and go to state 15
    DICT    shift, and go to state 16

    call_func  go to state 25
    data_type  go to state 29
    prim_type  go to state 30
    abs_type   go to state 31
    expr       go to state 49
    term       go to state 36
    fact       go to state 37
    unaop      go to state 38


State 11

   71 unaop: NOT .

    $default  reduce using rule 71 (unaop)


State 12

   30 prim_type: NIL .

    $default  reduce using rule 30 (prim_type)


State 13

   46 func_def: DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list END
   47         | DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   48         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   49         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    ID  shift, and go to state 50


State 14

   29 prim_type: LIST . ASSIGN list

    ASSIGN  shift, and go to state 51


State 15

   72 unaop: PERC .

    $default  reduce using rule 72 (unaop)


State 16

   28 prim_type: DICT . ASSIGN dict

    ASSIGN  shift, and go to state 52


State 17

   18 decl_data_type: DECINT .

    $default  reduce using rule 18 (decl_data_type)


State 18

   19 decl_data_type: DECREAL .

    $default  reduce using rule 19 (decl_data_type)


State 19

   20 decl_data_type: DECSTR .

    $default  reduce using rule 20 (decl_data_type)


State 20

    0 $accept: prog . $end

    $end  shift, and go to state 53


State 21

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 22

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    NOT      shift, and go to state 11
    NIL      shift, and go to state 12
    DEF      shift, and go to state 13
    LIST     shift, and go to state 14
    PERC     shift, and go to state 15
    DICT     shift, and go to state 16
    DECINT   shift, and go to state 17
    DECREAL  shift, and go to state 18
    DECSTR   shift, and go to state 19

    ENDLINE   reduce using rule 45 (func_def)
    $default  reduce using rule 2 (stmt_list)

    stmt_list       go to state 54
    stmt            go to state 22
    assign          go to state 23
    lhs             go to state 24
    call_func       go to state 25
    decl_var        go to state 26
    decl_data_type  go to state 27
    var             go to state 28
    data_type       go to state 29
    prim_type       go to state 30
    abs_type        go to state 31
    definition      go to state 32
    type_def        go to state 33
    func_def        go to state 34
    expr            go to state 35
    term            go to state 36
    fact            go to state 37
    unaop           go to state 38
    f_builtin       go to state 39
    f_print         go to state 40
    f_input         go to state 41
    estr_cond       go to state 42


State 23

    4 stmt: assign . end_stmt

    ENDLINE  shift, and go to state 55

    end_stmt  go to state 56


State 24

   11 assign: lhs . ASSIGN rhs

    ASSIGN  shift, and go to state 57


State 25

   57 fact: call_func .

    $default  reduce using rule 57 (fact)


State 26

    6 stmt: decl_var . end_stmt
   12 lhs: decl_var .

    ENDLINE  shift, and go to state 55

    $default  reduce using rule 12 (lhs)

    end_stmt  go to state 58


State 27

   17 decl_var: decl_data_type . ID

    ID  shift, and go to state 59


State 28

   13 lhs: var .

    $default  reduce using rule 13 (lhs)


State 29

   56 fact: data_type .

    $default  reduce using rule 56 (fact)


State 30

   23 data_type: prim_type .

    $default  reduce using rule 23 (data_type)


State 31

   24 data_type: abs_type .

    $default  reduce using rule 24 (data_type)


State 32

    5 stmt: definition . end_stmt

    ENDLINE  shift, and go to state 55

    end_stmt  go to state 60


State 33

   38 definition: type_def .

    $default  reduce using rule 38 (definition)


State 34

   39 definition: func_def .

    $default  reduce using rule 39 (definition)


State 35

    9 stmt: expr . end_stmt
   50 expr: expr . opbi1 term

    PLUS     shift, and go to state 61
    MINUS    shift, and go to state 62
    NEQ      shift, and go to state 63
    EQ       shift, and go to state 64
    LT       shift, and go to state 65
    LE       shift, and go to state 66
    GT       shift, and go to state 67
    GE       shift, and go to state 68
    AND      shift, and go to state 69
    OR       shift, and go to state 70
    DIVM     shift, and go to state 71
    ENDLINE  shift, and go to state 55

    end_stmt  go to state 72
    opbi1     go to state 73


State 36

   51 expr: term .
   52 term: term . opbi2 fact

    TIMES  shift, and go to state 74
    DIV    shift, and go to state 75

    $default  reduce using rule 51 (expr)

    opbi2  go to state 76


State 37

   53 term: fact .

    $default  reduce using rule 53 (term)


State 38

   55 fact: unaop . data_type

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 77
    NIL   shift, and go to state 12
    LIST  shift, and go to state 14
    DICT  shift, and go to state 16

    data_type  go to state 78
    prim_type  go to state 30
    abs_type   go to state 31


State 39

    8 stmt: f_builtin . end_stmt

    ENDLINE  shift, and go to state 55

    end_stmt  go to state 79


State 40

   74 f_builtin: f_print .

    $default  reduce using rule 74 (f_builtin)


State 41

   75 f_builtin: f_input .

    $default  reduce using rule 75 (f_builtin)


State 42

    7 stmt: estr_cond . end_stmt

    ENDLINE  shift, and go to state 55

    end_stmt  go to state 80


State 43

   15 call_func: ID LPAREN . RPAREN
   16          | ID LPAREN . data_types RPAREN

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 77
    RPAREN  shift, and go to state 81
    NIL     shift, and go to state 12
    LIST    shift, and go to state 14
    DICT    shift, and go to state 16

    data_type   go to state 82
    prim_type   go to state 30
    abs_type    go to state 31
    data_types  go to state 83


State 44

   42 type_def: TYPE ID . COLON ENDLINE decl_field_type END

    COLON  shift, and go to state 84


State 45

   15 call_func: ID . LPAREN RPAREN
   16          | ID . LPAREN data_types RPAREN
   31 abs_type: ID .

    LPAREN  shift, and go to state 43

    $default  reduce using rule 31 (abs_type)


State 46

   50 expr: expr . opbi1 term
   76 f_print: PRINT expr .

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    NEQ    shift, and go to state 63
    EQ     shift, and go to state 64
    LT     shift, and go to state 65
    LE     shift, and go to state 66
    GT     shift, and go to state 67
    GE     shift, and go to state 68
    AND    shift, and go to state 69
    OR     shift, and go to state 70
    DIVM   shift, and go to state 71

    $default  reduce using rule 76 (f_print)

    opbi1  go to state 73


State 47

   77 f_input: INPUT ID .

    $default  reduce using rule 77 (f_input)


State 48

   50 expr: expr . opbi1 term
   54 fact: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 85
    PLUS    shift, and go to state 61
    MINUS   shift, and go to state 62
    NEQ     shift, and go to state 63
    EQ      shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    DIVM    shift, and go to state 71

    opbi1  go to state 73


State 49

   50 expr: expr . opbi1 term
   78 estr_cond: IF expr . COLON ENDLINE stmt_list END
   79          | IF expr . COLON ENDLINE stmt_list cond_else
   80          | IF expr . COLON ENDLINE stmt_list cond_elif

    COLON  shift, and go to state 86
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    NEQ    shift, and go to state 63
    EQ     shift, and go to state 64
    LT     shift, and go to state 65
    LE     shift, and go to state 66
    GT     shift, and go to state 67
    GE     shift, and go to state 68
    AND    shift, and go to state 69
    OR     shift, and go to state 70
    DIVM   shift, and go to state 71

    opbi1  go to state 73


State 50

   46 func_def: DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list END
   47         | DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   48         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   49         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    LPAREN  shift, and go to state 87


State 51

   29 prim_type: LIST ASSIGN . list

    LBRACE  shift, and go to state 88

    list  go to state 89


State 52

   28 prim_type: DICT ASSIGN . dict

    LBRACK  shift, and go to state 90

    dict  go to state 91


State 53

    0 $accept: prog $end .

    $default  accept


State 54

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 55

   10 end_stmt: ENDLINE .

    $default  reduce using rule 10 (end_stmt)


State 56

    4 stmt: assign end_stmt .

    $default  reduce using rule 4 (stmt)


State 57

   11 assign: lhs ASSIGN . rhs

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 45
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 11
    NIL     shift, and go to state 12
    LIST    shift, and go to state 14
    PERC    shift, and go to state 15
    DICT    shift, and go to state 16

    rhs        go to state 92
    call_func  go to state 25
    data_type  go to state 29
    prim_type  go to state 30
    abs_type   go to state 31
    expr       go to state 93
    term       go to state 36
    fact       go to state 37
    unaop      go to state 38


State 58

    6 stmt: decl_var end_stmt .

    $default  reduce using rule 6 (stmt)


State 59

   17 decl_var: decl_data_type ID .

    $default  reduce using rule 17 (decl_var)


State 60

    5 stmt: definition end_stmt .

    $default  reduce using rule 5 (stmt)


State 61

   58 opbi1: PLUS .

    $default  reduce using rule 58 (opbi1)


State 62

   59 opbi1: MINUS .

    $default  reduce using rule 59 (opbi1)


State 63

   68 opbi1: NEQ .

    $default  reduce using rule 68 (opbi1)


State 64

   64 opbi1: EQ .

    $default  reduce using rule 64 (opbi1)


State 65

   60 opbi1: LT .

    $default  reduce using rule 60 (opbi1)


State 66

   61 opbi1: LE .

    $default  reduce using rule 61 (opbi1)


State 67

   63 opbi1: GT .

    $default  reduce using rule 63 (opbi1)


State 68

   62 opbi1: GE .

    $default  reduce using rule 62 (opbi1)


State 69

   65 opbi1: AND .

    $default  reduce using rule 65 (opbi1)


State 70

   66 opbi1: OR .

    $default  reduce using rule 66 (opbi1)


State 71

   67 opbi1: DIVM .

    $default  reduce using rule 67 (opbi1)


State 72

    9 stmt: expr end_stmt .

    $default  reduce using rule 9 (stmt)


State 73

   50 expr: expr opbi1 . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 45
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 11
    NIL     shift, and go to state 12
    LIST    shift, and go to state 14
    PERC    shift, and go to state 15
    DICT    shift, and go to state 16

    call_func  go to state 25
    data_type  go to state 29
    prim_type  go to state 30
    abs_type   go to state 31
    term       go to state 94
    fact       go to state 37
    unaop      go to state 38


State 74

   70 opbi2: TIMES .

    $default  reduce using rule 70 (opbi2)


State 75

   69 opbi2: DIV .

    $default  reduce using rule 69 (opbi2)


State 76

   52 term: term opbi2 . fact

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 45
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 11
    NIL     shift, and go to state 12
    LIST    shift, and go to state 14
    PERC    shift, and go to state 15
    DICT    shift, and go to state 16

    call_func  go to state 25
    data_type  go to state 29
    prim_type  go to state 30
    abs_type   go to state 31
    fact       go to state 95
    unaop      go to state 38


State 77

   31 abs_type: ID .

    $default  reduce using rule 31 (abs_type)


State 78

   55 fact: unaop data_type .

    $default  reduce using rule 55 (fact)


State 79

    8 stmt: f_builtin end_stmt .

    $default  reduce using rule 8 (stmt)


State 80

    7 stmt: estr_cond end_stmt .

    $default  reduce using rule 7 (stmt)


State 81

   15 call_func: ID LPAREN RPAREN .

    $default  reduce using rule 15 (call_func)


State 82

   36 data_types: data_type .
   37           | data_type . COMMA data_types

    COMMA  shift, and go to state 96

    $default  reduce using rule 36 (data_types)


State 83

   16 call_func: ID LPAREN data_types . RPAREN

    RPAREN  shift, and go to state 97


State 84

   42 type_def: TYPE ID COLON . ENDLINE decl_field_type END

    ENDLINE  shift, and go to state 98


State 85

   54 fact: LPAREN expr RPAREN .

    $default  reduce using rule 54 (fact)


State 86

   78 estr_cond: IF expr COLON . ENDLINE stmt_list END
   79          | IF expr COLON . ENDLINE stmt_list cond_else
   80          | IF expr COLON . ENDLINE stmt_list cond_elif

    ENDLINE  shift, and go to state 99


State 87

   46 func_def: DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list END
   47         | DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   48         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   49         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list END

    ID       shift, and go to state 100
    RPAREN   shift, and go to state 101
    DECINT   shift, and go to state 17
    DECREAL  shift, and go to state 18
    DECSTR   shift, and go to state 19

    decl_var        go to state 102
    decl_data_type  go to state 27
    param_func      go to state 103


State 88

   35 list: LBRACE . data_types RBRACE

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 77
    NIL   shift, and go to state 12
    LIST  shift, and go to state 14
    DICT  shift, and go to state 16

    data_type   go to state 82
    prim_type   go to state 30
    abs_type    go to state 31
    data_types  go to state 104


State 89

   29 prim_type: LIST ASSIGN list .

    $default  reduce using rule 29 (prim_type)


State 90

   32 dict: LBRACK . key_value RBRACK

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 77
    NIL   shift, and go to state 12
    LIST  shift, and go to state 14
    DICT  shift, and go to state 16

    data_type  go to state 105
    prim_type  go to state 30
    abs_type   go to state 31
    key_value  go to state 106


State 91

   28 prim_type: DICT ASSIGN dict .

    $default  reduce using rule 28 (prim_type)


State 92

   11 assign: lhs ASSIGN rhs .

    $default  reduce using rule 11 (assign)


State 93

   14 rhs: expr .
   50 expr: expr . opbi1 term

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    NEQ    shift, and go to state 63
    EQ     shift, and go to state 64
    LT     shift, and go to state 65
    LE     shift, and go to state 66
    GT     shift, and go to state 67
    GE     shift, and go to state 68
    AND    shift, and go to state 69
    OR     shift, and go to state 70
    DIVM   shift, and go to state 71

    $default  reduce using rule 14 (rhs)

    opbi1  go to state 73


State 94

   50 expr: expr opbi1 term .
   52 term: term . opbi2 fact

    TIMES  shift, and go to state 74
    DIV    shift, and go to state 75

    $default  reduce using rule 50 (expr)

    opbi2  go to state 76


State 95

   52 term: term opbi2 fact .

    $default  reduce using rule 52 (term)


State 96

   37 data_types: data_type COMMA . data_types

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 77
    NIL   shift, and go to state 12
    LIST  shift, and go to state 14
    DICT  shift, and go to state 16

    data_type   go to state 82
    prim_type   go to state 30
    abs_type    go to state 31
    data_types  go to state 107


State 97

   16 call_func: ID LPAREN data_types RPAREN .

    $default  reduce using rule 16 (call_func)


State 98

   42 type_def: TYPE ID COLON ENDLINE . decl_field_type END

    ID       shift, and go to state 100
    DECINT   shift, and go to state 17
    DECREAL  shift, and go to state 18
    DECSTR   shift, and go to state 19

    decl_var         go to state 108
    decl_data_type   go to state 27
    decl_field_type  go to state 109


State 99

   78 estr_cond: IF expr COLON ENDLINE . stmt_list END
   79          | IF expr COLON ENDLINE . stmt_list cond_else
   80          | IF expr COLON ENDLINE . stmt_list cond_elif

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    NOT      shift, and go to state 11
    NIL      shift, and go to state 12
    DEF      shift, and go to state 13
    LIST     shift, and go to state 14
    PERC     shift, and go to state 15
    DICT     shift, and go to state 16
    DECINT   shift, and go to state 17
    DECREAL  shift, and go to state 18
    DECSTR   shift, and go to state 19

    $default  reduce using rule 45 (func_def)

    stmt_list       go to state 110
    stmt            go to state 22
    assign          go to state 23
    lhs             go to state 24
    call_func       go to state 25
    decl_var        go to state 26
    decl_data_type  go to state 27
    var             go to state 28
    data_type       go to state 29
    prim_type       go to state 30
    abs_type        go to state 31
    definition      go to state 32
    type_def        go to state 33
    func_def        go to state 34
    expr            go to state 35
    term            go to state 36
    fact            go to state 37
    unaop           go to state 38
    f_builtin       go to state 39
    f_print         go to state 40
    f_input         go to state 41
    estr_cond       go to state 42


State 100

   21 decl_data_type: ID .

    $default  reduce using rule 21 (decl_data_type)


State 101

   46 func_def: DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list END
   47         | DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END

    COLON  shift, and go to state 111


State 102

   43 param_func: decl_var .
   44           | decl_var . COMMA param_func

    COMMA  shift, and go to state 112

    $default  reduce using rule 43 (param_func)


State 103

   48 func_def: DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   49         | DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list END

    RPAREN  shift, and go to state 113


State 104

   35 list: LBRACE data_types . RBRACE

    RBRACE  shift, and go to state 114


State 105

   33 key_value: data_type . COLON data_type
   34          | data_type . COLON data_type COMMA key_value

    COLON  shift, and go to state 115


State 106

   32 dict: LBRACK key_value . RBRACK

    RBRACK  shift, and go to state 116


State 107

   37 data_types: data_type COMMA data_types .

    $default  reduce using rule 37 (data_types)


State 108

   40 decl_field_type: decl_var . ENDLINE
   41                | decl_var . ENDLINE decl_field_type

    ENDLINE  shift, and go to state 117


State 109

   42 type_def: TYPE ID COLON ENDLINE decl_field_type . END

    END  shift, and go to state 118


State 110

   78 estr_cond: IF expr COLON ENDLINE stmt_list . END
   79          | IF expr COLON ENDLINE stmt_list . cond_else
   80          | IF expr COLON ENDLINE stmt_list . cond_elif

    ELIF  shift, and go to state 119
    ELSE  shift, and go to state 120
    END   shift, and go to state 121

    cond_elif  go to state 122
    cond_else  go to state 123


State 111

   46 func_def: DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list END
   47         | DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END

    ENDLINE  shift, and go to state 124


State 112

   44 param_func: decl_var COMMA . param_func

    ID       shift, and go to state 100
    DECINT   shift, and go to state 17
    DECREAL  shift, and go to state 18
    DECSTR   shift, and go to state 19

    decl_var        go to state 102
    decl_data_type  go to state 27
    param_func      go to state 125


State 113

   48 func_def: DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END
   49         | DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 126


State 114

   35 list: LBRACE data_types RBRACE .

    $default  reduce using rule 35 (list)


State 115

   33 key_value: data_type COLON . data_type
   34          | data_type COLON . data_type COMMA key_value

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 77
    NIL   shift, and go to state 12
    LIST  shift, and go to state 14
    DICT  shift, and go to state 16

    data_type  go to state 127
    prim_type  go to state 30
    abs_type   go to state 31


State 116

   32 dict: LBRACK key_value RBRACK .

    $default  reduce using rule 32 (dict)


State 117

   40 decl_field_type: decl_var ENDLINE .
   41                | decl_var ENDLINE . decl_field_type

    ID       shift, and go to state 100
    DECINT   shift, and go to state 17
    DECREAL  shift, and go to state 18
    DECSTR   shift, and go to state 19

    $default  reduce using rule 40 (decl_field_type)

    decl_var         go to state 108
    decl_data_type   go to state 27
    decl_field_type  go to state 128


State 118

   42 type_def: TYPE ID COLON ENDLINE decl_field_type END .

    $default  reduce using rule 42 (type_def)


State 119

   81 cond_elif: ELIF . expr COLON ENDLINE stmt_list cond_elif
   82          | ELIF . expr COLON ENDLINE stmt_list cond_else

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 45
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 11
    NIL     shift, and go to state 12
    LIST    shift, and go to state 14
    PERC    shift, and go to state 15
    DICT    shift, and go to state 16

    call_func  go to state 25
    data_type  go to state 29
    prim_type  go to state 30
    abs_type   go to state 31
    expr       go to state 129
    term       go to state 36
    fact       go to state 37
    unaop      go to state 38


State 120

   83 cond_else: ELSE . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 130


State 121

   78 estr_cond: IF expr COLON ENDLINE stmt_list END .

    $default  reduce using rule 78 (estr_cond)


State 122

   80 estr_cond: IF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 80 (estr_cond)


State 123

   79 estr_cond: IF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 79 (estr_cond)


State 124

   46 func_def: DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list END
   47         | DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    NOT      shift, and go to state 11
    NIL      shift, and go to state 12
    DEF      shift, and go to state 13
    LIST     shift, and go to state 14
    PERC     shift, and go to state 15
    DICT     shift, and go to state 16
    DECINT   shift, and go to state 17
    DECREAL  shift, and go to state 18
    DECSTR   shift, and go to state 19

    $default  reduce using rule 45 (func_def)

    stmt_list       go to state 131
    stmt            go to state 22
    assign          go to state 23
    lhs             go to state 24
    call_func       go to state 25
    decl_var        go to state 26
    decl_data_type  go to state 27
    var             go to state 28
    data_type       go to state 29
    prim_type       go to state 30
    abs_type        go to state 31
    definition      go to state 32
    type_def        go to state 33
    func_def        go to state 34
    expr            go to state 35
    term            go to state 36
    fact            go to state 37
    unaop           go to state 38
    f_builtin       go to state 39
    f_print         go to state 40
    f_input         go to state 41
    estr_cond       go to state 42


State 125

   44 param_func: decl_var COMMA param_func .

    $default  reduce using rule 44 (param_func)


State 126

   48 func_def: DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END
   49         | DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 132


State 127

   33 key_value: data_type COLON data_type .
   34          | data_type COLON data_type . COMMA key_value

    COMMA  shift, and go to state 133

    $default  reduce using rule 33 (key_value)


State 128

   41 decl_field_type: decl_var ENDLINE decl_field_type .

    $default  reduce using rule 41 (decl_field_type)


State 129

   50 expr: expr . opbi1 term
   81 cond_elif: ELIF expr . COLON ENDLINE stmt_list cond_elif
   82          | ELIF expr . COLON ENDLINE stmt_list cond_else

    COLON  shift, and go to state 134
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    NEQ    shift, and go to state 63
    EQ     shift, and go to state 64
    LT     shift, and go to state 65
    LE     shift, and go to state 66
    GT     shift, and go to state 67
    GE     shift, and go to state 68
    AND    shift, and go to state 69
    OR     shift, and go to state 70
    DIVM   shift, and go to state 71

    opbi1  go to state 73


State 130

   83 cond_else: ELSE COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 135


State 131

   46 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . END
   47         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END

    RETURN  shift, and go to state 136
    END     shift, and go to state 137


State 132

   48 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END
   49         | DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    NOT      shift, and go to state 11
    NIL      shift, and go to state 12
    DEF      shift, and go to state 13
    LIST     shift, and go to state 14
    PERC     shift, and go to state 15
    DICT     shift, and go to state 16
    DECINT   shift, and go to state 17
    DECREAL  shift, and go to state 18
    DECSTR   shift, and go to state 19

    $default  reduce using rule 45 (func_def)

    stmt_list       go to state 138
    stmt            go to state 22
    assign          go to state 23
    lhs             go to state 24
    call_func       go to state 25
    decl_var        go to state 26
    decl_data_type  go to state 27
    var             go to state 28
    data_type       go to state 29
    prim_type       go to state 30
    abs_type        go to state 31
    definition      go to state 32
    type_def        go to state 33
    func_def        go to state 34
    expr            go to state 35
    term            go to state 36
    fact            go to state 37
    unaop           go to state 38
    f_builtin       go to state 39
    f_print         go to state 40
    f_input         go to state 41
    estr_cond       go to state 42


State 133

   34 key_value: data_type COLON data_type COMMA . key_value

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 77
    NIL   shift, and go to state 12
    LIST  shift, and go to state 14
    DICT  shift, and go to state 16

    data_type  go to state 105
    prim_type  go to state 30
    abs_type   go to state 31
    key_value  go to state 139


State 134

   81 cond_elif: ELIF expr COLON . ENDLINE stmt_list cond_elif
   82          | ELIF expr COLON . ENDLINE stmt_list cond_else

    ENDLINE  shift, and go to state 140


State 135

   83 cond_else: ELSE COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    NOT      shift, and go to state 11
    NIL      shift, and go to state 12
    DEF      shift, and go to state 13
    LIST     shift, and go to state 14
    PERC     shift, and go to state 15
    DICT     shift, and go to state 16
    DECINT   shift, and go to state 17
    DECREAL  shift, and go to state 18
    DECSTR   shift, and go to state 19

    $default  reduce using rule 45 (func_def)

    stmt_list       go to state 141
    stmt            go to state 22
    assign          go to state 23
    lhs             go to state 24
    call_func       go to state 25
    decl_var        go to state 26
    decl_data_type  go to state 27
    var             go to state 28
    data_type       go to state 29
    prim_type       go to state 30
    abs_type        go to state 31
    definition      go to state 32
    type_def        go to state 33
    func_def        go to state 34
    expr            go to state 35
    term            go to state 36
    fact            go to state 37
    unaop           go to state 38
    f_builtin       go to state 39
    f_print         go to state 40
    f_input         go to state 41
    estr_cond       go to state 42


State 136

   47 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 142


State 137

   46 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 46 (func_def)


State 138

   48 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END
   49         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . END

    RETURN  shift, and go to state 143
    END     shift, and go to state 144


State 139

   34 key_value: data_type COLON data_type COMMA key_value .

    $default  reduce using rule 34 (key_value)


State 140

   81 cond_elif: ELIF expr COLON ENDLINE . stmt_list cond_elif
   82          | ELIF expr COLON ENDLINE . stmt_list cond_else

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    NOT      shift, and go to state 11
    NIL      shift, and go to state 12
    DEF      shift, and go to state 13
    LIST     shift, and go to state 14
    PERC     shift, and go to state 15
    DICT     shift, and go to state 16
    DECINT   shift, and go to state 17
    DECREAL  shift, and go to state 18
    DECSTR   shift, and go to state 19

    $default  reduce using rule 45 (func_def)

    stmt_list       go to state 145
    stmt            go to state 22
    assign          go to state 23
    lhs             go to state 24
    call_func       go to state 25
    decl_var        go to state 26
    decl_data_type  go to state 27
    var             go to state 28
    data_type       go to state 29
    prim_type       go to state 30
    abs_type        go to state 31
    definition      go to state 32
    type_def        go to state 33
    func_def        go to state 34
    expr            go to state 35
    term            go to state 36
    fact            go to state 37
    unaop           go to state 38
    f_builtin       go to state 39
    f_print         go to state 40
    f_input         go to state 41
    estr_cond       go to state 42


State 141

   83 cond_else: ELSE COLON ENDLINE stmt_list . END

    END  shift, and go to state 146


State 142

   47 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 147


State 143

   48 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 148


State 144

   49 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 49 (func_def)


State 145

   81 cond_elif: ELIF expr COLON ENDLINE stmt_list . cond_elif
   82          | ELIF expr COLON ENDLINE stmt_list . cond_else

    ELIF  shift, and go to state 119
    ELSE  shift, and go to state 120

    cond_elif  go to state 149
    cond_else  go to state 150


State 146

   83 cond_else: ELSE COLON ENDLINE stmt_list END .

    $default  reduce using rule 83 (cond_else)


State 147

   47 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 151


State 148

   48 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 152


State 149

   81 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 81 (cond_elif)


State 150

   82 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 82 (cond_elif)


State 151

   47 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 47 (func_def)


State 152

   48 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 153


State 153

   48 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 48 (func_def)
