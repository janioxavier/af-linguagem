Terminals unused in grammar

   SEMICOLON
   DOT
   ELIF
   IF
   ELSE
   WHILE
   FOR
   SKIP
   IN
   TRUE
   FALSE
   BREAK
   SET
   ADDPERC
   SUBPERC
   ADDEQ
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   MAIN
   DIVIDE


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: assign end_stmt
    5     | definition end_stmt
    6     | decl_var end_stmt

    7 end_stmt: ENDLINE
    8         | CONTSTMT end_stmt

    9 assign: lhs ASSIGN rhs

   10 lhs: decl_var
   11    | var

   12 rhs: var
   13    | expr
   14    | call_func

   15 call_func: ID LPAREN RPAREN
   16          | ID LPAREN data_types RPAREN

   17 decl_var: decl_data_type ID

   18 decl_data_type: DECINT
   19               | DECREAL
   20               | DECSTR
   21               | ID

   22 var: ID

   23 data_type: prim_type
   24          | abs_type

   25 prim_type: INT
   26          | REAL
   27          | STR
   28          | DICT ASSIGN dict
   29          | LIST ASSIGN list
   30          | NIL

   31 abs_type: TYPE ID

   32 dict: LBRACK key_value RBRACK

   33 key_value: data_type COLON data_type
   34          | data_type COLON data_type COMMA key_value

   35 list: LBRACE data_types RBRACE

   36 data_types: data_type
   37           | data_type COMMA data_types

   38 definition: type_def
   39           | func_def

   40 decl_field_type: decl_var ENDLINE
   41                | decl_var ENDLINE decl_field_type

   42 type_def: TYPE ID COLON ENDLINE decl_field_type END

   43 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list END
   44         | DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

   45 expr: expr opbi1 term
   46     | term

   47 opbi1: PLUS
   48      | MINUS
   49      | LT
   50      | LE
   51      | GE
   52      | GT
   53      | EQ
   54      | AND
   55      | OR
   56      | DIVM
   57      | NEQ

   58 opbi2: DIV
   59      | TIMES

   60 term: term opbi2 fact
   61     | fact

   62 fact: LPAREN expr RPAREN
   63     | unaop data_type
   64     | data_type

   65 unaop: NOT
   66      | PERC
   67      | MINUS


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 25
REAL (259) 26
STR (260) 27
TYPE (261) 31 42
ID (262) 15 16 17 21 22 31 42 43 44
COMMA (263) 34 37
COLON (264) 33 34 42 43 44
SEMICOLON (265)
LPAREN (266) 15 16 43 44 62
RPAREN (267) 15 16 43 44 62
LBRACE (268) 35
RBRACE (269) 35
LBRACK (270) 32
RBRACK (271) 32
DOT (272)
PLUS (273) 47
MINUS (274) 48 67
TIMES (275) 59
DIV (276) 58
NEQ (277) 57
RETURN (278) 44
EQ (279) 53
LT (280) 49
LE (281) 50
GT (282) 52
GE (283) 51
AND (284) 54
OR (285) 55
ASSIGN (286) 9 28 29
ELIF (287)
IF (288)
ELSE (289)
WHILE (290)
FOR (291)
SKIP (292)
IN (293)
NOT (294) 65
NIL (295) 30
DEF (296) 43 44
TRUE (297)
FALSE (298)
BREAK (299)
SET (300)
LIST (301) 29
DIVM (302) 56
PERC (303) 66
ADDPERC (304)
SUBPERC (305)
ADDEQ (306)
SUBEQ (307)
DIVEQ (308)
MULTEQ (309)
DIVMEQ (310)
DICT (311) 28
MAIN (312)
END (313) 42 43 44
ENDLINE (314) 7 40 41 42 43 44
CONTSTMT (315) 8
DIVIDE (316)
DECINT (317) 18
DECREAL (318) 19
DECSTR (319) 20


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
prog (66)
    on left: 1, on right: 0
stmt_list (67)
    on left: 2 3, on right: 1 3 43 44
stmt (68)
    on left: 4 5 6, on right: 2 3
end_stmt (69)
    on left: 7 8, on right: 4 5 6 8
assign (70)
    on left: 9, on right: 4
lhs (71)
    on left: 10 11, on right: 9
rhs (72)
    on left: 12 13 14, on right: 9
call_func (73)
    on left: 15 16, on right: 14
decl_var (74)
    on left: 17, on right: 6 10 40 41
decl_data_type (75)
    on left: 18 19 20 21, on right: 17
var (76)
    on left: 22, on right: 11 12
data_type (77)
    on left: 23 24, on right: 33 34 36 37 44 63 64
prim_type (78)
    on left: 25 26 27 28 29 30, on right: 23
abs_type (79)
    on left: 31, on right: 24
dict (80)
    on left: 32, on right: 28
key_value (81)
    on left: 33 34, on right: 32 34
list (82)
    on left: 35, on right: 29
data_types (83)
    on left: 36 37, on right: 16 35 37 43 44
definition (84)
    on left: 38 39, on right: 5
decl_field_type (85)
    on left: 40 41, on right: 41 42
type_def (86)
    on left: 42, on right: 38
func_def (87)
    on left: 43 44, on right: 39
expr (88)
    on left: 45 46, on right: 13 45 62
opbi1 (89)
    on left: 47 48 49 50 51 52 53 54 55 56 57, on right: 45
opbi2 (90)
    on left: 58 59, on right: 60
term (91)
    on left: 60 61, on right: 45 46 60
fact (92)
    on left: 62 63 64, on right: 60 61
unaop (93)
    on left: 65 66 67, on right: 63


State 0

    0 $accept: . prog $end

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    DEF      shift, and go to state 3
    DECINT   shift, and go to state 4
    DECREAL  shift, and go to state 5
    DECSTR   shift, and go to state 6

    prog            go to state 7
    stmt_list       go to state 8
    stmt            go to state 9
    assign          go to state 10
    lhs             go to state 11
    decl_var        go to state 12
    decl_data_type  go to state 13
    var             go to state 14
    definition      go to state 15
    type_def        go to state 16
    func_def        go to state 17


State 1

   42 type_def: TYPE . ID COLON ENDLINE decl_field_type END

    ID  shift, and go to state 18


State 2

   21 decl_data_type: ID .
   22 var: ID .

    ASSIGN    reduce using rule 22 (var)
    $default  reduce using rule 21 (decl_data_type)


State 3

   43 func_def: DEF . ID LPAREN data_types RPAREN COLON ENDLINE stmt_list END
   44         | DEF . ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

    ID  shift, and go to state 19


State 4

   18 decl_data_type: DECINT .

    $default  reduce using rule 18 (decl_data_type)


State 5

   19 decl_data_type: DECREAL .

    $default  reduce using rule 19 (decl_data_type)


State 6

   20 decl_data_type: DECSTR .

    $default  reduce using rule 20 (decl_data_type)


State 7

    0 $accept: prog . $end

    $end  shift, and go to state 20


State 8

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 9

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    DEF      shift, and go to state 3
    DECINT   shift, and go to state 4
    DECREAL  shift, and go to state 5
    DECSTR   shift, and go to state 6

    $default  reduce using rule 2 (stmt_list)

    stmt_list       go to state 21
    stmt            go to state 9
    assign          go to state 10
    lhs             go to state 11
    decl_var        go to state 12
    decl_data_type  go to state 13
    var             go to state 14
    definition      go to state 15
    type_def        go to state 16
    func_def        go to state 17


State 10

    4 stmt: assign . end_stmt

    ENDLINE   shift, and go to state 22
    CONTSTMT  shift, and go to state 23

    end_stmt  go to state 24


State 11

    9 assign: lhs . ASSIGN rhs

    ASSIGN  shift, and go to state 25


State 12

    6 stmt: decl_var . end_stmt
   10 lhs: decl_var .

    ENDLINE   shift, and go to state 22
    CONTSTMT  shift, and go to state 23

    $default  reduce using rule 10 (lhs)

    end_stmt  go to state 26


State 13

   17 decl_var: decl_data_type . ID

    ID  shift, and go to state 27


State 14

   11 lhs: var .

    $default  reduce using rule 11 (lhs)


State 15

    5 stmt: definition . end_stmt

    ENDLINE   shift, and go to state 22
    CONTSTMT  shift, and go to state 23

    end_stmt  go to state 28


State 16

   38 definition: type_def .

    $default  reduce using rule 38 (definition)


State 17

   39 definition: func_def .

    $default  reduce using rule 39 (definition)


State 18

   42 type_def: TYPE ID . COLON ENDLINE decl_field_type END

    COLON  shift, and go to state 29


State 19

   43 func_def: DEF ID . LPAREN data_types RPAREN COLON ENDLINE stmt_list END
   44         | DEF ID . LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

    LPAREN  shift, and go to state 30


State 20

    0 $accept: prog $end .

    $default  accept


State 21

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 22

    7 end_stmt: ENDLINE .

    $default  reduce using rule 7 (end_stmt)


State 23

    8 end_stmt: CONTSTMT . end_stmt

    ENDLINE   shift, and go to state 22
    CONTSTMT  shift, and go to state 23

    end_stmt  go to state 31


State 24

    4 stmt: assign end_stmt .

    $default  reduce using rule 4 (stmt)


State 25

    9 assign: lhs ASSIGN . rhs

    INT     shift, and go to state 32
    REAL    shift, and go to state 33
    STR     shift, and go to state 34
    TYPE    shift, and go to state 35
    ID      shift, and go to state 36
    LPAREN  shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39
    NIL     shift, and go to state 40
    LIST    shift, and go to state 41
    PERC    shift, and go to state 42
    DICT    shift, and go to state 43

    rhs        go to state 44
    call_func  go to state 45
    var        go to state 46
    data_type  go to state 47
    prim_type  go to state 48
    abs_type   go to state 49
    expr       go to state 50
    term       go to state 51
    fact       go to state 52
    unaop      go to state 53


State 26

    6 stmt: decl_var end_stmt .

    $default  reduce using rule 6 (stmt)


State 27

   17 decl_var: decl_data_type ID .

    $default  reduce using rule 17 (decl_var)


State 28

    5 stmt: definition end_stmt .

    $default  reduce using rule 5 (stmt)


State 29

   42 type_def: TYPE ID COLON . ENDLINE decl_field_type END

    ENDLINE  shift, and go to state 54


State 30

   43 func_def: DEF ID LPAREN . data_types RPAREN COLON ENDLINE stmt_list END
   44         | DEF ID LPAREN . data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

    INT   shift, and go to state 32
    REAL  shift, and go to state 33
    STR   shift, and go to state 34
    TYPE  shift, and go to state 35
    NIL   shift, and go to state 40
    LIST  shift, and go to state 41
    DICT  shift, and go to state 43

    data_type   go to state 55
    prim_type   go to state 48
    abs_type    go to state 49
    data_types  go to state 56


State 31

    8 end_stmt: CONTSTMT end_stmt .

    $default  reduce using rule 8 (end_stmt)


State 32

   25 prim_type: INT .

    $default  reduce using rule 25 (prim_type)


State 33

   26 prim_type: REAL .

    $default  reduce using rule 26 (prim_type)


State 34

   27 prim_type: STR .

    $default  reduce using rule 27 (prim_type)


State 35

   31 abs_type: TYPE . ID

    ID  shift, and go to state 57


State 36

   15 call_func: ID . LPAREN RPAREN
   16          | ID . LPAREN data_types RPAREN
   22 var: ID .

    LPAREN  shift, and go to state 58

    $default  reduce using rule 22 (var)


State 37

   62 fact: LPAREN . expr RPAREN

    INT     shift, and go to state 32
    REAL    shift, and go to state 33
    STR     shift, and go to state 34
    TYPE    shift, and go to state 35
    LPAREN  shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39
    NIL     shift, and go to state 40
    LIST    shift, and go to state 41
    PERC    shift, and go to state 42
    DICT    shift, and go to state 43

    data_type  go to state 47
    prim_type  go to state 48
    abs_type   go to state 49
    expr       go to state 59
    term       go to state 51
    fact       go to state 52
    unaop      go to state 53


State 38

   67 unaop: MINUS .

    $default  reduce using rule 67 (unaop)


State 39

   65 unaop: NOT .

    $default  reduce using rule 65 (unaop)


State 40

   30 prim_type: NIL .

    $default  reduce using rule 30 (prim_type)


State 41

   29 prim_type: LIST . ASSIGN list

    ASSIGN  shift, and go to state 60


State 42

   66 unaop: PERC .

    $default  reduce using rule 66 (unaop)


State 43

   28 prim_type: DICT . ASSIGN dict

    ASSIGN  shift, and go to state 61


State 44

    9 assign: lhs ASSIGN rhs .

    $default  reduce using rule 9 (assign)


State 45

   14 rhs: call_func .

    $default  reduce using rule 14 (rhs)


State 46

   12 rhs: var .

    $default  reduce using rule 12 (rhs)


State 47

   64 fact: data_type .

    $default  reduce using rule 64 (fact)


State 48

   23 data_type: prim_type .

    $default  reduce using rule 23 (data_type)


State 49

   24 data_type: abs_type .

    $default  reduce using rule 24 (data_type)


State 50

   13 rhs: expr .
   45 expr: expr . opbi1 term

    PLUS   shift, and go to state 62
    MINUS  shift, and go to state 63
    NEQ    shift, and go to state 64
    EQ     shift, and go to state 65
    LT     shift, and go to state 66
    LE     shift, and go to state 67
    GT     shift, and go to state 68
    GE     shift, and go to state 69
    AND    shift, and go to state 70
    OR     shift, and go to state 71
    DIVM   shift, and go to state 72

    $default  reduce using rule 13 (rhs)

    opbi1  go to state 73


State 51

   46 expr: term .
   60 term: term . opbi2 fact

    TIMES  shift, and go to state 74
    DIV    shift, and go to state 75

    $default  reduce using rule 46 (expr)

    opbi2  go to state 76


State 52

   61 term: fact .

    $default  reduce using rule 61 (term)


State 53

   63 fact: unaop . data_type

    INT   shift, and go to state 32
    REAL  shift, and go to state 33
    STR   shift, and go to state 34
    TYPE  shift, and go to state 35
    NIL   shift, and go to state 40
    LIST  shift, and go to state 41
    DICT  shift, and go to state 43

    data_type  go to state 77
    prim_type  go to state 48
    abs_type   go to state 49


State 54

   42 type_def: TYPE ID COLON ENDLINE . decl_field_type END

    ID       shift, and go to state 78
    DECINT   shift, and go to state 4
    DECREAL  shift, and go to state 5
    DECSTR   shift, and go to state 6

    decl_var         go to state 79
    decl_data_type   go to state 13
    decl_field_type  go to state 80


State 55

   36 data_types: data_type .
   37           | data_type . COMMA data_types

    COMMA  shift, and go to state 81

    $default  reduce using rule 36 (data_types)


State 56

   43 func_def: DEF ID LPAREN data_types . RPAREN COLON ENDLINE stmt_list END
   44         | DEF ID LPAREN data_types . RPAREN COLON ENDLINE stmt_list RETURN data_type END

    RPAREN  shift, and go to state 82


State 57

   31 abs_type: TYPE ID .

    $default  reduce using rule 31 (abs_type)


State 58

   15 call_func: ID LPAREN . RPAREN
   16          | ID LPAREN . data_types RPAREN

    INT     shift, and go to state 32
    REAL    shift, and go to state 33
    STR     shift, and go to state 34
    TYPE    shift, and go to state 35
    RPAREN  shift, and go to state 83
    NIL     shift, and go to state 40
    LIST    shift, and go to state 41
    DICT    shift, and go to state 43

    data_type   go to state 55
    prim_type   go to state 48
    abs_type    go to state 49
    data_types  go to state 84


State 59

   45 expr: expr . opbi1 term
   62 fact: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 85
    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    NEQ     shift, and go to state 64
    EQ      shift, and go to state 65
    LT      shift, and go to state 66
    LE      shift, and go to state 67
    GT      shift, and go to state 68
    GE      shift, and go to state 69
    AND     shift, and go to state 70
    OR      shift, and go to state 71
    DIVM    shift, and go to state 72

    opbi1  go to state 73


State 60

   29 prim_type: LIST ASSIGN . list

    LBRACE  shift, and go to state 86

    list  go to state 87


State 61

   28 prim_type: DICT ASSIGN . dict

    LBRACK  shift, and go to state 88

    dict  go to state 89


State 62

   47 opbi1: PLUS .

    $default  reduce using rule 47 (opbi1)


State 63

   48 opbi1: MINUS .

    $default  reduce using rule 48 (opbi1)


State 64

   57 opbi1: NEQ .

    $default  reduce using rule 57 (opbi1)


State 65

   53 opbi1: EQ .

    $default  reduce using rule 53 (opbi1)


State 66

   49 opbi1: LT .

    $default  reduce using rule 49 (opbi1)


State 67

   50 opbi1: LE .

    $default  reduce using rule 50 (opbi1)


State 68

   52 opbi1: GT .

    $default  reduce using rule 52 (opbi1)


State 69

   51 opbi1: GE .

    $default  reduce using rule 51 (opbi1)


State 70

   54 opbi1: AND .

    $default  reduce using rule 54 (opbi1)


State 71

   55 opbi1: OR .

    $default  reduce using rule 55 (opbi1)


State 72

   56 opbi1: DIVM .

    $default  reduce using rule 56 (opbi1)


State 73

   45 expr: expr opbi1 . term

    INT     shift, and go to state 32
    REAL    shift, and go to state 33
    STR     shift, and go to state 34
    TYPE    shift, and go to state 35
    LPAREN  shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39
    NIL     shift, and go to state 40
    LIST    shift, and go to state 41
    PERC    shift, and go to state 42
    DICT    shift, and go to state 43

    data_type  go to state 47
    prim_type  go to state 48
    abs_type   go to state 49
    term       go to state 90
    fact       go to state 52
    unaop      go to state 53


State 74

   59 opbi2: TIMES .

    $default  reduce using rule 59 (opbi2)


State 75

   58 opbi2: DIV .

    $default  reduce using rule 58 (opbi2)


State 76

   60 term: term opbi2 . fact

    INT     shift, and go to state 32
    REAL    shift, and go to state 33
    STR     shift, and go to state 34
    TYPE    shift, and go to state 35
    LPAREN  shift, and go to state 37
    MINUS   shift, and go to state 38
    NOT     shift, and go to state 39
    NIL     shift, and go to state 40
    LIST    shift, and go to state 41
    PERC    shift, and go to state 42
    DICT    shift, and go to state 43

    data_type  go to state 47
    prim_type  go to state 48
    abs_type   go to state 49
    fact       go to state 91
    unaop      go to state 53


State 77

   63 fact: unaop data_type .

    $default  reduce using rule 63 (fact)


State 78

   21 decl_data_type: ID .

    $default  reduce using rule 21 (decl_data_type)


State 79

   40 decl_field_type: decl_var . ENDLINE
   41                | decl_var . ENDLINE decl_field_type

    ENDLINE  shift, and go to state 92


State 80

   42 type_def: TYPE ID COLON ENDLINE decl_field_type . END

    END  shift, and go to state 93


State 81

   37 data_types: data_type COMMA . data_types

    INT   shift, and go to state 32
    REAL  shift, and go to state 33
    STR   shift, and go to state 34
    TYPE  shift, and go to state 35
    NIL   shift, and go to state 40
    LIST  shift, and go to state 41
    DICT  shift, and go to state 43

    data_type   go to state 55
    prim_type   go to state 48
    abs_type    go to state 49
    data_types  go to state 94


State 82

   43 func_def: DEF ID LPAREN data_types RPAREN . COLON ENDLINE stmt_list END
   44         | DEF ID LPAREN data_types RPAREN . COLON ENDLINE stmt_list RETURN data_type END

    COLON  shift, and go to state 95


State 83

   15 call_func: ID LPAREN RPAREN .

    $default  reduce using rule 15 (call_func)


State 84

   16 call_func: ID LPAREN data_types . RPAREN

    RPAREN  shift, and go to state 96


State 85

   62 fact: LPAREN expr RPAREN .

    $default  reduce using rule 62 (fact)


State 86

   35 list: LBRACE . data_types RBRACE

    INT   shift, and go to state 32
    REAL  shift, and go to state 33
    STR   shift, and go to state 34
    TYPE  shift, and go to state 35
    NIL   shift, and go to state 40
    LIST  shift, and go to state 41
    DICT  shift, and go to state 43

    data_type   go to state 55
    prim_type   go to state 48
    abs_type    go to state 49
    data_types  go to state 97


State 87

   29 prim_type: LIST ASSIGN list .

    $default  reduce using rule 29 (prim_type)


State 88

   32 dict: LBRACK . key_value RBRACK

    INT   shift, and go to state 32
    REAL  shift, and go to state 33
    STR   shift, and go to state 34
    TYPE  shift, and go to state 35
    NIL   shift, and go to state 40
    LIST  shift, and go to state 41
    DICT  shift, and go to state 43

    data_type  go to state 98
    prim_type  go to state 48
    abs_type   go to state 49
    key_value  go to state 99


State 89

   28 prim_type: DICT ASSIGN dict .

    $default  reduce using rule 28 (prim_type)


State 90

   45 expr: expr opbi1 term .
   60 term: term . opbi2 fact

    TIMES  shift, and go to state 74
    DIV    shift, and go to state 75

    $default  reduce using rule 45 (expr)

    opbi2  go to state 76


State 91

   60 term: term opbi2 fact .

    $default  reduce using rule 60 (term)


State 92

   40 decl_field_type: decl_var ENDLINE .
   41                | decl_var ENDLINE . decl_field_type

    ID       shift, and go to state 78
    DECINT   shift, and go to state 4
    DECREAL  shift, and go to state 5
    DECSTR   shift, and go to state 6

    $default  reduce using rule 40 (decl_field_type)

    decl_var         go to state 79
    decl_data_type   go to state 13
    decl_field_type  go to state 100


State 93

   42 type_def: TYPE ID COLON ENDLINE decl_field_type END .

    $default  reduce using rule 42 (type_def)


State 94

   37 data_types: data_type COMMA data_types .

    $default  reduce using rule 37 (data_types)


State 95

   43 func_def: DEF ID LPAREN data_types RPAREN COLON . ENDLINE stmt_list END
   44         | DEF ID LPAREN data_types RPAREN COLON . ENDLINE stmt_list RETURN data_type END

    ENDLINE  shift, and go to state 101


State 96

   16 call_func: ID LPAREN data_types RPAREN .

    $default  reduce using rule 16 (call_func)


State 97

   35 list: LBRACE data_types . RBRACE

    RBRACE  shift, and go to state 102


State 98

   33 key_value: data_type . COLON data_type
   34          | data_type . COLON data_type COMMA key_value

    COLON  shift, and go to state 103


State 99

   32 dict: LBRACK key_value . RBRACK

    RBRACK  shift, and go to state 104


State 100

   41 decl_field_type: decl_var ENDLINE decl_field_type .

    $default  reduce using rule 41 (decl_field_type)


State 101

   43 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE . stmt_list END
   44         | DEF ID LPAREN data_types RPAREN COLON ENDLINE . stmt_list RETURN data_type END

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    DEF      shift, and go to state 3
    DECINT   shift, and go to state 4
    DECREAL  shift, and go to state 5
    DECSTR   shift, and go to state 6

    stmt_list       go to state 105
    stmt            go to state 9
    assign          go to state 10
    lhs             go to state 11
    decl_var        go to state 12
    decl_data_type  go to state 13
    var             go to state 14
    definition      go to state 15
    type_def        go to state 16
    func_def        go to state 17


State 102

   35 list: LBRACE data_types RBRACE .

    $default  reduce using rule 35 (list)


State 103

   33 key_value: data_type COLON . data_type
   34          | data_type COLON . data_type COMMA key_value

    INT   shift, and go to state 32
    REAL  shift, and go to state 33
    STR   shift, and go to state 34
    TYPE  shift, and go to state 35
    NIL   shift, and go to state 40
    LIST  shift, and go to state 41
    DICT  shift, and go to state 43

    data_type  go to state 106
    prim_type  go to state 48
    abs_type   go to state 49


State 104

   32 dict: LBRACK key_value RBRACK .

    $default  reduce using rule 32 (dict)


State 105

   43 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list . END
   44         | DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list . RETURN data_type END

    RETURN  shift, and go to state 107
    END     shift, and go to state 108


State 106

   33 key_value: data_type COLON data_type .
   34          | data_type COLON data_type . COMMA key_value

    COMMA  shift, and go to state 109

    $default  reduce using rule 33 (key_value)


State 107

   44 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN . data_type END

    INT   shift, and go to state 32
    REAL  shift, and go to state 33
    STR   shift, and go to state 34
    TYPE  shift, and go to state 35
    NIL   shift, and go to state 40
    LIST  shift, and go to state 41
    DICT  shift, and go to state 43

    data_type  go to state 110
    prim_type  go to state 48
    abs_type   go to state 49


State 108

   43 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 43 (func_def)


State 109

   34 key_value: data_type COLON data_type COMMA . key_value

    INT   shift, and go to state 32
    REAL  shift, and go to state 33
    STR   shift, and go to state 34
    TYPE  shift, and go to state 35
    NIL   shift, and go to state 40
    LIST  shift, and go to state 41
    DICT  shift, and go to state 43

    data_type  go to state 98
    prim_type  go to state 48
    abs_type   go to state 49
    key_value  go to state 111


State 110

   44 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type . END

    END  shift, and go to state 112


State 111

   34 key_value: data_type COLON data_type COMMA key_value .

    $default  reduce using rule 34 (key_value)


State 112

   44 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END .

    $default  reduce using rule 44 (func_def)
