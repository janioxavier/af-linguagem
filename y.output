Terminals unused in grammar

   SEMICOLON
   LBRACE
   RBRACE
   LBRACK
   RBRACK
   DOT
   SKIP
   TRUE
   FALSE
   BREAK
   SET
   LIST
   DIVM
   ADDPERC
   SUBPERC
   ADDEQ
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   DICT
   MAIN
   CONTSTMT
   DIV
   PERC
   '-'


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: assign end_stmt
    5     | definition end_stmt
    6     | decl_var end_stmt
    7     | estr_cond end_stmt
    8     | f_builtin end_stmt
    9     | expr end_stmt
   10     | estr_while end_stmt
   11     | estr_for end_stmt

   12 end_stmt: ENDLINE

   13 assign: lhs ASSIGN INT
   14       | lhs ASSIGN REAL
   15       | lhs ASSIGN STR

   16 lhs: decl_var
   17    | var

   18 call_func: ID LPAREN RPAREN
   19          | ID LPAREN data_types RPAREN

   20 decl_var: decl_data_type ID

   21 decl_data_type: DECINT
   22               | DECREAL
   23               | DECSTR
   24               | ID

   25 var: ID

   26 data_type: prim_type
   27          | abs_type

   28 prim_type: INT
   29          | REAL
   30          | STR
   31          | NIL

   32 abs_type: ID

   33 data_types: data_type
   34           | data_type COMMA data_types

   35 definition: type_def
   36           | func_def

   37 decl_field_type: decl_var ENDLINE
   38                | decl_var ENDLINE decl_field_type

   39 type_def: TYPE ID COLON ENDLINE decl_field_type END

   40 param_func: decl_var
   41           | decl_var COMMA param_func

   42 func_def: %empty
   43         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END
   44         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   45         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   46         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

   47 expr: LPAREN expr RPAREN
   48     | expr PLUS expr
   49     | expr MINUS expr
   50     | expr TIMES expr
   51     | expr DIVIDE expr
   52     | expr LT expr
   53     | expr LE expr
   54     | expr GE expr
   55     | expr GT expr
   56     | expr EQ expr
   57     | expr AND expr
   58     | expr OR expr
   59     | expr NEQ expr
   60     | NOT expr
   61     | MINUS expr
   62     | REAL
   63     | INT
   64     | call_func

   65 f_builtin: f_print
   66          | f_input

   67 f_print: PRINT ID
   68        | PRINTLN ID

   69 f_input: INPUT ID

   70 estr_cond: IF expr COLON ENDLINE stmt_list END
   71          | IF expr COLON ENDLINE stmt_list cond_else
   72          | IF expr COLON ENDLINE stmt_list cond_elif

   73 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif
   74          | ELIF expr COLON ENDLINE stmt_list cond_else

   75 cond_else: ELSE COLON ENDLINE stmt_list END

   76 estr_while: WHILE expr COLON stmt_list END

   77 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END


Terminals, with rules where they appear

$end (0) 0
'-' (45)
error (256)
INT (258) 13 28 63
REAL (259) 14 29 62
STR (260) 15 30
ID (261) 18 19 20 24 25 32 39 43 44 45 46 67 68 69
TYPE (262) 39
PRINT (263) 67
INPUT (264) 69
COMMA (265) 34 41 77
COLON (266) 39 43 44 45 46 70 71 72 73 74 75 76 77
SEMICOLON (267)
LPAREN (268) 18 19 43 44 45 46 47
RPAREN (269) 18 19 43 44 45 46 47
LBRACE (270)
RBRACE (271)
LBRACK (272)
RBRACK (273)
DOT (274)
ASSIGN (275) 13 14 15
ELIF (276) 73 74
IF (277) 70 71 72
ELSE (278) 75
RETURN (279) 44 45
WHILE (280) 76
FOR (281) 77
SKIP (282)
IN (283) 77
NOT (284) 60
NIL (285) 31
DEF (286) 43 44 45 46
TRUE (287)
FALSE (288)
BREAK (289)
SET (290)
LIST (291)
DIVM (292)
ADDPERC (293)
SUBPERC (294)
ADDEQ (295)
SUBEQ (296)
DIVEQ (297)
MULTEQ (298)
DIVMEQ (299)
DICT (300)
MAIN (301)
END (302) 39 43 44 45 46 70 75 76 77
ENDLINE (303) 12 37 38 39 43 44 45 46 70 71 72 73 74 75
CONTSTMT (304)
DIV (305)
PRINTLN (306) 68
DECINT (307) 21
DECREAL (308) 22
DECSTR (309) 23
PLUS (310) 48
MINUS (311) 49 61
AND (312) 57
OR (313) 58
NEQ (314) 59
EQ (315) 56
LT (316) 52
LE (317) 53
GT (318) 55
GE (319) 54
PERC (320)
TIMES (321) 50
DIVIDE (322) 51


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
prog (70)
    on left: 1, on right: 0
stmt_list (71)
    on left: 2 3, on right: 1 3 43 44 45 46 70 71 72 73 74 75 76 77
stmt (72)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
end_stmt (73)
    on left: 12, on right: 4 5 6 7 8 9 10 11
assign (74)
    on left: 13 14 15, on right: 4
lhs (75)
    on left: 16 17, on right: 13 14 15
call_func (76)
    on left: 18 19, on right: 64
decl_var (77)
    on left: 20, on right: 6 16 37 38 40 41 77
decl_data_type (78)
    on left: 21 22 23 24, on right: 20
var (79)
    on left: 25, on right: 17 77
data_type (80)
    on left: 26 27, on right: 33 34
prim_type (81)
    on left: 28 29 30 31, on right: 26
abs_type (82)
    on left: 32, on right: 27
data_types (83)
    on left: 33 34, on right: 19 34
definition (84)
    on left: 35 36, on right: 5
decl_field_type (85)
    on left: 37 38, on right: 38 39
type_def (86)
    on left: 39, on right: 35
param_func (87)
    on left: 40 41, on right: 41 45 46
func_def (88)
    on left: 42 43 44 45 46, on right: 36
expr (89)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64,
    on right: 9 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 70 71
    72 73 74 76
f_builtin (90)
    on left: 65 66, on right: 8
f_print (91)
    on left: 67 68, on right: 65
f_input (92)
    on left: 69, on right: 66
estr_cond (93)
    on left: 70 71 72, on right: 7
cond_elif (94)
    on left: 73 74, on right: 72 73
cond_else (95)
    on left: 75, on right: 71 74
estr_while (96)
    on left: 76, on right: 10
estr_for (97)
    on left: 77, on right: 11


State 0

    0 $accept: . prog $end

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    PRINTLN  shift, and go to state 13
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16
    MINUS    shift, and go to state 17

    $default  reduce using rule 42 (func_def)

    prog            go to state 18
    stmt_list       go to state 19
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    f_builtin       go to state 31
    f_print         go to state 32
    f_input         go to state 33
    estr_cond       go to state 34
    estr_while      go to state 35
    estr_for        go to state 36


State 1

   63 expr: INT .

    $default  reduce using rule 63 (expr)


State 2

   62 expr: REAL .

    $default  reduce using rule 62 (expr)


State 3

   18 call_func: ID . LPAREN RPAREN
   19          | ID . LPAREN data_types RPAREN
   24 decl_data_type: ID .
   25 var: ID .

    LPAREN  shift, and go to state 37

    ASSIGN    reduce using rule 25 (var)
    $default  reduce using rule 24 (decl_data_type)


State 4

   39 type_def: TYPE . ID COLON ENDLINE decl_field_type END

    ID  shift, and go to state 38


State 5

   67 f_print: PRINT . ID

    ID  shift, and go to state 39


State 6

   69 f_input: INPUT . ID

    ID  shift, and go to state 40


State 7

   47 expr: LPAREN . expr RPAREN

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 42


State 8

   70 estr_cond: IF . expr COLON ENDLINE stmt_list END
   71          | IF . expr COLON ENDLINE stmt_list cond_else
   72          | IF . expr COLON ENDLINE stmt_list cond_elif

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 43


State 9

   76 estr_while: WHILE . expr COLON stmt_list END

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 44


State 10

   77 estr_for: FOR . decl_var COMMA var IN var COLON stmt_list END

    ID       shift, and go to state 45
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16

    decl_var        go to state 46
    decl_data_type  go to state 25


State 11

   60 expr: NOT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 47


State 12

   43 func_def: DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list END
   44         | DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   45         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   46         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    ID  shift, and go to state 48


State 13

   68 f_print: PRINTLN . ID

    ID  shift, and go to state 49


State 14

   21 decl_data_type: DECINT .

    $default  reduce using rule 21 (decl_data_type)


State 15

   22 decl_data_type: DECREAL .

    $default  reduce using rule 22 (decl_data_type)


State 16

   23 decl_data_type: DECSTR .

    $default  reduce using rule 23 (decl_data_type)


State 17

   61 expr: MINUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 50


State 18

    0 $accept: prog . $end

    $end  shift, and go to state 51


State 19

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 20

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    PRINTLN  shift, and go to state 13
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16
    MINUS    shift, and go to state 17

    ENDLINE   reduce using rule 42 (func_def)
    $default  reduce using rule 2 (stmt_list)

    stmt_list       go to state 52
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    f_builtin       go to state 31
    f_print         go to state 32
    f_input         go to state 33
    estr_cond       go to state 34
    estr_while      go to state 35
    estr_for        go to state 36


State 21

    4 stmt: assign . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 54


State 22

   13 assign: lhs . ASSIGN INT
   14       | lhs . ASSIGN REAL
   15       | lhs . ASSIGN STR

    ASSIGN  shift, and go to state 55


State 23

   64 expr: call_func .

    $default  reduce using rule 64 (expr)


State 24

    6 stmt: decl_var . end_stmt
   16 lhs: decl_var .

    ENDLINE  shift, and go to state 53

    $default  reduce using rule 16 (lhs)

    end_stmt  go to state 56


State 25

   20 decl_var: decl_data_type . ID

    ID  shift, and go to state 57


State 26

   17 lhs: var .

    $default  reduce using rule 17 (lhs)


State 27

    5 stmt: definition . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 58


State 28

   35 definition: type_def .

    $default  reduce using rule 35 (definition)


State 29

   36 definition: func_def .

    $default  reduce using rule 36 (definition)


State 30

    9 stmt: expr . end_stmt
   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr

    ENDLINE  shift, and go to state 53
    PLUS     shift, and go to state 59
    MINUS    shift, and go to state 60
    AND      shift, and go to state 61
    OR       shift, and go to state 62
    NEQ      shift, and go to state 63
    EQ       shift, and go to state 64
    LT       shift, and go to state 65
    LE       shift, and go to state 66
    GT       shift, and go to state 67
    GE       shift, and go to state 68
    TIMES    shift, and go to state 69
    DIVIDE   shift, and go to state 70

    end_stmt  go to state 71


State 31

    8 stmt: f_builtin . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 72


State 32

   65 f_builtin: f_print .

    $default  reduce using rule 65 (f_builtin)


State 33

   66 f_builtin: f_input .

    $default  reduce using rule 66 (f_builtin)


State 34

    7 stmt: estr_cond . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 73


State 35

   10 stmt: estr_while . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 74


State 36

   11 stmt: estr_for . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 75


State 37

   18 call_func: ID LPAREN . RPAREN
   19          | ID LPAREN . data_types RPAREN

    INT     shift, and go to state 76
    REAL    shift, and go to state 77
    STR     shift, and go to state 78
    ID      shift, and go to state 79
    RPAREN  shift, and go to state 80
    NIL     shift, and go to state 81

    data_type   go to state 82
    prim_type   go to state 83
    abs_type    go to state 84
    data_types  go to state 85


State 38

   39 type_def: TYPE ID . COLON ENDLINE decl_field_type END

    COLON  shift, and go to state 86


State 39

   67 f_print: PRINT ID .

    $default  reduce using rule 67 (f_print)


State 40

   69 f_input: INPUT ID .

    $default  reduce using rule 69 (f_input)


State 41

   18 call_func: ID . LPAREN RPAREN
   19          | ID . LPAREN data_types RPAREN

    LPAREN  shift, and go to state 37


State 42

   47 expr: LPAREN expr . RPAREN
   48     | expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr

    RPAREN  shift, and go to state 87
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62
    NEQ     shift, and go to state 63
    EQ      shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70


State 43

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr
   70 estr_cond: IF expr . COLON ENDLINE stmt_list END
   71          | IF expr . COLON ENDLINE stmt_list cond_else
   72          | IF expr . COLON ENDLINE stmt_list cond_elif

    COLON   shift, and go to state 88
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62
    NEQ     shift, and go to state 63
    EQ      shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70


State 44

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr
   76 estr_while: WHILE expr . COLON stmt_list END

    COLON   shift, and go to state 89
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62
    NEQ     shift, and go to state 63
    EQ      shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70


State 45

   24 decl_data_type: ID .

    $default  reduce using rule 24 (decl_data_type)


State 46

   77 estr_for: FOR decl_var . COMMA var IN var COLON stmt_list END

    COMMA  shift, and go to state 90


State 47

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr
   60     | NOT expr .

    $default  reduce using rule 60 (expr)


State 48

   43 func_def: DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list END
   44         | DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   45         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   46         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    LPAREN  shift, and go to state 91


State 49

   68 f_print: PRINTLN ID .

    $default  reduce using rule 68 (f_print)


State 50

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr
   61     | MINUS expr .

    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 61 (expr)


State 51

    0 $accept: prog $end .

    $default  accept


State 52

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 53

   12 end_stmt: ENDLINE .

    $default  reduce using rule 12 (end_stmt)


State 54

    4 stmt: assign end_stmt .

    $default  reduce using rule 4 (stmt)


State 55

   13 assign: lhs ASSIGN . INT
   14       | lhs ASSIGN . REAL
   15       | lhs ASSIGN . STR

    INT   shift, and go to state 92
    REAL  shift, and go to state 93
    STR   shift, and go to state 94


State 56

    6 stmt: decl_var end_stmt .

    $default  reduce using rule 6 (stmt)


State 57

   20 decl_var: decl_data_type ID .

    $default  reduce using rule 20 (decl_var)


State 58

    5 stmt: definition end_stmt .

    $default  reduce using rule 5 (stmt)


State 59

   48 expr: expr PLUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 95


State 60

   49 expr: expr MINUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 96


State 61

   57 expr: expr AND . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 97


State 62

   58 expr: expr OR . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 98


State 63

   59 expr: expr NEQ . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 99


State 64

   56 expr: expr EQ . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 100


State 65

   52 expr: expr LT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 101


State 66

   53 expr: expr LE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 102


State 67

   55 expr: expr GT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 103


State 68

   54 expr: expr GE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 104


State 69

   50 expr: expr TIMES . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 105


State 70

   51 expr: expr DIVIDE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 106


State 71

    9 stmt: expr end_stmt .

    $default  reduce using rule 9 (stmt)


State 72

    8 stmt: f_builtin end_stmt .

    $default  reduce using rule 8 (stmt)


State 73

    7 stmt: estr_cond end_stmt .

    $default  reduce using rule 7 (stmt)


State 74

   10 stmt: estr_while end_stmt .

    $default  reduce using rule 10 (stmt)


State 75

   11 stmt: estr_for end_stmt .

    $default  reduce using rule 11 (stmt)


State 76

   28 prim_type: INT .

    $default  reduce using rule 28 (prim_type)


State 77

   29 prim_type: REAL .

    $default  reduce using rule 29 (prim_type)


State 78

   30 prim_type: STR .

    $default  reduce using rule 30 (prim_type)


State 79

   32 abs_type: ID .

    $default  reduce using rule 32 (abs_type)


State 80

   18 call_func: ID LPAREN RPAREN .

    $default  reduce using rule 18 (call_func)


State 81

   31 prim_type: NIL .

    $default  reduce using rule 31 (prim_type)


State 82

   33 data_types: data_type .
   34           | data_type . COMMA data_types

    COMMA  shift, and go to state 107

    $default  reduce using rule 33 (data_types)


State 83

   26 data_type: prim_type .

    $default  reduce using rule 26 (data_type)


State 84

   27 data_type: abs_type .

    $default  reduce using rule 27 (data_type)


State 85

   19 call_func: ID LPAREN data_types . RPAREN

    RPAREN  shift, and go to state 108


State 86

   39 type_def: TYPE ID COLON . ENDLINE decl_field_type END

    ENDLINE  shift, and go to state 109


State 87

   47 expr: LPAREN expr RPAREN .

    $default  reduce using rule 47 (expr)


State 88

   70 estr_cond: IF expr COLON . ENDLINE stmt_list END
   71          | IF expr COLON . ENDLINE stmt_list cond_else
   72          | IF expr COLON . ENDLINE stmt_list cond_elif

    ENDLINE  shift, and go to state 110


State 89

   76 estr_while: WHILE expr COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    PRINTLN  shift, and go to state 13
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16
    MINUS    shift, and go to state 17

    $default  reduce using rule 42 (func_def)

    stmt_list       go to state 111
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    f_builtin       go to state 31
    f_print         go to state 32
    f_input         go to state 33
    estr_cond       go to state 34
    estr_while      go to state 35
    estr_for        go to state 36


State 90

   77 estr_for: FOR decl_var COMMA . var IN var COLON stmt_list END

    ID  shift, and go to state 112

    var  go to state 113


State 91

   43 func_def: DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list END
   44         | DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   45         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   46         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list END

    ID       shift, and go to state 45
    RPAREN   shift, and go to state 114
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16

    decl_var        go to state 115
    decl_data_type  go to state 25
    param_func      go to state 116


State 92

   13 assign: lhs ASSIGN INT .

    $default  reduce using rule 13 (assign)


State 93

   14 assign: lhs ASSIGN REAL .

    $default  reduce using rule 14 (assign)


State 94

   15 assign: lhs ASSIGN STR .

    $default  reduce using rule 15 (assign)


State 95

   48 expr: expr . PLUS expr
   48     | expr PLUS expr .
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr

    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 48 (expr)


State 96

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   49     | expr MINUS expr .
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr

    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 49 (expr)


State 97

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   57     | expr AND expr .
   58     | expr . OR expr
   59     | expr . NEQ expr

    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 57 (expr)


State 98

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   58     | expr OR expr .
   59     | expr . NEQ expr

    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 58 (expr)


State 99

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr
   59     | expr NEQ expr .

    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 59 (expr)


State 100

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   56     | expr EQ expr .
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr

    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 56 (expr)


State 101

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   52     | expr LT expr .
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr

    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 52 (expr)


State 102

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   53     | expr LE expr .
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr

    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 53 (expr)


State 103

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   55     | expr GT expr .
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr

    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 55 (expr)


State 104

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   54     | expr GE expr .
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr

    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70

    $default  reduce using rule 54 (expr)


State 105

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   50     | expr TIMES expr .
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr

    $default  reduce using rule 50 (expr)


State 106

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   51     | expr DIVIDE expr .
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr

    $default  reduce using rule 51 (expr)


State 107

   34 data_types: data_type COMMA . data_types

    INT   shift, and go to state 76
    REAL  shift, and go to state 77
    STR   shift, and go to state 78
    ID    shift, and go to state 79
    NIL   shift, and go to state 81

    data_type   go to state 82
    prim_type   go to state 83
    abs_type    go to state 84
    data_types  go to state 117


State 108

   19 call_func: ID LPAREN data_types RPAREN .

    $default  reduce using rule 19 (call_func)


State 109

   39 type_def: TYPE ID COLON ENDLINE . decl_field_type END

    ID       shift, and go to state 45
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16

    decl_var         go to state 118
    decl_data_type   go to state 25
    decl_field_type  go to state 119


State 110

   70 estr_cond: IF expr COLON ENDLINE . stmt_list END
   71          | IF expr COLON ENDLINE . stmt_list cond_else
   72          | IF expr COLON ENDLINE . stmt_list cond_elif

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    PRINTLN  shift, and go to state 13
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16
    MINUS    shift, and go to state 17

    $default  reduce using rule 42 (func_def)

    stmt_list       go to state 120
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    f_builtin       go to state 31
    f_print         go to state 32
    f_input         go to state 33
    estr_cond       go to state 34
    estr_while      go to state 35
    estr_for        go to state 36


State 111

   76 estr_while: WHILE expr COLON stmt_list . END

    END  shift, and go to state 121


State 112

   25 var: ID .

    $default  reduce using rule 25 (var)


State 113

   77 estr_for: FOR decl_var COMMA var . IN var COLON stmt_list END

    IN  shift, and go to state 122


State 114

   43 func_def: DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list END
   44         | DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END

    COLON  shift, and go to state 123


State 115

   40 param_func: decl_var .
   41           | decl_var . COMMA param_func

    COMMA  shift, and go to state 124

    $default  reduce using rule 40 (param_func)


State 116

   45 func_def: DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   46         | DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list END

    RPAREN  shift, and go to state 125


State 117

   34 data_types: data_type COMMA data_types .

    $default  reduce using rule 34 (data_types)


State 118

   37 decl_field_type: decl_var . ENDLINE
   38                | decl_var . ENDLINE decl_field_type

    ENDLINE  shift, and go to state 126


State 119

   39 type_def: TYPE ID COLON ENDLINE decl_field_type . END

    END  shift, and go to state 127


State 120

   70 estr_cond: IF expr COLON ENDLINE stmt_list . END
   71          | IF expr COLON ENDLINE stmt_list . cond_else
   72          | IF expr COLON ENDLINE stmt_list . cond_elif

    ELIF  shift, and go to state 128
    ELSE  shift, and go to state 129
    END   shift, and go to state 130

    cond_elif  go to state 131
    cond_else  go to state 132


State 121

   76 estr_while: WHILE expr COLON stmt_list END .

    $default  reduce using rule 76 (estr_while)


State 122

   77 estr_for: FOR decl_var COMMA var IN . var COLON stmt_list END

    ID  shift, and go to state 112

    var  go to state 133


State 123

   43 func_def: DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list END
   44         | DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END

    ENDLINE  shift, and go to state 134


State 124

   41 param_func: decl_var COMMA . param_func

    ID       shift, and go to state 45
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16

    decl_var        go to state 115
    decl_data_type  go to state 25
    param_func      go to state 135


State 125

   45 func_def: DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END
   46         | DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 136


State 126

   37 decl_field_type: decl_var ENDLINE .
   38                | decl_var ENDLINE . decl_field_type

    ID       shift, and go to state 45
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16

    $default  reduce using rule 37 (decl_field_type)

    decl_var         go to state 118
    decl_data_type   go to state 25
    decl_field_type  go to state 137


State 127

   39 type_def: TYPE ID COLON ENDLINE decl_field_type END .

    $default  reduce using rule 39 (type_def)


State 128

   73 cond_elif: ELIF . expr COLON ENDLINE stmt_list cond_elif
   74          | ELIF . expr COLON ENDLINE stmt_list cond_else

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 41
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 17

    call_func  go to state 23
    expr       go to state 138


State 129

   75 cond_else: ELSE . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 139


State 130

   70 estr_cond: IF expr COLON ENDLINE stmt_list END .

    $default  reduce using rule 70 (estr_cond)


State 131

   72 estr_cond: IF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 72 (estr_cond)


State 132

   71 estr_cond: IF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 71 (estr_cond)


State 133

   77 estr_for: FOR decl_var COMMA var IN var . COLON stmt_list END

    COLON  shift, and go to state 140


State 134

   43 func_def: DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list END
   44         | DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    PRINTLN  shift, and go to state 13
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16
    MINUS    shift, and go to state 17

    $default  reduce using rule 42 (func_def)

    stmt_list       go to state 141
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    f_builtin       go to state 31
    f_print         go to state 32
    f_input         go to state 33
    estr_cond       go to state 34
    estr_while      go to state 35
    estr_for        go to state 36


State 135

   41 param_func: decl_var COMMA param_func .

    $default  reduce using rule 41 (param_func)


State 136

   45 func_def: DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END
   46         | DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 142


State 137

   38 decl_field_type: decl_var ENDLINE decl_field_type .

    $default  reduce using rule 38 (decl_field_type)


State 138

   48 expr: expr . PLUS expr
   49     | expr . MINUS expr
   50     | expr . TIMES expr
   51     | expr . DIVIDE expr
   52     | expr . LT expr
   53     | expr . LE expr
   54     | expr . GE expr
   55     | expr . GT expr
   56     | expr . EQ expr
   57     | expr . AND expr
   58     | expr . OR expr
   59     | expr . NEQ expr
   73 cond_elif: ELIF expr . COLON ENDLINE stmt_list cond_elif
   74          | ELIF expr . COLON ENDLINE stmt_list cond_else

    COLON   shift, and go to state 143
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62
    NEQ     shift, and go to state 63
    EQ      shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    TIMES   shift, and go to state 69
    DIVIDE  shift, and go to state 70


State 139

   75 cond_else: ELSE COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 144


State 140

   77 estr_for: FOR decl_var COMMA var IN var COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    PRINTLN  shift, and go to state 13
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16
    MINUS    shift, and go to state 17

    $default  reduce using rule 42 (func_def)

    stmt_list       go to state 145
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    f_builtin       go to state 31
    f_print         go to state 32
    f_input         go to state 33
    estr_cond       go to state 34
    estr_while      go to state 35
    estr_for        go to state 36


State 141

   43 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . END
   44         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END

    RETURN  shift, and go to state 146
    END     shift, and go to state 147


State 142

   45 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END
   46         | DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    PRINTLN  shift, and go to state 13
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16
    MINUS    shift, and go to state 17

    $default  reduce using rule 42 (func_def)

    stmt_list       go to state 148
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    f_builtin       go to state 31
    f_print         go to state 32
    f_input         go to state 33
    estr_cond       go to state 34
    estr_while      go to state 35
    estr_for        go to state 36


State 143

   73 cond_elif: ELIF expr COLON . ENDLINE stmt_list cond_elif
   74          | ELIF expr COLON . ENDLINE stmt_list cond_else

    ENDLINE  shift, and go to state 149


State 144

   75 cond_else: ELSE COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    PRINTLN  shift, and go to state 13
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16
    MINUS    shift, and go to state 17

    $default  reduce using rule 42 (func_def)

    stmt_list       go to state 150
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    f_builtin       go to state 31
    f_print         go to state 32
    f_input         go to state 33
    estr_cond       go to state 34
    estr_while      go to state 35
    estr_for        go to state 36


State 145

   77 estr_for: FOR decl_var COMMA var IN var COLON stmt_list . END

    END  shift, and go to state 151


State 146

   44 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 152


State 147

   43 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 43 (func_def)


State 148

   45 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END
   46         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . END

    RETURN  shift, and go to state 153
    END     shift, and go to state 154


State 149

   73 cond_elif: ELIF expr COLON ENDLINE . stmt_list cond_elif
   74          | ELIF expr COLON ENDLINE . stmt_list cond_else

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    PRINTLN  shift, and go to state 13
    DECINT   shift, and go to state 14
    DECREAL  shift, and go to state 15
    DECSTR   shift, and go to state 16
    MINUS    shift, and go to state 17

    $default  reduce using rule 42 (func_def)

    stmt_list       go to state 155
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    f_builtin       go to state 31
    f_print         go to state 32
    f_input         go to state 33
    estr_cond       go to state 34
    estr_while      go to state 35
    estr_for        go to state 36


State 150

   75 cond_else: ELSE COLON ENDLINE stmt_list . END

    END  shift, and go to state 156


State 151

   77 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END .

    $default  reduce using rule 77 (estr_for)


State 152

   44 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 157


State 153

   45 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 158


State 154

   46 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 46 (func_def)


State 155

   73 cond_elif: ELIF expr COLON ENDLINE stmt_list . cond_elif
   74          | ELIF expr COLON ENDLINE stmt_list . cond_else

    ELIF  shift, and go to state 128
    ELSE  shift, and go to state 129

    cond_elif  go to state 159
    cond_else  go to state 160


State 156

   75 cond_else: ELSE COLON ENDLINE stmt_list END .

    $default  reduce using rule 75 (cond_else)


State 157

   44 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 161


State 158

   45 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 162


State 159

   73 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 73 (cond_elif)


State 160

   74 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 74 (cond_elif)


State 161

   44 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 44 (func_def)


State 162

   45 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 163


State 163

   45 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 45 (func_def)
