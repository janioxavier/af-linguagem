Terminals unused in grammar

   SEMICOLON
   DOT
   SKIP
   TRUE
   FALSE
   BREAK
   SET
   ADDPERC
   SUBPERC
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   MAIN
   CONTSTMT
   DIVIDE


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: assign end_stmt
    5     | definition end_stmt
    6     | decl_var end_stmt
    7     | estr_cond end_stmt
    8     | f_builtin end_stmt
    9     | expr end_stmt
   10     | estr_while end_stmt
   11     | estr_for end_stmt

   12 end_stmt: ENDLINE

   13 assign: lhs ASSIGN INT
   14       | lhs ASSIGN REAL
   15       | lhs ASSIGN STR

   16 lhs: decl_var
   17    | var

   18 call_func: ID LPAREN RPAREN
   19          | ID LPAREN data_types RPAREN

   20 decl_var: decl_data_type ID

   21 decl_data_type: DECINT
   22               | DECREAL
   23               | DECSTR
   24               | ID

   25 var: ID

   26 data_type: prim_type
   27          | abs_type

   28 prim_type: INT
   29          | REAL
   30          | STR
   31          | DICT ASSIGN dict
   32          | LIST ASSIGN list
   33          | NIL

   34 abs_type: ID

   35 dict: LBRACK key_value RBRACK

   36 key_value: data_type COLON data_type
   37          | data_type COLON data_type COMMA key_value

   38 list: LBRACE data_types RBRACE

   39 data_types: data_type
   40           | data_type COMMA data_types

   41 definition: type_def
   42           | func_def

   43 decl_field_type: decl_var ENDLINE
   44                | decl_var ENDLINE decl_field_type

   45 type_def: TYPE ID COLON ENDLINE decl_field_type END

   46 param_func: decl_var
   47           | decl_var COMMA param_func

   48 func_def: %empty
   49         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END
   50         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   51         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   52         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

   53 expr: expr opbi1 term
   54     | term

   55 term: term opbi2 fact
   56     | fact

   57 fact: LPAREN expr RPAREN
   58     | unaop data_type
   59     | data_type
   60     | call_func

   61 opbi1: PLUS
   62      | MINUS
   63      | LT
   64      | LE
   65      | GE
   66      | GT
   67      | EQ
   68      | AND
   69      | OR
   70      | DIVM
   71      | NEQ
   72      | ADDEQ

   73 opbi2: DIV
   74      | TIMES

   75 unaop: NOT
   76      | PERC
   77      | MINUS

   78 f_builtin: f_print
   79          | f_input

   80 f_print: PRINT ID
   81        | PRINTLN ID

   82 f_input: INPUT ID

   83 estr_cond: IF expr COLON ENDLINE stmt_list END
   84          | IF expr COLON ENDLINE stmt_list cond_else
   85          | IF expr COLON ENDLINE stmt_list cond_elif

   86 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif
   87          | ELIF expr COLON ENDLINE stmt_list cond_else

   88 cond_else: ELSE COLON ENDLINE stmt_list END

   89 estr_while: WHILE expr COLON stmt_list END

   90 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 13 28
REAL (259) 14 29
STR (260) 15 30
ID (261) 18 19 20 24 25 34 45 49 50 51 52 80 81 82
TYPE (262) 45
PRINT (263) 80
INPUT (264) 82
COMMA (265) 37 40 47 90
COLON (266) 36 37 45 49 50 51 52 83 84 85 86 87 88 89 90
SEMICOLON (267)
LPAREN (268) 18 19 49 50 51 52 57
RPAREN (269) 18 19 49 50 51 52 57
LBRACE (270) 38
RBRACE (271) 38
LBRACK (272) 35
RBRACK (273) 35
DOT (274)
PLUS (275) 61
MINUS (276) 62 77
TIMES (277) 74
DIV (278) 73
NEQ (279) 71
RETURN (280) 50 51
EQ (281) 67
LT (282) 63
LE (283) 64
GT (284) 66
GE (285) 65
AND (286) 68
OR (287) 69
ASSIGN (288) 13 14 15 31 32
ELIF (289) 86 87
IF (290) 83 84 85
ELSE (291) 88
WHILE (292) 89
FOR (293) 90
SKIP (294)
IN (295) 90
NOT (296) 75
NIL (297) 33
DEF (298) 49 50 51 52
TRUE (299)
FALSE (300)
BREAK (301)
SET (302)
LIST (303) 32
DIVM (304) 70
PERC (305) 76
ADDPERC (306)
SUBPERC (307)
ADDEQ (308) 72
SUBEQ (309)
DIVEQ (310)
MULTEQ (311)
DIVMEQ (312)
DICT (313) 31
MAIN (314)
END (315) 45 49 50 51 52 83 88 89 90
ENDLINE (316) 12 43 44 45 49 50 51 52 83 84 85 86 87 88
CONTSTMT (317)
DIVIDE (318)
PRINTLN (319) 81
DECINT (320) 21
DECREAL (321) 22
DECSTR (322) 23


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
prog (69)
    on left: 1, on right: 0
stmt_list (70)
    on left: 2 3, on right: 1 3 49 50 51 52 83 84 85 86 87 88 89 90
stmt (71)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
end_stmt (72)
    on left: 12, on right: 4 5 6 7 8 9 10 11
assign (73)
    on left: 13 14 15, on right: 4
lhs (74)
    on left: 16 17, on right: 13 14 15
call_func (75)
    on left: 18 19, on right: 60
decl_var (76)
    on left: 20, on right: 6 16 43 44 46 47 90
decl_data_type (77)
    on left: 21 22 23 24, on right: 20
var (78)
    on left: 25, on right: 17 90
data_type (79)
    on left: 26 27, on right: 36 37 39 40 58 59
prim_type (80)
    on left: 28 29 30 31 32 33, on right: 26
abs_type (81)
    on left: 34, on right: 27
dict (82)
    on left: 35, on right: 31
key_value (83)
    on left: 36 37, on right: 35 37
list (84)
    on left: 38, on right: 32
data_types (85)
    on left: 39 40, on right: 19 38 40
definition (86)
    on left: 41 42, on right: 5
decl_field_type (87)
    on left: 43 44, on right: 44 45
type_def (88)
    on left: 45, on right: 41
param_func (89)
    on left: 46 47, on right: 47 51 52
func_def (90)
    on left: 48 49 50 51 52, on right: 42
expr (91)
    on left: 53 54, on right: 9 53 57 83 84 85 86 87 89
term (92)
    on left: 55 56, on right: 53 54 55
fact (93)
    on left: 57 58 59 60, on right: 55 56
opbi1 (94)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72, on right: 53
opbi2 (95)
    on left: 73 74, on right: 55
unaop (96)
    on left: 75 76 77, on right: 58
f_builtin (97)
    on left: 78 79, on right: 8
f_print (98)
    on left: 80 81, on right: 78
f_input (99)
    on left: 82, on right: 79
estr_cond (100)
    on left: 83 84 85, on right: 7
cond_elif (101)
    on left: 86 87, on right: 85 86
cond_else (102)
    on left: 88, on right: 84 87
estr_while (103)
    on left: 89, on right: 10
estr_for (104)
    on left: 90, on right: 11


State 0

    0 $accept: . prog $end

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    FOR      shift, and go to state 12
    NOT      shift, and go to state 13
    NIL      shift, and go to state 14
    DEF      shift, and go to state 15
    LIST     shift, and go to state 16
    PERC     shift, and go to state 17
    DICT     shift, and go to state 18
    PRINTLN  shift, and go to state 19
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    $default  reduce using rule 48 (func_def)

    prog            go to state 23
    stmt_list       go to state 24
    stmt            go to state 25
    assign          go to state 26
    lhs             go to state 27
    call_func       go to state 28
    decl_var        go to state 29
    decl_data_type  go to state 30
    var             go to state 31
    data_type       go to state 32
    prim_type       go to state 33
    abs_type        go to state 34
    definition      go to state 35
    type_def        go to state 36
    func_def        go to state 37
    expr            go to state 38
    term            go to state 39
    fact            go to state 40
    unaop           go to state 41
    f_builtin       go to state 42
    f_print         go to state 43
    f_input         go to state 44
    estr_cond       go to state 45
    estr_while      go to state 46
    estr_for        go to state 47


State 1

   28 prim_type: INT .

    $default  reduce using rule 28 (prim_type)


State 2

   29 prim_type: REAL .

    $default  reduce using rule 29 (prim_type)


State 3

   30 prim_type: STR .

    $default  reduce using rule 30 (prim_type)


State 4

   18 call_func: ID . LPAREN RPAREN
   19          | ID . LPAREN data_types RPAREN
   24 decl_data_type: ID .
   25 var: ID .
   34 abs_type: ID .

    LPAREN  shift, and go to state 48

    ID        reduce using rule 24 (decl_data_type)
    ASSIGN    reduce using rule 25 (var)
    $default  reduce using rule 34 (abs_type)


State 5

   45 type_def: TYPE . ID COLON ENDLINE decl_field_type END

    ID  shift, and go to state 49


State 6

   80 f_print: PRINT . ID

    ID  shift, and go to state 50


State 7

   82 f_input: INPUT . ID

    ID  shift, and go to state 51


State 8

   57 fact: LPAREN . expr RPAREN

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 52
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 13
    NIL     shift, and go to state 14
    LIST    shift, and go to state 16
    PERC    shift, and go to state 17
    DICT    shift, and go to state 18

    call_func  go to state 28
    data_type  go to state 32
    prim_type  go to state 33
    abs_type   go to state 34
    expr       go to state 53
    term       go to state 39
    fact       go to state 40
    unaop      go to state 41


State 9

   77 unaop: MINUS .

    $default  reduce using rule 77 (unaop)


State 10

   83 estr_cond: IF . expr COLON ENDLINE stmt_list END
   84          | IF . expr COLON ENDLINE stmt_list cond_else
   85          | IF . expr COLON ENDLINE stmt_list cond_elif

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 52
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 13
    NIL     shift, and go to state 14
    LIST    shift, and go to state 16
    PERC    shift, and go to state 17
    DICT    shift, and go to state 18

    call_func  go to state 28
    data_type  go to state 32
    prim_type  go to state 33
    abs_type   go to state 34
    expr       go to state 54
    term       go to state 39
    fact       go to state 40
    unaop      go to state 41


State 11

   89 estr_while: WHILE . expr COLON stmt_list END

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 52
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 13
    NIL     shift, and go to state 14
    LIST    shift, and go to state 16
    PERC    shift, and go to state 17
    DICT    shift, and go to state 18

    call_func  go to state 28
    data_type  go to state 32
    prim_type  go to state 33
    abs_type   go to state 34
    expr       go to state 55
    term       go to state 39
    fact       go to state 40
    unaop      go to state 41


State 12

   90 estr_for: FOR . decl_var COMMA var IN var COLON stmt_list END

    ID       shift, and go to state 56
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    decl_var        go to state 57
    decl_data_type  go to state 30


State 13

   75 unaop: NOT .

    $default  reduce using rule 75 (unaop)


State 14

   33 prim_type: NIL .

    $default  reduce using rule 33 (prim_type)


State 15

   49 func_def: DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list END
   50         | DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   51         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   52         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    ID  shift, and go to state 58


State 16

   32 prim_type: LIST . ASSIGN list

    ASSIGN  shift, and go to state 59


State 17

   76 unaop: PERC .

    $default  reduce using rule 76 (unaop)


State 18

   31 prim_type: DICT . ASSIGN dict

    ASSIGN  shift, and go to state 60


State 19

   81 f_print: PRINTLN . ID

    ID  shift, and go to state 61


State 20

   21 decl_data_type: DECINT .

    $default  reduce using rule 21 (decl_data_type)


State 21

   22 decl_data_type: DECREAL .

    $default  reduce using rule 22 (decl_data_type)


State 22

   23 decl_data_type: DECSTR .

    $default  reduce using rule 23 (decl_data_type)


State 23

    0 $accept: prog . $end

    $end  shift, and go to state 62


State 24

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 25

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    FOR      shift, and go to state 12
    NOT      shift, and go to state 13
    NIL      shift, and go to state 14
    DEF      shift, and go to state 15
    LIST     shift, and go to state 16
    PERC     shift, and go to state 17
    DICT     shift, and go to state 18
    PRINTLN  shift, and go to state 19
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    ENDLINE   reduce using rule 48 (func_def)
    $default  reduce using rule 2 (stmt_list)

    stmt_list       go to state 63
    stmt            go to state 25
    assign          go to state 26
    lhs             go to state 27
    call_func       go to state 28
    decl_var        go to state 29
    decl_data_type  go to state 30
    var             go to state 31
    data_type       go to state 32
    prim_type       go to state 33
    abs_type        go to state 34
    definition      go to state 35
    type_def        go to state 36
    func_def        go to state 37
    expr            go to state 38
    term            go to state 39
    fact            go to state 40
    unaop           go to state 41
    f_builtin       go to state 42
    f_print         go to state 43
    f_input         go to state 44
    estr_cond       go to state 45
    estr_while      go to state 46
    estr_for        go to state 47


State 26

    4 stmt: assign . end_stmt

    ENDLINE  shift, and go to state 64

    end_stmt  go to state 65


State 27

   13 assign: lhs . ASSIGN INT
   14       | lhs . ASSIGN REAL
   15       | lhs . ASSIGN STR

    ASSIGN  shift, and go to state 66


State 28

   60 fact: call_func .

    $default  reduce using rule 60 (fact)


State 29

    6 stmt: decl_var . end_stmt
   16 lhs: decl_var .

    ENDLINE  shift, and go to state 64

    $default  reduce using rule 16 (lhs)

    end_stmt  go to state 67


State 30

   20 decl_var: decl_data_type . ID

    ID  shift, and go to state 68


State 31

   17 lhs: var .

    $default  reduce using rule 17 (lhs)


State 32

   59 fact: data_type .

    $default  reduce using rule 59 (fact)


State 33

   26 data_type: prim_type .

    $default  reduce using rule 26 (data_type)


State 34

   27 data_type: abs_type .

    $default  reduce using rule 27 (data_type)


State 35

    5 stmt: definition . end_stmt

    ENDLINE  shift, and go to state 64

    end_stmt  go to state 69


State 36

   41 definition: type_def .

    $default  reduce using rule 41 (definition)


State 37

   42 definition: func_def .

    $default  reduce using rule 42 (definition)


State 38

    9 stmt: expr . end_stmt
   53 expr: expr . opbi1 term

    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NEQ      shift, and go to state 72
    EQ       shift, and go to state 73
    LT       shift, and go to state 74
    LE       shift, and go to state 75
    GT       shift, and go to state 76
    GE       shift, and go to state 77
    AND      shift, and go to state 78
    OR       shift, and go to state 79
    DIVM     shift, and go to state 80
    ADDEQ    shift, and go to state 81
    ENDLINE  shift, and go to state 64

    end_stmt  go to state 82
    opbi1     go to state 83


State 39

   54 expr: term .
   55 term: term . opbi2 fact

    TIMES  shift, and go to state 84
    DIV    shift, and go to state 85

    $default  reduce using rule 54 (expr)

    opbi2  go to state 86


State 40

   56 term: fact .

    $default  reduce using rule 56 (term)


State 41

   58 fact: unaop . data_type

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 87
    NIL   shift, and go to state 14
    LIST  shift, and go to state 16
    DICT  shift, and go to state 18

    data_type  go to state 88
    prim_type  go to state 33
    abs_type   go to state 34


State 42

    8 stmt: f_builtin . end_stmt

    ENDLINE  shift, and go to state 64

    end_stmt  go to state 89


State 43

   78 f_builtin: f_print .

    $default  reduce using rule 78 (f_builtin)


State 44

   79 f_builtin: f_input .

    $default  reduce using rule 79 (f_builtin)


State 45

    7 stmt: estr_cond . end_stmt

    ENDLINE  shift, and go to state 64

    end_stmt  go to state 90


State 46

   10 stmt: estr_while . end_stmt

    ENDLINE  shift, and go to state 64

    end_stmt  go to state 91


State 47

   11 stmt: estr_for . end_stmt

    ENDLINE  shift, and go to state 64

    end_stmt  go to state 92


State 48

   18 call_func: ID LPAREN . RPAREN
   19          | ID LPAREN . data_types RPAREN

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 87
    RPAREN  shift, and go to state 93
    NIL     shift, and go to state 14
    LIST    shift, and go to state 16
    DICT    shift, and go to state 18

    data_type   go to state 94
    prim_type   go to state 33
    abs_type    go to state 34
    data_types  go to state 95


State 49

   45 type_def: TYPE ID . COLON ENDLINE decl_field_type END

    COLON  shift, and go to state 96


State 50

   80 f_print: PRINT ID .

    $default  reduce using rule 80 (f_print)


State 51

   82 f_input: INPUT ID .

    $default  reduce using rule 82 (f_input)


State 52

   18 call_func: ID . LPAREN RPAREN
   19          | ID . LPAREN data_types RPAREN
   34 abs_type: ID .

    LPAREN  shift, and go to state 48

    $default  reduce using rule 34 (abs_type)


State 53

   53 expr: expr . opbi1 term
   57 fact: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 97
    PLUS    shift, and go to state 70
    MINUS   shift, and go to state 71
    NEQ     shift, and go to state 72
    EQ      shift, and go to state 73
    LT      shift, and go to state 74
    LE      shift, and go to state 75
    GT      shift, and go to state 76
    GE      shift, and go to state 77
    AND     shift, and go to state 78
    OR      shift, and go to state 79
    DIVM    shift, and go to state 80
    ADDEQ   shift, and go to state 81

    opbi1  go to state 83


State 54

   53 expr: expr . opbi1 term
   83 estr_cond: IF expr . COLON ENDLINE stmt_list END
   84          | IF expr . COLON ENDLINE stmt_list cond_else
   85          | IF expr . COLON ENDLINE stmt_list cond_elif

    COLON  shift, and go to state 98
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    NEQ    shift, and go to state 72
    EQ     shift, and go to state 73
    LT     shift, and go to state 74
    LE     shift, and go to state 75
    GT     shift, and go to state 76
    GE     shift, and go to state 77
    AND    shift, and go to state 78
    OR     shift, and go to state 79
    DIVM   shift, and go to state 80
    ADDEQ  shift, and go to state 81

    opbi1  go to state 83


State 55

   53 expr: expr . opbi1 term
   89 estr_while: WHILE expr . COLON stmt_list END

    COLON  shift, and go to state 99
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    NEQ    shift, and go to state 72
    EQ     shift, and go to state 73
    LT     shift, and go to state 74
    LE     shift, and go to state 75
    GT     shift, and go to state 76
    GE     shift, and go to state 77
    AND    shift, and go to state 78
    OR     shift, and go to state 79
    DIVM   shift, and go to state 80
    ADDEQ  shift, and go to state 81

    opbi1  go to state 83


State 56

   24 decl_data_type: ID .

    $default  reduce using rule 24 (decl_data_type)


State 57

   90 estr_for: FOR decl_var . COMMA var IN var COLON stmt_list END

    COMMA  shift, and go to state 100


State 58

   49 func_def: DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list END
   50         | DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   51         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   52         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    LPAREN  shift, and go to state 101


State 59

   32 prim_type: LIST ASSIGN . list

    LBRACE  shift, and go to state 102

    list  go to state 103


State 60

   31 prim_type: DICT ASSIGN . dict

    LBRACK  shift, and go to state 104

    dict  go to state 105


State 61

   81 f_print: PRINTLN ID .

    $default  reduce using rule 81 (f_print)


State 62

    0 $accept: prog $end .

    $default  accept


State 63

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 64

   12 end_stmt: ENDLINE .

    $default  reduce using rule 12 (end_stmt)


State 65

    4 stmt: assign end_stmt .

    $default  reduce using rule 4 (stmt)


State 66

   13 assign: lhs ASSIGN . INT
   14       | lhs ASSIGN . REAL
   15       | lhs ASSIGN . STR

    INT   shift, and go to state 106
    REAL  shift, and go to state 107
    STR   shift, and go to state 108


State 67

    6 stmt: decl_var end_stmt .

    $default  reduce using rule 6 (stmt)


State 68

   20 decl_var: decl_data_type ID .

    $default  reduce using rule 20 (decl_var)


State 69

    5 stmt: definition end_stmt .

    $default  reduce using rule 5 (stmt)


State 70

   61 opbi1: PLUS .

    $default  reduce using rule 61 (opbi1)


State 71

   62 opbi1: MINUS .

    $default  reduce using rule 62 (opbi1)


State 72

   71 opbi1: NEQ .

    $default  reduce using rule 71 (opbi1)


State 73

   67 opbi1: EQ .

    $default  reduce using rule 67 (opbi1)


State 74

   63 opbi1: LT .

    $default  reduce using rule 63 (opbi1)


State 75

   64 opbi1: LE .

    $default  reduce using rule 64 (opbi1)


State 76

   66 opbi1: GT .

    $default  reduce using rule 66 (opbi1)


State 77

   65 opbi1: GE .

    $default  reduce using rule 65 (opbi1)


State 78

   68 opbi1: AND .

    $default  reduce using rule 68 (opbi1)


State 79

   69 opbi1: OR .

    $default  reduce using rule 69 (opbi1)


State 80

   70 opbi1: DIVM .

    $default  reduce using rule 70 (opbi1)


State 81

   72 opbi1: ADDEQ .

    $default  reduce using rule 72 (opbi1)


State 82

    9 stmt: expr end_stmt .

    $default  reduce using rule 9 (stmt)


State 83

   53 expr: expr opbi1 . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 52
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 13
    NIL     shift, and go to state 14
    LIST    shift, and go to state 16
    PERC    shift, and go to state 17
    DICT    shift, and go to state 18

    call_func  go to state 28
    data_type  go to state 32
    prim_type  go to state 33
    abs_type   go to state 34
    term       go to state 109
    fact       go to state 40
    unaop      go to state 41


State 84

   74 opbi2: TIMES .

    $default  reduce using rule 74 (opbi2)


State 85

   73 opbi2: DIV .

    $default  reduce using rule 73 (opbi2)


State 86

   55 term: term opbi2 . fact

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 52
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 13
    NIL     shift, and go to state 14
    LIST    shift, and go to state 16
    PERC    shift, and go to state 17
    DICT    shift, and go to state 18

    call_func  go to state 28
    data_type  go to state 32
    prim_type  go to state 33
    abs_type   go to state 34
    fact       go to state 110
    unaop      go to state 41


State 87

   34 abs_type: ID .

    $default  reduce using rule 34 (abs_type)


State 88

   58 fact: unaop data_type .

    $default  reduce using rule 58 (fact)


State 89

    8 stmt: f_builtin end_stmt .

    $default  reduce using rule 8 (stmt)


State 90

    7 stmt: estr_cond end_stmt .

    $default  reduce using rule 7 (stmt)


State 91

   10 stmt: estr_while end_stmt .

    $default  reduce using rule 10 (stmt)


State 92

   11 stmt: estr_for end_stmt .

    $default  reduce using rule 11 (stmt)


State 93

   18 call_func: ID LPAREN RPAREN .

    $default  reduce using rule 18 (call_func)


State 94

   39 data_types: data_type .
   40           | data_type . COMMA data_types

    COMMA  shift, and go to state 111

    $default  reduce using rule 39 (data_types)


State 95

   19 call_func: ID LPAREN data_types . RPAREN

    RPAREN  shift, and go to state 112


State 96

   45 type_def: TYPE ID COLON . ENDLINE decl_field_type END

    ENDLINE  shift, and go to state 113


State 97

   57 fact: LPAREN expr RPAREN .

    $default  reduce using rule 57 (fact)


State 98

   83 estr_cond: IF expr COLON . ENDLINE stmt_list END
   84          | IF expr COLON . ENDLINE stmt_list cond_else
   85          | IF expr COLON . ENDLINE stmt_list cond_elif

    ENDLINE  shift, and go to state 114


State 99

   89 estr_while: WHILE expr COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    FOR      shift, and go to state 12
    NOT      shift, and go to state 13
    NIL      shift, and go to state 14
    DEF      shift, and go to state 15
    LIST     shift, and go to state 16
    PERC     shift, and go to state 17
    DICT     shift, and go to state 18
    PRINTLN  shift, and go to state 19
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    $default  reduce using rule 48 (func_def)

    stmt_list       go to state 115
    stmt            go to state 25
    assign          go to state 26
    lhs             go to state 27
    call_func       go to state 28
    decl_var        go to state 29
    decl_data_type  go to state 30
    var             go to state 31
    data_type       go to state 32
    prim_type       go to state 33
    abs_type        go to state 34
    definition      go to state 35
    type_def        go to state 36
    func_def        go to state 37
    expr            go to state 38
    term            go to state 39
    fact            go to state 40
    unaop           go to state 41
    f_builtin       go to state 42
    f_print         go to state 43
    f_input         go to state 44
    estr_cond       go to state 45
    estr_while      go to state 46
    estr_for        go to state 47


State 100

   90 estr_for: FOR decl_var COMMA . var IN var COLON stmt_list END

    ID  shift, and go to state 116

    var  go to state 117


State 101

   49 func_def: DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list END
   50         | DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   51         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   52         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list END

    ID       shift, and go to state 56
    RPAREN   shift, and go to state 118
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    decl_var        go to state 119
    decl_data_type  go to state 30
    param_func      go to state 120


State 102

   38 list: LBRACE . data_types RBRACE

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 87
    NIL   shift, and go to state 14
    LIST  shift, and go to state 16
    DICT  shift, and go to state 18

    data_type   go to state 94
    prim_type   go to state 33
    abs_type    go to state 34
    data_types  go to state 121


State 103

   32 prim_type: LIST ASSIGN list .

    $default  reduce using rule 32 (prim_type)


State 104

   35 dict: LBRACK . key_value RBRACK

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 87
    NIL   shift, and go to state 14
    LIST  shift, and go to state 16
    DICT  shift, and go to state 18

    data_type  go to state 122
    prim_type  go to state 33
    abs_type   go to state 34
    key_value  go to state 123


State 105

   31 prim_type: DICT ASSIGN dict .

    $default  reduce using rule 31 (prim_type)


State 106

   13 assign: lhs ASSIGN INT .

    $default  reduce using rule 13 (assign)


State 107

   14 assign: lhs ASSIGN REAL .

    $default  reduce using rule 14 (assign)


State 108

   15 assign: lhs ASSIGN STR .

    $default  reduce using rule 15 (assign)


State 109

   53 expr: expr opbi1 term .
   55 term: term . opbi2 fact

    TIMES  shift, and go to state 84
    DIV    shift, and go to state 85

    $default  reduce using rule 53 (expr)

    opbi2  go to state 86


State 110

   55 term: term opbi2 fact .

    $default  reduce using rule 55 (term)


State 111

   40 data_types: data_type COMMA . data_types

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 87
    NIL   shift, and go to state 14
    LIST  shift, and go to state 16
    DICT  shift, and go to state 18

    data_type   go to state 94
    prim_type   go to state 33
    abs_type    go to state 34
    data_types  go to state 124


State 112

   19 call_func: ID LPAREN data_types RPAREN .

    $default  reduce using rule 19 (call_func)


State 113

   45 type_def: TYPE ID COLON ENDLINE . decl_field_type END

    ID       shift, and go to state 56
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    decl_var         go to state 125
    decl_data_type   go to state 30
    decl_field_type  go to state 126


State 114

   83 estr_cond: IF expr COLON ENDLINE . stmt_list END
   84          | IF expr COLON ENDLINE . stmt_list cond_else
   85          | IF expr COLON ENDLINE . stmt_list cond_elif

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    FOR      shift, and go to state 12
    NOT      shift, and go to state 13
    NIL      shift, and go to state 14
    DEF      shift, and go to state 15
    LIST     shift, and go to state 16
    PERC     shift, and go to state 17
    DICT     shift, and go to state 18
    PRINTLN  shift, and go to state 19
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    $default  reduce using rule 48 (func_def)

    stmt_list       go to state 127
    stmt            go to state 25
    assign          go to state 26
    lhs             go to state 27
    call_func       go to state 28
    decl_var        go to state 29
    decl_data_type  go to state 30
    var             go to state 31
    data_type       go to state 32
    prim_type       go to state 33
    abs_type        go to state 34
    definition      go to state 35
    type_def        go to state 36
    func_def        go to state 37
    expr            go to state 38
    term            go to state 39
    fact            go to state 40
    unaop           go to state 41
    f_builtin       go to state 42
    f_print         go to state 43
    f_input         go to state 44
    estr_cond       go to state 45
    estr_while      go to state 46
    estr_for        go to state 47


State 115

   89 estr_while: WHILE expr COLON stmt_list . END

    END  shift, and go to state 128


State 116

   25 var: ID .

    $default  reduce using rule 25 (var)


State 117

   90 estr_for: FOR decl_var COMMA var . IN var COLON stmt_list END

    IN  shift, and go to state 129


State 118

   49 func_def: DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list END
   50         | DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END

    COLON  shift, and go to state 130


State 119

   46 param_func: decl_var .
   47           | decl_var . COMMA param_func

    COMMA  shift, and go to state 131

    $default  reduce using rule 46 (param_func)


State 120

   51 func_def: DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   52         | DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list END

    RPAREN  shift, and go to state 132


State 121

   38 list: LBRACE data_types . RBRACE

    RBRACE  shift, and go to state 133


State 122

   36 key_value: data_type . COLON data_type
   37          | data_type . COLON data_type COMMA key_value

    COLON  shift, and go to state 134


State 123

   35 dict: LBRACK key_value . RBRACK

    RBRACK  shift, and go to state 135


State 124

   40 data_types: data_type COMMA data_types .

    $default  reduce using rule 40 (data_types)


State 125

   43 decl_field_type: decl_var . ENDLINE
   44                | decl_var . ENDLINE decl_field_type

    ENDLINE  shift, and go to state 136


State 126

   45 type_def: TYPE ID COLON ENDLINE decl_field_type . END

    END  shift, and go to state 137


State 127

   83 estr_cond: IF expr COLON ENDLINE stmt_list . END
   84          | IF expr COLON ENDLINE stmt_list . cond_else
   85          | IF expr COLON ENDLINE stmt_list . cond_elif

    ELIF  shift, and go to state 138
    ELSE  shift, and go to state 139
    END   shift, and go to state 140

    cond_elif  go to state 141
    cond_else  go to state 142


State 128

   89 estr_while: WHILE expr COLON stmt_list END .

    $default  reduce using rule 89 (estr_while)


State 129

   90 estr_for: FOR decl_var COMMA var IN . var COLON stmt_list END

    ID  shift, and go to state 116

    var  go to state 143


State 130

   49 func_def: DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list END
   50         | DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END

    ENDLINE  shift, and go to state 144


State 131

   47 param_func: decl_var COMMA . param_func

    ID       shift, and go to state 56
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    decl_var        go to state 119
    decl_data_type  go to state 30
    param_func      go to state 145


State 132

   51 func_def: DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END
   52         | DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 146


State 133

   38 list: LBRACE data_types RBRACE .

    $default  reduce using rule 38 (list)


State 134

   36 key_value: data_type COLON . data_type
   37          | data_type COLON . data_type COMMA key_value

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 87
    NIL   shift, and go to state 14
    LIST  shift, and go to state 16
    DICT  shift, and go to state 18

    data_type  go to state 147
    prim_type  go to state 33
    abs_type   go to state 34


State 135

   35 dict: LBRACK key_value RBRACK .

    $default  reduce using rule 35 (dict)


State 136

   43 decl_field_type: decl_var ENDLINE .
   44                | decl_var ENDLINE . decl_field_type

    ID       shift, and go to state 56
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    $default  reduce using rule 43 (decl_field_type)

    decl_var         go to state 125
    decl_data_type   go to state 30
    decl_field_type  go to state 148


State 137

   45 type_def: TYPE ID COLON ENDLINE decl_field_type END .

    $default  reduce using rule 45 (type_def)


State 138

   86 cond_elif: ELIF . expr COLON ENDLINE stmt_list cond_elif
   87          | ELIF . expr COLON ENDLINE stmt_list cond_else

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 52
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 9
    NOT     shift, and go to state 13
    NIL     shift, and go to state 14
    LIST    shift, and go to state 16
    PERC    shift, and go to state 17
    DICT    shift, and go to state 18

    call_func  go to state 28
    data_type  go to state 32
    prim_type  go to state 33
    abs_type   go to state 34
    expr       go to state 149
    term       go to state 39
    fact       go to state 40
    unaop      go to state 41


State 139

   88 cond_else: ELSE . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 150


State 140

   83 estr_cond: IF expr COLON ENDLINE stmt_list END .

    $default  reduce using rule 83 (estr_cond)


State 141

   85 estr_cond: IF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 85 (estr_cond)


State 142

   84 estr_cond: IF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 84 (estr_cond)


State 143

   90 estr_for: FOR decl_var COMMA var IN var . COLON stmt_list END

    COLON  shift, and go to state 151


State 144

   49 func_def: DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list END
   50         | DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    FOR      shift, and go to state 12
    NOT      shift, and go to state 13
    NIL      shift, and go to state 14
    DEF      shift, and go to state 15
    LIST     shift, and go to state 16
    PERC     shift, and go to state 17
    DICT     shift, and go to state 18
    PRINTLN  shift, and go to state 19
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    $default  reduce using rule 48 (func_def)

    stmt_list       go to state 152
    stmt            go to state 25
    assign          go to state 26
    lhs             go to state 27
    call_func       go to state 28
    decl_var        go to state 29
    decl_data_type  go to state 30
    var             go to state 31
    data_type       go to state 32
    prim_type       go to state 33
    abs_type        go to state 34
    definition      go to state 35
    type_def        go to state 36
    func_def        go to state 37
    expr            go to state 38
    term            go to state 39
    fact            go to state 40
    unaop           go to state 41
    f_builtin       go to state 42
    f_print         go to state 43
    f_input         go to state 44
    estr_cond       go to state 45
    estr_while      go to state 46
    estr_for        go to state 47


State 145

   47 param_func: decl_var COMMA param_func .

    $default  reduce using rule 47 (param_func)


State 146

   51 func_def: DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END
   52         | DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 153


State 147

   36 key_value: data_type COLON data_type .
   37          | data_type COLON data_type . COMMA key_value

    COMMA  shift, and go to state 154

    $default  reduce using rule 36 (key_value)


State 148

   44 decl_field_type: decl_var ENDLINE decl_field_type .

    $default  reduce using rule 44 (decl_field_type)


State 149

   53 expr: expr . opbi1 term
   86 cond_elif: ELIF expr . COLON ENDLINE stmt_list cond_elif
   87          | ELIF expr . COLON ENDLINE stmt_list cond_else

    COLON  shift, and go to state 155
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    NEQ    shift, and go to state 72
    EQ     shift, and go to state 73
    LT     shift, and go to state 74
    LE     shift, and go to state 75
    GT     shift, and go to state 76
    GE     shift, and go to state 77
    AND    shift, and go to state 78
    OR     shift, and go to state 79
    DIVM   shift, and go to state 80
    ADDEQ  shift, and go to state 81

    opbi1  go to state 83


State 150

   88 cond_else: ELSE COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 156


State 151

   90 estr_for: FOR decl_var COMMA var IN var COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    FOR      shift, and go to state 12
    NOT      shift, and go to state 13
    NIL      shift, and go to state 14
    DEF      shift, and go to state 15
    LIST     shift, and go to state 16
    PERC     shift, and go to state 17
    DICT     shift, and go to state 18
    PRINTLN  shift, and go to state 19
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    $default  reduce using rule 48 (func_def)

    stmt_list       go to state 157
    stmt            go to state 25
    assign          go to state 26
    lhs             go to state 27
    call_func       go to state 28
    decl_var        go to state 29
    decl_data_type  go to state 30
    var             go to state 31
    data_type       go to state 32
    prim_type       go to state 33
    abs_type        go to state 34
    definition      go to state 35
    type_def        go to state 36
    func_def        go to state 37
    expr            go to state 38
    term            go to state 39
    fact            go to state 40
    unaop           go to state 41
    f_builtin       go to state 42
    f_print         go to state 43
    f_input         go to state 44
    estr_cond       go to state 45
    estr_while      go to state 46
    estr_for        go to state 47


State 152

   49 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . END
   50         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END

    RETURN  shift, and go to state 158
    END     shift, and go to state 159


State 153

   51 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END
   52         | DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    FOR      shift, and go to state 12
    NOT      shift, and go to state 13
    NIL      shift, and go to state 14
    DEF      shift, and go to state 15
    LIST     shift, and go to state 16
    PERC     shift, and go to state 17
    DICT     shift, and go to state 18
    PRINTLN  shift, and go to state 19
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    $default  reduce using rule 48 (func_def)

    stmt_list       go to state 160
    stmt            go to state 25
    assign          go to state 26
    lhs             go to state 27
    call_func       go to state 28
    decl_var        go to state 29
    decl_data_type  go to state 30
    var             go to state 31
    data_type       go to state 32
    prim_type       go to state 33
    abs_type        go to state 34
    definition      go to state 35
    type_def        go to state 36
    func_def        go to state 37
    expr            go to state 38
    term            go to state 39
    fact            go to state 40
    unaop           go to state 41
    f_builtin       go to state 42
    f_print         go to state 43
    f_input         go to state 44
    estr_cond       go to state 45
    estr_while      go to state 46
    estr_for        go to state 47


State 154

   37 key_value: data_type COLON data_type COMMA . key_value

    INT   shift, and go to state 1
    REAL  shift, and go to state 2
    STR   shift, and go to state 3
    ID    shift, and go to state 87
    NIL   shift, and go to state 14
    LIST  shift, and go to state 16
    DICT  shift, and go to state 18

    data_type  go to state 122
    prim_type  go to state 33
    abs_type   go to state 34
    key_value  go to state 161


State 155

   86 cond_elif: ELIF expr COLON . ENDLINE stmt_list cond_elif
   87          | ELIF expr COLON . ENDLINE stmt_list cond_else

    ENDLINE  shift, and go to state 162


State 156

   88 cond_else: ELSE COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    FOR      shift, and go to state 12
    NOT      shift, and go to state 13
    NIL      shift, and go to state 14
    DEF      shift, and go to state 15
    LIST     shift, and go to state 16
    PERC     shift, and go to state 17
    DICT     shift, and go to state 18
    PRINTLN  shift, and go to state 19
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    $default  reduce using rule 48 (func_def)

    stmt_list       go to state 163
    stmt            go to state 25
    assign          go to state 26
    lhs             go to state 27
    call_func       go to state 28
    decl_var        go to state 29
    decl_data_type  go to state 30
    var             go to state 31
    data_type       go to state 32
    prim_type       go to state 33
    abs_type        go to state 34
    definition      go to state 35
    type_def        go to state 36
    func_def        go to state 37
    expr            go to state 38
    term            go to state 39
    fact            go to state 40
    unaop           go to state 41
    f_builtin       go to state 42
    f_print         go to state 43
    f_input         go to state 44
    estr_cond       go to state 45
    estr_while      go to state 46
    estr_for        go to state 47


State 157

   90 estr_for: FOR decl_var COMMA var IN var COLON stmt_list . END

    END  shift, and go to state 164


State 158

   50 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 165


State 159

   49 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 49 (func_def)


State 160

   51 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END
   52         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . END

    RETURN  shift, and go to state 166
    END     shift, and go to state 167


State 161

   37 key_value: data_type COLON data_type COMMA key_value .

    $default  reduce using rule 37 (key_value)


State 162

   86 cond_elif: ELIF expr COLON ENDLINE . stmt_list cond_elif
   87          | ELIF expr COLON ENDLINE . stmt_list cond_else

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    MINUS    shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    FOR      shift, and go to state 12
    NOT      shift, and go to state 13
    NIL      shift, and go to state 14
    DEF      shift, and go to state 15
    LIST     shift, and go to state 16
    PERC     shift, and go to state 17
    DICT     shift, and go to state 18
    PRINTLN  shift, and go to state 19
    DECINT   shift, and go to state 20
    DECREAL  shift, and go to state 21
    DECSTR   shift, and go to state 22

    $default  reduce using rule 48 (func_def)

    stmt_list       go to state 168
    stmt            go to state 25
    assign          go to state 26
    lhs             go to state 27
    call_func       go to state 28
    decl_var        go to state 29
    decl_data_type  go to state 30
    var             go to state 31
    data_type       go to state 32
    prim_type       go to state 33
    abs_type        go to state 34
    definition      go to state 35
    type_def        go to state 36
    func_def        go to state 37
    expr            go to state 38
    term            go to state 39
    fact            go to state 40
    unaop           go to state 41
    f_builtin       go to state 42
    f_print         go to state 43
    f_input         go to state 44
    estr_cond       go to state 45
    estr_while      go to state 46
    estr_for        go to state 47


State 163

   88 cond_else: ELSE COLON ENDLINE stmt_list . END

    END  shift, and go to state 169


State 164

   90 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END .

    $default  reduce using rule 90 (estr_for)


State 165

   50 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 170


State 166

   51 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 171


State 167

   52 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 52 (func_def)


State 168

   86 cond_elif: ELIF expr COLON ENDLINE stmt_list . cond_elif
   87          | ELIF expr COLON ENDLINE stmt_list . cond_else

    ELIF  shift, and go to state 138
    ELSE  shift, and go to state 139

    cond_elif  go to state 172
    cond_else  go to state 173


State 169

   88 cond_else: ELSE COLON ENDLINE stmt_list END .

    $default  reduce using rule 88 (cond_else)


State 170

   50 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 174


State 171

   51 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 175


State 172

   86 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 86 (cond_elif)


State 173

   87 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 87 (cond_elif)


State 174

   50 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 50 (func_def)


State 175

   51 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 176


State 176

   51 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 51 (func_def)
