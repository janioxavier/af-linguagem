Nonterminals useless in grammar

   call_func
   data_type
   prim_type
   abs_type
   data_types


Terminals unused in grammar

   SEMICOLON
   LBRACE
   RBRACE
   LBRACK
   RBRACK
   DOT
   SKIP
   NIL
   TRUE
   FALSE
   BREAK
   SET
   LIST
   ADDPERC
   SUBPERC
   ADDEQ
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   DICT
   MAIN
   CONTSTMT
   DIV
   PERC
   '-'


Rules useless in grammar

   64 call_func: ID LPAREN RPAREN
   65          | ID LPAREN data_types RPAREN

   66 data_type: prim_type
   67          | abs_type

   68 prim_type: INT
   69          | REAL
   70          | STR
   71          | NIL

   72 abs_type: ID

   73 data_types: data_type
   74           | data_type COMMA data_types


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: definition end_stmt
    5     | decl_var end_stmt
    6     | estr_cond end_stmt
    7     | f_builtin end_stmt
    8     | expr end_stmt
    9     | estr_while end_stmt
   10     | estr_for end_stmt

   11 end_stmt: ENDLINE

   12 decl_var: decl_data_type ID
   13         | decl_data_type ID ASSIGN expr

   14 decl_data_type: DECINT
   15               | DECREAL
   16               | DECSTR
   17               | ID

   18 var: ID

   19 definition: type_def
   20           | func_def

   21 decl_field_type: decl_var ENDLINE
   22                | decl_var ENDLINE decl_field_type

   23 type_def: TYPE ID COLON ENDLINE decl_field_type END

   24 param_func: decl_var
   25           | decl_var COMMA param_func

   26 func_def: %empty
   27         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

   31 expr: LPAREN expr RPAREN
   32     | expr PLUS expr
   33     | expr MINUS expr
   34     | expr TIMES expr
   35     | expr DIVIDE expr
   36     | expr ASSIGN expr
   37     | expr LT expr
   38     | expr LE expr
   39     | expr GE expr
   40     | expr GT expr
   41     | expr EQ expr
   42     | expr AND expr
   43     | expr OR expr
   44     | expr DIVM expr
   45     | expr NEQ expr
   46     | MINUS expr
   47     | NOT expr
   48     | ID
   49     | REAL
   50     | INT
   51     | STR

   52 f_builtin: f_print
   53          | f_input

   54 f_print: PRINT expr

   55 f_input: INPUT ID

   56 estr_cond: IF expr COLON ENDLINE stmt_list END
   57          | IF expr COLON ENDLINE stmt_list cond_else
   58          | IF expr COLON ENDLINE stmt_list cond_elif

   59 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif
   60          | ELIF expr COLON ENDLINE stmt_list cond_else

   61 cond_else: ELSE COLON ENDLINE stmt_list END

   62 estr_while: WHILE expr COLON stmt_list END

   63 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END


Terminals, with rules where they appear

$end (0) 0
'-' (45)
error (256)
INT (258) 50
REAL (259) 49
STR (260) 51
ID (261) 12 13 17 18 23 27 28 29 30 48 55
TYPE (262) 23
PRINT (263) 54
INPUT (264) 55
COMMA (265) 25 63
COLON (266) 23 27 28 29 30 56 57 58 59 60 61 62 63
SEMICOLON (267)
LPAREN (268) 27 28 29 30 31
RPAREN (269) 27 28 29 30 31
LBRACE (270)
RBRACE (271)
LBRACK (272)
RBRACK (273)
DOT (274)
ASSIGN (275) 13 36
ELIF (276) 59 60
IF (277) 56 57 58
ELSE (278) 61
RETURN (279) 28 29
WHILE (280) 62
FOR (281) 63
SKIP (282)
IN (283) 63
NIL (284)
DEF (285) 27 28 29 30
TRUE (286)
FALSE (287)
BREAK (288)
SET (289)
LIST (290)
ADDPERC (291)
SUBPERC (292)
ADDEQ (293)
SUBEQ (294)
DIVEQ (295)
MULTEQ (296)
DIVMEQ (297)
DICT (298)
MAIN (299)
END (300) 23 27 28 29 30 56 61 62 63
ENDLINE (301) 11 21 22 23 27 28 29 30 56 57 58 59 60 61
CONTSTMT (302)
DIV (303)
DECINT (304) 14
DECREAL (305) 15
DECSTR (306) 16
PLUS (307) 32
MINUS (308) 33 46
AND (309) 42
OR (310) 43
NEQ (311) 45
EQ (312) 41
LT (313) 37
LE (314) 38
GT (315) 40
GE (316) 39
PERC (317)
DIVM (318) 44
TIMES (319) 34
DIVIDE (320) 35
NOT (321) 47


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
prog (69)
    on left: 1, on right: 0
stmt_list (70)
    on left: 2 3, on right: 1 3 27 28 29 30 56 57 58 59 60 61 62 63
stmt (71)
    on left: 4 5 6 7 8 9 10, on right: 2 3
end_stmt (72)
    on left: 11, on right: 4 5 6 7 8 9 10
decl_var (73)
    on left: 12 13, on right: 5 21 22 24 25 63
decl_data_type (74)
    on left: 14 15 16 17, on right: 12 13
var (75)
    on left: 18, on right: 63
definition (76)
    on left: 19 20, on right: 4
decl_field_type (77)
    on left: 21 22, on right: 22 23
type_def (78)
    on left: 23, on right: 19
param_func (79)
    on left: 24 25, on right: 25 29 30
func_def (80)
    on left: 26 27 28 29 30, on right: 20
expr (81)
    on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    49 50 51, on right: 8 13 31 32 33 34 35 36 37 38 39 40 41 42 43
    44 45 46 47 54 56 57 58 59 60 62
f_builtin (82)
    on left: 52 53, on right: 7
f_print (83)
    on left: 54, on right: 52
f_input (84)
    on left: 55, on right: 53
estr_cond (85)
    on left: 56 57 58, on right: 6
cond_elif (86)
    on left: 59 60, on right: 58 59
cond_else (87)
    on left: 61, on right: 57 60
estr_while (88)
    on left: 62, on right: 9
estr_for (89)
    on left: 63, on right: 10


State 0

    0 $accept: . prog $end

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    NOT      shift, and go to state 17

    $default  reduce using rule 26 (func_def)

    prog            go to state 18
    stmt_list       go to state 19
    stmt            go to state 20
    decl_var        go to state 21
    decl_data_type  go to state 22
    definition      go to state 23
    type_def        go to state 24
    func_def        go to state 25
    expr            go to state 26
    f_builtin       go to state 27
    f_print         go to state 28
    f_input         go to state 29
    estr_cond       go to state 30
    estr_while      go to state 31
    estr_for        go to state 32


State 1

   50 expr: INT .

    $default  reduce using rule 50 (expr)


State 2

   49 expr: REAL .

    $default  reduce using rule 49 (expr)


State 3

   51 expr: STR .

    $default  reduce using rule 51 (expr)


State 4

   17 decl_data_type: ID .
   48 expr: ID .

    ID        reduce using rule 17 (decl_data_type)
    $default  reduce using rule 48 (expr)


State 5

   23 type_def: TYPE . ID COLON ENDLINE decl_field_type END

    ID  shift, and go to state 33


State 6

   54 f_print: PRINT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 35


State 7

   55 f_input: INPUT . ID

    ID  shift, and go to state 36


State 8

   31 expr: LPAREN . expr RPAREN

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 37


State 9

   56 estr_cond: IF . expr COLON ENDLINE stmt_list END
   57          | IF . expr COLON ENDLINE stmt_list cond_else
   58          | IF . expr COLON ENDLINE stmt_list cond_elif

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 38


State 10

   62 estr_while: WHILE . expr COLON stmt_list END

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 39


State 11

   63 estr_for: FOR . decl_var COMMA var IN var COLON stmt_list END

    ID       shift, and go to state 40
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 41
    decl_data_type  go to state 22


State 12

   27 func_def: DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    ID  shift, and go to state 42


State 13

   14 decl_data_type: DECINT .

    $default  reduce using rule 14 (decl_data_type)


State 14

   15 decl_data_type: DECREAL .

    $default  reduce using rule 15 (decl_data_type)


State 15

   16 decl_data_type: DECSTR .

    $default  reduce using rule 16 (decl_data_type)


State 16

   46 expr: MINUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 43


State 17

   47 expr: NOT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 44


State 18

    0 $accept: prog . $end

    $end  shift, and go to state 45


State 19

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 20

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    NOT      shift, and go to state 17

    ENDLINE   reduce using rule 26 (func_def)
    $default  reduce using rule 2 (stmt_list)

    stmt_list       go to state 46
    stmt            go to state 20
    decl_var        go to state 21
    decl_data_type  go to state 22
    definition      go to state 23
    type_def        go to state 24
    func_def        go to state 25
    expr            go to state 26
    f_builtin       go to state 27
    f_print         go to state 28
    f_input         go to state 29
    estr_cond       go to state 30
    estr_while      go to state 31
    estr_for        go to state 32


State 21

    5 stmt: decl_var . end_stmt

    ENDLINE  shift, and go to state 47

    end_stmt  go to state 48


State 22

   12 decl_var: decl_data_type . ID
   13         | decl_data_type . ID ASSIGN expr

    ID  shift, and go to state 49


State 23

    4 stmt: definition . end_stmt

    ENDLINE  shift, and go to state 47

    end_stmt  go to state 50


State 24

   19 definition: type_def .

    $default  reduce using rule 19 (definition)


State 25

   20 definition: func_def .

    $default  reduce using rule 20 (definition)


State 26

    8 stmt: expr . end_stmt
   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN   shift, and go to state 51
    ENDLINE  shift, and go to state 47
    PLUS     shift, and go to state 52
    MINUS    shift, and go to state 53
    AND      shift, and go to state 54
    OR       shift, and go to state 55
    NEQ      shift, and go to state 56
    EQ       shift, and go to state 57
    LT       shift, and go to state 58
    LE       shift, and go to state 59
    GT       shift, and go to state 60
    GE       shift, and go to state 61
    DIVM     shift, and go to state 62
    TIMES    shift, and go to state 63
    DIVIDE   shift, and go to state 64

    end_stmt  go to state 65


State 27

    7 stmt: f_builtin . end_stmt

    ENDLINE  shift, and go to state 47

    end_stmt  go to state 66


State 28

   52 f_builtin: f_print .

    $default  reduce using rule 52 (f_builtin)


State 29

   53 f_builtin: f_input .

    $default  reduce using rule 53 (f_builtin)


State 30

    6 stmt: estr_cond . end_stmt

    ENDLINE  shift, and go to state 47

    end_stmt  go to state 67


State 31

    9 stmt: estr_while . end_stmt

    ENDLINE  shift, and go to state 47

    end_stmt  go to state 68


State 32

   10 stmt: estr_for . end_stmt

    ENDLINE  shift, and go to state 47

    end_stmt  go to state 69


State 33

   23 type_def: TYPE ID . COLON ENDLINE decl_field_type END

    COLON  shift, and go to state 70


State 34

   48 expr: ID .

    $default  reduce using rule 48 (expr)


State 35

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   54 f_print: PRINT expr .

    ASSIGN  shift, and go to state 51
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    NEQ     shift, and go to state 56
    EQ      shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    DIVM    shift, and go to state 62
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 54 (f_print)


State 36

   55 f_input: INPUT ID .

    $default  reduce using rule 55 (f_input)


State 37

   31 expr: LPAREN expr . RPAREN
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    RPAREN  shift, and go to state 71
    ASSIGN  shift, and go to state 51
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    NEQ     shift, and go to state 56
    EQ      shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    DIVM    shift, and go to state 62
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64


State 38

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   56 estr_cond: IF expr . COLON ENDLINE stmt_list END
   57          | IF expr . COLON ENDLINE stmt_list cond_else
   58          | IF expr . COLON ENDLINE stmt_list cond_elif

    COLON   shift, and go to state 72
    ASSIGN  shift, and go to state 51
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    NEQ     shift, and go to state 56
    EQ      shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    DIVM    shift, and go to state 62
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64


State 39

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   62 estr_while: WHILE expr . COLON stmt_list END

    COLON   shift, and go to state 73
    ASSIGN  shift, and go to state 51
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    NEQ     shift, and go to state 56
    EQ      shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    DIVM    shift, and go to state 62
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64


State 40

   17 decl_data_type: ID .

    $default  reduce using rule 17 (decl_data_type)


State 41

   63 estr_for: FOR decl_var . COMMA var IN var COLON stmt_list END

    COMMA  shift, and go to state 74


State 42

   27 func_def: DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    LPAREN  shift, and go to state 75


State 43

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   46     | MINUS expr .

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 46 (expr)


State 44

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   47     | NOT expr .

    ASSIGN  shift, and go to state 51

    $default  reduce using rule 47 (expr)


State 45

    0 $accept: prog $end .

    $default  accept


State 46

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 47

   11 end_stmt: ENDLINE .

    $default  reduce using rule 11 (end_stmt)


State 48

    5 stmt: decl_var end_stmt .

    $default  reduce using rule 5 (stmt)


State 49

   12 decl_var: decl_data_type ID .
   13         | decl_data_type ID . ASSIGN expr

    ASSIGN  shift, and go to state 76

    $default  reduce using rule 12 (decl_var)


State 50

    4 stmt: definition end_stmt .

    $default  reduce using rule 4 (stmt)


State 51

   36 expr: expr ASSIGN . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 77


State 52

   32 expr: expr PLUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 78


State 53

   33 expr: expr MINUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 79


State 54

   42 expr: expr AND . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 80


State 55

   43 expr: expr OR . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 81


State 56

   45 expr: expr NEQ . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 82


State 57

   41 expr: expr EQ . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 83


State 58

   37 expr: expr LT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 84


State 59

   38 expr: expr LE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 85


State 60

   40 expr: expr GT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 86


State 61

   39 expr: expr GE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 87


State 62

   44 expr: expr DIVM . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 88


State 63

   34 expr: expr TIMES . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 89


State 64

   35 expr: expr DIVIDE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 90


State 65

    8 stmt: expr end_stmt .

    $default  reduce using rule 8 (stmt)


State 66

    7 stmt: f_builtin end_stmt .

    $default  reduce using rule 7 (stmt)


State 67

    6 stmt: estr_cond end_stmt .

    $default  reduce using rule 6 (stmt)


State 68

    9 stmt: estr_while end_stmt .

    $default  reduce using rule 9 (stmt)


State 69

   10 stmt: estr_for end_stmt .

    $default  reduce using rule 10 (stmt)


State 70

   23 type_def: TYPE ID COLON . ENDLINE decl_field_type END

    ENDLINE  shift, and go to state 91


State 71

   31 expr: LPAREN expr RPAREN .

    $default  reduce using rule 31 (expr)


State 72

   56 estr_cond: IF expr COLON . ENDLINE stmt_list END
   57          | IF expr COLON . ENDLINE stmt_list cond_else
   58          | IF expr COLON . ENDLINE stmt_list cond_elif

    ENDLINE  shift, and go to state 92


State 73

   62 estr_while: WHILE expr COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    NOT      shift, and go to state 17

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 93
    stmt            go to state 20
    decl_var        go to state 21
    decl_data_type  go to state 22
    definition      go to state 23
    type_def        go to state 24
    func_def        go to state 25
    expr            go to state 26
    f_builtin       go to state 27
    f_print         go to state 28
    f_input         go to state 29
    estr_cond       go to state 30
    estr_while      go to state 31
    estr_for        go to state 32


State 74

   63 estr_for: FOR decl_var COMMA . var IN var COLON stmt_list END

    ID  shift, and go to state 94

    var  go to state 95


State 75

   27 func_def: DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list END

    ID       shift, and go to state 40
    RPAREN   shift, and go to state 96
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 97
    decl_data_type  go to state 22
    param_func      go to state 98


State 76

   13 decl_var: decl_data_type ID ASSIGN . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 99


State 77

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   36     | expr ASSIGN expr .
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51

    $default  reduce using rule 36 (expr)


State 78

   32 expr: expr . PLUS expr
   32     | expr PLUS expr .
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 32 (expr)


State 79

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   33     | expr MINUS expr .
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 33 (expr)


State 80

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   42     | expr AND expr .
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 42 (expr)


State 81

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   43     | expr OR expr .
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 43 (expr)


State 82

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   45     | expr NEQ expr .

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 45 (expr)


State 83

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   41     | expr EQ expr .
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 41 (expr)


State 84

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   37     | expr LT expr .
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 37 (expr)


State 85

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   38     | expr LE expr .
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 38 (expr)


State 86

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   40     | expr GT expr .
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 40 (expr)


State 87

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   39     | expr GE expr .
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 39 (expr)


State 88

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   44     | expr DIVM expr .
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 44 (expr)


State 89

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   34     | expr TIMES expr .
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51

    $default  reduce using rule 34 (expr)


State 90

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   35     | expr DIVIDE expr .
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51

    $default  reduce using rule 35 (expr)


State 91

   23 type_def: TYPE ID COLON ENDLINE . decl_field_type END

    ID       shift, and go to state 40
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var         go to state 100
    decl_data_type   go to state 22
    decl_field_type  go to state 101


State 92

   56 estr_cond: IF expr COLON ENDLINE . stmt_list END
   57          | IF expr COLON ENDLINE . stmt_list cond_else
   58          | IF expr COLON ENDLINE . stmt_list cond_elif

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    NOT      shift, and go to state 17

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 102
    stmt            go to state 20
    decl_var        go to state 21
    decl_data_type  go to state 22
    definition      go to state 23
    type_def        go to state 24
    func_def        go to state 25
    expr            go to state 26
    f_builtin       go to state 27
    f_print         go to state 28
    f_input         go to state 29
    estr_cond       go to state 30
    estr_while      go to state 31
    estr_for        go to state 32


State 93

   62 estr_while: WHILE expr COLON stmt_list . END

    END  shift, and go to state 103


State 94

   18 var: ID .

    $default  reduce using rule 18 (var)


State 95

   63 estr_for: FOR decl_var COMMA var . IN var COLON stmt_list END

    IN  shift, and go to state 104


State 96

   27 func_def: DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END

    COLON  shift, and go to state 105


State 97

   24 param_func: decl_var .
   25           | decl_var . COMMA param_func

    COMMA  shift, and go to state 106

    $default  reduce using rule 24 (param_func)


State 98

   29 func_def: DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list END

    RPAREN  shift, and go to state 107


State 99

   13 decl_var: decl_data_type ID ASSIGN expr .
   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 51
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    NEQ     shift, and go to state 56
    EQ      shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    DIVM    shift, and go to state 62
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 13 (decl_var)


State 100

   21 decl_field_type: decl_var . ENDLINE
   22                | decl_var . ENDLINE decl_field_type

    ENDLINE  shift, and go to state 108


State 101

   23 type_def: TYPE ID COLON ENDLINE decl_field_type . END

    END  shift, and go to state 109


State 102

   56 estr_cond: IF expr COLON ENDLINE stmt_list . END
   57          | IF expr COLON ENDLINE stmt_list . cond_else
   58          | IF expr COLON ENDLINE stmt_list . cond_elif

    ELIF  shift, and go to state 110
    ELSE  shift, and go to state 111
    END   shift, and go to state 112

    cond_elif  go to state 113
    cond_else  go to state 114


State 103

   62 estr_while: WHILE expr COLON stmt_list END .

    $default  reduce using rule 62 (estr_while)


State 104

   63 estr_for: FOR decl_var COMMA var IN . var COLON stmt_list END

    ID  shift, and go to state 94

    var  go to state 115


State 105

   27 func_def: DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END

    ENDLINE  shift, and go to state 116


State 106

   25 param_func: decl_var COMMA . param_func

    ID       shift, and go to state 40
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 97
    decl_data_type  go to state 22
    param_func      go to state 117


State 107

   29 func_def: DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 118


State 108

   21 decl_field_type: decl_var ENDLINE .
   22                | decl_var ENDLINE . decl_field_type

    ID       shift, and go to state 40
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 21 (decl_field_type)

    decl_var         go to state 100
    decl_data_type   go to state 22
    decl_field_type  go to state 119


State 109

   23 type_def: TYPE ID COLON ENDLINE decl_field_type END .

    $default  reduce using rule 23 (type_def)


State 110

   59 cond_elif: ELIF . expr COLON ENDLINE stmt_list cond_elif
   60          | ELIF . expr COLON ENDLINE stmt_list cond_else

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 34
    LPAREN  shift, and go to state 8
    MINUS   shift, and go to state 16
    NOT     shift, and go to state 17

    expr  go to state 120


State 111

   61 cond_else: ELSE . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 121


State 112

   56 estr_cond: IF expr COLON ENDLINE stmt_list END .

    $default  reduce using rule 56 (estr_cond)


State 113

   58 estr_cond: IF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 58 (estr_cond)


State 114

   57 estr_cond: IF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 57 (estr_cond)


State 115

   63 estr_for: FOR decl_var COMMA var IN var . COLON stmt_list END

    COLON  shift, and go to state 122


State 116

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    NOT      shift, and go to state 17

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 123
    stmt            go to state 20
    decl_var        go to state 21
    decl_data_type  go to state 22
    definition      go to state 23
    type_def        go to state 24
    func_def        go to state 25
    expr            go to state 26
    f_builtin       go to state 27
    f_print         go to state 28
    f_input         go to state 29
    estr_cond       go to state 30
    estr_while      go to state 31
    estr_for        go to state 32


State 117

   25 param_func: decl_var COMMA param_func .

    $default  reduce using rule 25 (param_func)


State 118

   29 func_def: DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 124


State 119

   22 decl_field_type: decl_var ENDLINE decl_field_type .

    $default  reduce using rule 22 (decl_field_type)


State 120

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   59 cond_elif: ELIF expr . COLON ENDLINE stmt_list cond_elif
   60          | ELIF expr . COLON ENDLINE stmt_list cond_else

    COLON   shift, and go to state 125
    ASSIGN  shift, and go to state 51
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    NEQ     shift, and go to state 56
    EQ      shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    DIVM    shift, and go to state 62
    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64


State 121

   61 cond_else: ELSE COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 126


State 122

   63 estr_for: FOR decl_var COMMA var IN var COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    NOT      shift, and go to state 17

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 127
    stmt            go to state 20
    decl_var        go to state 21
    decl_data_type  go to state 22
    definition      go to state 23
    type_def        go to state 24
    func_def        go to state 25
    expr            go to state 26
    f_builtin       go to state 27
    f_print         go to state 28
    f_input         go to state 29
    estr_cond       go to state 30
    estr_while      go to state 31
    estr_for        go to state 32


State 123

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END

    RETURN  shift, and go to state 128
    END     shift, and go to state 129


State 124

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    NOT      shift, and go to state 17

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 130
    stmt            go to state 20
    decl_var        go to state 21
    decl_data_type  go to state 22
    definition      go to state 23
    type_def        go to state 24
    func_def        go to state 25
    expr            go to state 26
    f_builtin       go to state 27
    f_print         go to state 28
    f_input         go to state 29
    estr_cond       go to state 30
    estr_while      go to state 31
    estr_for        go to state 32


State 125

   59 cond_elif: ELIF expr COLON . ENDLINE stmt_list cond_elif
   60          | ELIF expr COLON . ENDLINE stmt_list cond_else

    ENDLINE  shift, and go to state 131


State 126

   61 cond_else: ELSE COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    NOT      shift, and go to state 17

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 132
    stmt            go to state 20
    decl_var        go to state 21
    decl_data_type  go to state 22
    definition      go to state 23
    type_def        go to state 24
    func_def        go to state 25
    expr            go to state 26
    f_builtin       go to state 27
    f_print         go to state 28
    f_input         go to state 29
    estr_cond       go to state 30
    estr_while      go to state 31
    estr_for        go to state 32


State 127

   63 estr_for: FOR decl_var COMMA var IN var COLON stmt_list . END

    END  shift, and go to state 133


State 128

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 134


State 129

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 27 (func_def)


State 130

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . END

    RETURN  shift, and go to state 135
    END     shift, and go to state 136


State 131

   59 cond_elif: ELIF expr COLON ENDLINE . stmt_list cond_elif
   60          | ELIF expr COLON ENDLINE . stmt_list cond_else

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    NOT      shift, and go to state 17

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 137
    stmt            go to state 20
    decl_var        go to state 21
    decl_data_type  go to state 22
    definition      go to state 23
    type_def        go to state 24
    func_def        go to state 25
    expr            go to state 26
    f_builtin       go to state 27
    f_print         go to state 28
    f_input         go to state 29
    estr_cond       go to state 30
    estr_while      go to state 31
    estr_for        go to state 32


State 132

   61 cond_else: ELSE COLON ENDLINE stmt_list . END

    END  shift, and go to state 138


State 133

   63 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END .

    $default  reduce using rule 63 (estr_for)


State 134

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 139


State 135

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 140


State 136

   30 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 30 (func_def)


State 137

   59 cond_elif: ELIF expr COLON ENDLINE stmt_list . cond_elif
   60          | ELIF expr COLON ENDLINE stmt_list . cond_else

    ELIF  shift, and go to state 110
    ELSE  shift, and go to state 111

    cond_elif  go to state 141
    cond_else  go to state 142


State 138

   61 cond_else: ELSE COLON ENDLINE stmt_list END .

    $default  reduce using rule 61 (cond_else)


State 139

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 143


State 140

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 144


State 141

   59 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 59 (cond_elif)


State 142

   60 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 60 (cond_elif)


State 143

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 28 (func_def)


State 144

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 145


State 145

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 29 (func_def)
