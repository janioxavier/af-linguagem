Terminals unused in grammar

   SEMICOLON
   DOT
   SKIP
   TRUE
   FALSE
   BREAK
   SET
   DIVM
   ADDPERC
   SUBPERC
   ADDEQ
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   MAIN
   CONTSTMT
   DIV


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: assign end_stmt
    5     | definition end_stmt
    6     | decl_var end_stmt
    7     | estr_cond end_stmt
    8     | f_builtin end_stmt
    9     | expr end_stmt
   10     | estr_while end_stmt
   11     | estr_for end_stmt

   12 end_stmt: ENDLINE

   13 assign: lhs ASSIGN rhs

   14 lhs: decl_var
   15    | var

   16 rhs: expr

   17 call_func: ID LPAREN RPAREN
   18          | ID LPAREN data_types RPAREN

   19 decl_var: decl_data_type ID

   20 decl_data_type: DECINT
   21               | DECREAL
   22               | DECSTR
   23               | ID

   24 var: ID

   25 data_type: prim_type
   26          | abs_type

   27 prim_type: INT
   28          | REAL
   29          | STR
   30          | DICT ASSIGN dict
   31          | LIST ASSIGN list
   32          | NIL

   33 abs_type: ID

   34 dict: LBRACK key_value RBRACK

   35 key_value: data_type COLON data_type
   36          | data_type COLON data_type COMMA key_value

   37 list: LBRACE data_types RBRACE

   38 data_types: data_type
   39           | data_type COMMA data_types

   40 definition: type_def
   41           | func_def

   42 decl_field_type: decl_var ENDLINE
   43                | decl_var ENDLINE decl_field_type

   44 type_def: TYPE ID COLON ENDLINE decl_field_type END

   45 param_func: decl_var
   46           | decl_var COMMA param_func

   47 func_def: %empty
   48         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END
   49         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   50         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   51         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

   52 expr: expr PLUS term
   53     | expr MINUS term
   54     | expr LT term
   55     | expr LE term
   56     | expr GE term
   57     | expr GT term
   58     | expr EQ term
   59     | expr AND term
   60     | expr OR term
   61     | expr NEQ term
   62     | term

   63 term: term TIMES fact
   64     | term DIVIDE fact
   65     | fact

   66 fact: LPAREN expr RPAREN
   67     | unaop INT
   68     | unaop REAL
   69     | unaop ID
   70     | INT
   71     | REAL
   72     | ID
   73     | call_func

   74 unaop: NOT
   75      | PERC
   76      | MINUS

   77 f_builtin: f_print
   78          | f_input

   79 f_print: PRINT expr

   80 f_input: INPUT ID

   81 estr_cond: IF expr COLON ENDLINE stmt_list END
   82          | IF expr COLON ENDLINE stmt_list cond_else
   83          | IF expr COLON ENDLINE stmt_list cond_elif

   84 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif
   85          | ELIF expr COLON ENDLINE stmt_list cond_else

   86 cond_else: ELSE COLON ENDLINE stmt_list END

   87 estr_while: WHILE expr COLON stmt_list END

   88 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 27 67 70
REAL (259) 28 68 71
STR (260) 29
ID (261) 17 18 19 23 24 33 44 48 49 50 51 69 72 80
TYPE (262) 44
PRINT (263) 79
INPUT (264) 80
COMMA (265) 36 39 46 88
COLON (266) 35 36 44 48 49 50 51 81 82 83 84 85 86 87 88
SEMICOLON (267)
LPAREN (268) 17 18 48 49 50 51 66
RPAREN (269) 17 18 48 49 50 51 66
LBRACE (270) 37
RBRACE (271) 37
LBRACK (272) 34
RBRACK (273) 34
DOT (274)
ASSIGN (275) 13 30 31
ELIF (276) 84 85
IF (277) 81 82 83
ELSE (278) 86
RETURN (279) 49 50
WHILE (280) 87
FOR (281) 88
SKIP (282)
IN (283) 88
NOT (284) 74
NIL (285) 32
DEF (286) 48 49 50 51
TRUE (287)
FALSE (288)
BREAK (289)
SET (290)
LIST (291) 31
DIVM (292)
ADDPERC (293)
SUBPERC (294)
ADDEQ (295)
SUBEQ (296)
DIVEQ (297)
MULTEQ (298)
DIVMEQ (299)
DICT (300) 30
MAIN (301)
END (302) 44 48 49 50 51 81 86 87 88
ENDLINE (303) 12 42 43 44 48 49 50 51 81 82 83 84 85 86
CONTSTMT (304)
DECINT (305) 20
DECREAL (306) 21
DECSTR (307) 22
PLUS (308) 52
MINUS (309) 53 76
TIMES (310) 63
DIV (311)
NEQ (312) 61
EQ (313) 58
LT (314) 54
LE (315) 55
GT (316) 57
GE (317) 56
AND (318) 59
OR (319) 60
PERC (320) 75
DIVIDE (321) 64


Nonterminals, with rules where they appear

$accept (67)
    on left: 0
prog (68)
    on left: 1, on right: 0
stmt_list (69)
    on left: 2 3, on right: 1 3 48 49 50 51 81 82 83 84 85 86 87 88
stmt (70)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
end_stmt (71)
    on left: 12, on right: 4 5 6 7 8 9 10 11
assign (72)
    on left: 13, on right: 4
lhs (73)
    on left: 14 15, on right: 13
rhs (74)
    on left: 16, on right: 13
call_func (75)
    on left: 17 18, on right: 73
decl_var (76)
    on left: 19, on right: 6 14 42 43 45 46 88
decl_data_type (77)
    on left: 20 21 22 23, on right: 19
var (78)
    on left: 24, on right: 15 88
data_type (79)
    on left: 25 26, on right: 35 36 38 39
prim_type (80)
    on left: 27 28 29 30 31 32, on right: 25
abs_type (81)
    on left: 33, on right: 26
dict (82)
    on left: 34, on right: 30
key_value (83)
    on left: 35 36, on right: 34 36
list (84)
    on left: 37, on right: 31
data_types (85)
    on left: 38 39, on right: 18 37 39
definition (86)
    on left: 40 41, on right: 5
decl_field_type (87)
    on left: 42 43, on right: 43 44
type_def (88)
    on left: 44, on right: 40
param_func (89)
    on left: 45 46, on right: 46 50 51
func_def (90)
    on left: 47 48 49 50 51, on right: 41
expr (91)
    on left: 52 53 54 55 56 57 58 59 60 61 62, on right: 9 16 52 53
    54 55 56 57 58 59 60 61 66 79 81 82 83 84 85 87
term (92)
    on left: 63 64 65, on right: 52 53 54 55 56 57 58 59 60 61 62 63
    64
fact (93)
    on left: 66 67 68 69 70 71 72 73, on right: 63 64 65
unaop (94)
    on left: 74 75 76, on right: 67 68 69
f_builtin (95)
    on left: 77 78, on right: 8
f_print (96)
    on left: 79, on right: 77
f_input (97)
    on left: 80, on right: 78
estr_cond (98)
    on left: 81 82 83, on right: 7
cond_elif (99)
    on left: 84 85, on right: 83 84
cond_else (100)
    on left: 86, on right: 82 85
estr_while (101)
    on left: 87, on right: 10
estr_for (102)
    on left: 88, on right: 11


State 0

    0 $accept: . prog $end

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    PERC     shift, and go to state 17

    $default  reduce using rule 47 (func_def)

    prog            go to state 18
    stmt_list       go to state 19
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    term            go to state 31
    fact            go to state 32
    unaop           go to state 33
    f_builtin       go to state 34
    f_print         go to state 35
    f_input         go to state 36
    estr_cond       go to state 37
    estr_while      go to state 38
    estr_for        go to state 39


State 1

   70 fact: INT .

    $default  reduce using rule 70 (fact)


State 2

   71 fact: REAL .

    $default  reduce using rule 71 (fact)


State 3

   17 call_func: ID . LPAREN RPAREN
   18          | ID . LPAREN data_types RPAREN
   23 decl_data_type: ID .
   24 var: ID .
   72 fact: ID .

    LPAREN  shift, and go to state 40

    ID        reduce using rule 23 (decl_data_type)
    ASSIGN    reduce using rule 24 (var)
    $default  reduce using rule 72 (fact)


State 4

   44 type_def: TYPE . ID COLON ENDLINE decl_field_type END

    ID  shift, and go to state 41


State 5

   79 f_print: PRINT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    expr       go to state 43
    term       go to state 31
    fact       go to state 32
    unaop      go to state 33


State 6

   80 f_input: INPUT . ID

    ID  shift, and go to state 44


State 7

   66 fact: LPAREN . expr RPAREN

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    expr       go to state 45
    term       go to state 31
    fact       go to state 32
    unaop      go to state 33


State 8

   81 estr_cond: IF . expr COLON ENDLINE stmt_list END
   82          | IF . expr COLON ENDLINE stmt_list cond_else
   83          | IF . expr COLON ENDLINE stmt_list cond_elif

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    expr       go to state 46
    term       go to state 31
    fact       go to state 32
    unaop      go to state 33


State 9

   87 estr_while: WHILE . expr COLON stmt_list END

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    expr       go to state 47
    term       go to state 31
    fact       go to state 32
    unaop      go to state 33


State 10

   88 estr_for: FOR . decl_var COMMA var IN var COLON stmt_list END

    ID       shift, and go to state 48
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 49
    decl_data_type  go to state 25


State 11

   74 unaop: NOT .

    $default  reduce using rule 74 (unaop)


State 12

   48 func_def: DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list END
   49         | DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   50         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   51         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    ID  shift, and go to state 50


State 13

   20 decl_data_type: DECINT .

    $default  reduce using rule 20 (decl_data_type)


State 14

   21 decl_data_type: DECREAL .

    $default  reduce using rule 21 (decl_data_type)


State 15

   22 decl_data_type: DECSTR .

    $default  reduce using rule 22 (decl_data_type)


State 16

   76 unaop: MINUS .

    $default  reduce using rule 76 (unaop)


State 17

   75 unaop: PERC .

    $default  reduce using rule 75 (unaop)


State 18

    0 $accept: prog . $end

    $end  shift, and go to state 51


State 19

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 20

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    PERC     shift, and go to state 17

    ENDLINE   reduce using rule 47 (func_def)
    $default  reduce using rule 2 (stmt_list)

    stmt_list       go to state 52
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    term            go to state 31
    fact            go to state 32
    unaop           go to state 33
    f_builtin       go to state 34
    f_print         go to state 35
    f_input         go to state 36
    estr_cond       go to state 37
    estr_while      go to state 38
    estr_for        go to state 39


State 21

    4 stmt: assign . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 54


State 22

   13 assign: lhs . ASSIGN rhs

    ASSIGN  shift, and go to state 55


State 23

   73 fact: call_func .

    $default  reduce using rule 73 (fact)


State 24

    6 stmt: decl_var . end_stmt
   14 lhs: decl_var .

    ENDLINE  shift, and go to state 53

    $default  reduce using rule 14 (lhs)

    end_stmt  go to state 56


State 25

   19 decl_var: decl_data_type . ID

    ID  shift, and go to state 57


State 26

   15 lhs: var .

    $default  reduce using rule 15 (lhs)


State 27

    5 stmt: definition . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 58


State 28

   40 definition: type_def .

    $default  reduce using rule 40 (definition)


State 29

   41 definition: func_def .

    $default  reduce using rule 41 (definition)


State 30

    9 stmt: expr . end_stmt
   52 expr: expr . PLUS term
   53     | expr . MINUS term
   54     | expr . LT term
   55     | expr . LE term
   56     | expr . GE term
   57     | expr . GT term
   58     | expr . EQ term
   59     | expr . AND term
   60     | expr . OR term
   61     | expr . NEQ term

    ENDLINE  shift, and go to state 53
    PLUS     shift, and go to state 59
    MINUS    shift, and go to state 60
    NEQ      shift, and go to state 61
    EQ       shift, and go to state 62
    LT       shift, and go to state 63
    LE       shift, and go to state 64
    GT       shift, and go to state 65
    GE       shift, and go to state 66
    AND      shift, and go to state 67
    OR       shift, and go to state 68

    end_stmt  go to state 69


State 31

   62 expr: term .
   63 term: term . TIMES fact
   64     | term . DIVIDE fact

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 62 (expr)


State 32

   65 term: fact .

    $default  reduce using rule 65 (term)


State 33

   67 fact: unaop . INT
   68     | unaop . REAL
   69     | unaop . ID

    INT   shift, and go to state 72
    REAL  shift, and go to state 73
    ID    shift, and go to state 74


State 34

    8 stmt: f_builtin . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 75


State 35

   77 f_builtin: f_print .

    $default  reduce using rule 77 (f_builtin)


State 36

   78 f_builtin: f_input .

    $default  reduce using rule 78 (f_builtin)


State 37

    7 stmt: estr_cond . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 76


State 38

   10 stmt: estr_while . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 77


State 39

   11 stmt: estr_for . end_stmt

    ENDLINE  shift, and go to state 53

    end_stmt  go to state 78


State 40

   17 call_func: ID LPAREN . RPAREN
   18          | ID LPAREN . data_types RPAREN

    INT     shift, and go to state 79
    REAL    shift, and go to state 80
    STR     shift, and go to state 81
    ID      shift, and go to state 82
    RPAREN  shift, and go to state 83
    NIL     shift, and go to state 84
    LIST    shift, and go to state 85
    DICT    shift, and go to state 86

    data_type   go to state 87
    prim_type   go to state 88
    abs_type    go to state 89
    data_types  go to state 90


State 41

   44 type_def: TYPE ID . COLON ENDLINE decl_field_type END

    COLON  shift, and go to state 91


State 42

   17 call_func: ID . LPAREN RPAREN
   18          | ID . LPAREN data_types RPAREN
   72 fact: ID .

    LPAREN  shift, and go to state 40

    $default  reduce using rule 72 (fact)


State 43

   52 expr: expr . PLUS term
   53     | expr . MINUS term
   54     | expr . LT term
   55     | expr . LE term
   56     | expr . GE term
   57     | expr . GT term
   58     | expr . EQ term
   59     | expr . AND term
   60     | expr . OR term
   61     | expr . NEQ term
   79 f_print: PRINT expr .

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60
    NEQ    shift, and go to state 61
    EQ     shift, and go to state 62
    LT     shift, and go to state 63
    LE     shift, and go to state 64
    GT     shift, and go to state 65
    GE     shift, and go to state 66
    AND    shift, and go to state 67
    OR     shift, and go to state 68

    $default  reduce using rule 79 (f_print)


State 44

   80 f_input: INPUT ID .

    $default  reduce using rule 80 (f_input)


State 45

   52 expr: expr . PLUS term
   53     | expr . MINUS term
   54     | expr . LT term
   55     | expr . LE term
   56     | expr . GE term
   57     | expr . GT term
   58     | expr . EQ term
   59     | expr . AND term
   60     | expr . OR term
   61     | expr . NEQ term
   66 fact: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 92
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    NEQ     shift, and go to state 61
    EQ      shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68


State 46

   52 expr: expr . PLUS term
   53     | expr . MINUS term
   54     | expr . LT term
   55     | expr . LE term
   56     | expr . GE term
   57     | expr . GT term
   58     | expr . EQ term
   59     | expr . AND term
   60     | expr . OR term
   61     | expr . NEQ term
   81 estr_cond: IF expr . COLON ENDLINE stmt_list END
   82          | IF expr . COLON ENDLINE stmt_list cond_else
   83          | IF expr . COLON ENDLINE stmt_list cond_elif

    COLON  shift, and go to state 93
    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60
    NEQ    shift, and go to state 61
    EQ     shift, and go to state 62
    LT     shift, and go to state 63
    LE     shift, and go to state 64
    GT     shift, and go to state 65
    GE     shift, and go to state 66
    AND    shift, and go to state 67
    OR     shift, and go to state 68


State 47

   52 expr: expr . PLUS term
   53     | expr . MINUS term
   54     | expr . LT term
   55     | expr . LE term
   56     | expr . GE term
   57     | expr . GT term
   58     | expr . EQ term
   59     | expr . AND term
   60     | expr . OR term
   61     | expr . NEQ term
   87 estr_while: WHILE expr . COLON stmt_list END

    COLON  shift, and go to state 94
    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60
    NEQ    shift, and go to state 61
    EQ     shift, and go to state 62
    LT     shift, and go to state 63
    LE     shift, and go to state 64
    GT     shift, and go to state 65
    GE     shift, and go to state 66
    AND    shift, and go to state 67
    OR     shift, and go to state 68


State 48

   23 decl_data_type: ID .

    $default  reduce using rule 23 (decl_data_type)


State 49

   88 estr_for: FOR decl_var . COMMA var IN var COLON stmt_list END

    COMMA  shift, and go to state 95


State 50

   48 func_def: DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list END
   49         | DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   50         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   51         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    LPAREN  shift, and go to state 96


State 51

    0 $accept: prog $end .

    $default  accept


State 52

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 53

   12 end_stmt: ENDLINE .

    $default  reduce using rule 12 (end_stmt)


State 54

    4 stmt: assign end_stmt .

    $default  reduce using rule 4 (stmt)


State 55

   13 assign: lhs ASSIGN . rhs

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    rhs        go to state 97
    call_func  go to state 23
    expr       go to state 98
    term       go to state 31
    fact       go to state 32
    unaop      go to state 33


State 56

    6 stmt: decl_var end_stmt .

    $default  reduce using rule 6 (stmt)


State 57

   19 decl_var: decl_data_type ID .

    $default  reduce using rule 19 (decl_var)


State 58

    5 stmt: definition end_stmt .

    $default  reduce using rule 5 (stmt)


State 59

   52 expr: expr PLUS . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    term       go to state 99
    fact       go to state 32
    unaop      go to state 33


State 60

   53 expr: expr MINUS . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    term       go to state 100
    fact       go to state 32
    unaop      go to state 33


State 61

   61 expr: expr NEQ . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    term       go to state 101
    fact       go to state 32
    unaop      go to state 33


State 62

   58 expr: expr EQ . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    term       go to state 102
    fact       go to state 32
    unaop      go to state 33


State 63

   54 expr: expr LT . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    term       go to state 103
    fact       go to state 32
    unaop      go to state 33


State 64

   55 expr: expr LE . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    term       go to state 104
    fact       go to state 32
    unaop      go to state 33


State 65

   57 expr: expr GT . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    term       go to state 105
    fact       go to state 32
    unaop      go to state 33


State 66

   56 expr: expr GE . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    term       go to state 106
    fact       go to state 32
    unaop      go to state 33


State 67

   59 expr: expr AND . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    term       go to state 107
    fact       go to state 32
    unaop      go to state 33


State 68

   60 expr: expr OR . term

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    term       go to state 108
    fact       go to state 32
    unaop      go to state 33


State 69

    9 stmt: expr end_stmt .

    $default  reduce using rule 9 (stmt)


State 70

   63 term: term TIMES . fact

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    fact       go to state 109
    unaop      go to state 33


State 71

   64 term: term DIVIDE . fact

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    fact       go to state 110
    unaop      go to state 33


State 72

   67 fact: unaop INT .

    $default  reduce using rule 67 (fact)


State 73

   68 fact: unaop REAL .

    $default  reduce using rule 68 (fact)


State 74

   69 fact: unaop ID .

    $default  reduce using rule 69 (fact)


State 75

    8 stmt: f_builtin end_stmt .

    $default  reduce using rule 8 (stmt)


State 76

    7 stmt: estr_cond end_stmt .

    $default  reduce using rule 7 (stmt)


State 77

   10 stmt: estr_while end_stmt .

    $default  reduce using rule 10 (stmt)


State 78

   11 stmt: estr_for end_stmt .

    $default  reduce using rule 11 (stmt)


State 79

   27 prim_type: INT .

    $default  reduce using rule 27 (prim_type)


State 80

   28 prim_type: REAL .

    $default  reduce using rule 28 (prim_type)


State 81

   29 prim_type: STR .

    $default  reduce using rule 29 (prim_type)


State 82

   33 abs_type: ID .

    $default  reduce using rule 33 (abs_type)


State 83

   17 call_func: ID LPAREN RPAREN .

    $default  reduce using rule 17 (call_func)


State 84

   32 prim_type: NIL .

    $default  reduce using rule 32 (prim_type)


State 85

   31 prim_type: LIST . ASSIGN list

    ASSIGN  shift, and go to state 111


State 86

   30 prim_type: DICT . ASSIGN dict

    ASSIGN  shift, and go to state 112


State 87

   38 data_types: data_type .
   39           | data_type . COMMA data_types

    COMMA  shift, and go to state 113

    $default  reduce using rule 38 (data_types)


State 88

   25 data_type: prim_type .

    $default  reduce using rule 25 (data_type)


State 89

   26 data_type: abs_type .

    $default  reduce using rule 26 (data_type)


State 90

   18 call_func: ID LPAREN data_types . RPAREN

    RPAREN  shift, and go to state 114


State 91

   44 type_def: TYPE ID COLON . ENDLINE decl_field_type END

    ENDLINE  shift, and go to state 115


State 92

   66 fact: LPAREN expr RPAREN .

    $default  reduce using rule 66 (fact)


State 93

   81 estr_cond: IF expr COLON . ENDLINE stmt_list END
   82          | IF expr COLON . ENDLINE stmt_list cond_else
   83          | IF expr COLON . ENDLINE stmt_list cond_elif

    ENDLINE  shift, and go to state 116


State 94

   87 estr_while: WHILE expr COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    PERC     shift, and go to state 17

    $default  reduce using rule 47 (func_def)

    stmt_list       go to state 117
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    term            go to state 31
    fact            go to state 32
    unaop           go to state 33
    f_builtin       go to state 34
    f_print         go to state 35
    f_input         go to state 36
    estr_cond       go to state 37
    estr_while      go to state 38
    estr_for        go to state 39


State 95

   88 estr_for: FOR decl_var COMMA . var IN var COLON stmt_list END

    ID  shift, and go to state 118

    var  go to state 119


State 96

   48 func_def: DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list END
   49         | DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   50         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   51         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list END

    ID       shift, and go to state 48
    RPAREN   shift, and go to state 120
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 121
    decl_data_type  go to state 25
    param_func      go to state 122


State 97

   13 assign: lhs ASSIGN rhs .

    $default  reduce using rule 13 (assign)


State 98

   16 rhs: expr .
   52 expr: expr . PLUS term
   53     | expr . MINUS term
   54     | expr . LT term
   55     | expr . LE term
   56     | expr . GE term
   57     | expr . GT term
   58     | expr . EQ term
   59     | expr . AND term
   60     | expr . OR term
   61     | expr . NEQ term

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60
    NEQ    shift, and go to state 61
    EQ     shift, and go to state 62
    LT     shift, and go to state 63
    LE     shift, and go to state 64
    GT     shift, and go to state 65
    GE     shift, and go to state 66
    AND    shift, and go to state 67
    OR     shift, and go to state 68

    $default  reduce using rule 16 (rhs)


State 99

   52 expr: expr PLUS term .
   63 term: term . TIMES fact
   64     | term . DIVIDE fact

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 52 (expr)


State 100

   53 expr: expr MINUS term .
   63 term: term . TIMES fact
   64     | term . DIVIDE fact

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 53 (expr)


State 101

   61 expr: expr NEQ term .
   63 term: term . TIMES fact
   64     | term . DIVIDE fact

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 61 (expr)


State 102

   58 expr: expr EQ term .
   63 term: term . TIMES fact
   64     | term . DIVIDE fact

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 58 (expr)


State 103

   54 expr: expr LT term .
   63 term: term . TIMES fact
   64     | term . DIVIDE fact

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 54 (expr)


State 104

   55 expr: expr LE term .
   63 term: term . TIMES fact
   64     | term . DIVIDE fact

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 55 (expr)


State 105

   57 expr: expr GT term .
   63 term: term . TIMES fact
   64     | term . DIVIDE fact

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 57 (expr)


State 106

   56 expr: expr GE term .
   63 term: term . TIMES fact
   64     | term . DIVIDE fact

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 56 (expr)


State 107

   59 expr: expr AND term .
   63 term: term . TIMES fact
   64     | term . DIVIDE fact

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 59 (expr)


State 108

   60 expr: expr OR term .
   63 term: term . TIMES fact
   64     | term . DIVIDE fact

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 60 (expr)


State 109

   63 term: term TIMES fact .

    $default  reduce using rule 63 (term)


State 110

   64 term: term DIVIDE fact .

    $default  reduce using rule 64 (term)


State 111

   31 prim_type: LIST ASSIGN . list

    LBRACE  shift, and go to state 123

    list  go to state 124


State 112

   30 prim_type: DICT ASSIGN . dict

    LBRACK  shift, and go to state 125

    dict  go to state 126


State 113

   39 data_types: data_type COMMA . data_types

    INT   shift, and go to state 79
    REAL  shift, and go to state 80
    STR   shift, and go to state 81
    ID    shift, and go to state 82
    NIL   shift, and go to state 84
    LIST  shift, and go to state 85
    DICT  shift, and go to state 86

    data_type   go to state 87
    prim_type   go to state 88
    abs_type    go to state 89
    data_types  go to state 127


State 114

   18 call_func: ID LPAREN data_types RPAREN .

    $default  reduce using rule 18 (call_func)


State 115

   44 type_def: TYPE ID COLON ENDLINE . decl_field_type END

    ID       shift, and go to state 48
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var         go to state 128
    decl_data_type   go to state 25
    decl_field_type  go to state 129


State 116

   81 estr_cond: IF expr COLON ENDLINE . stmt_list END
   82          | IF expr COLON ENDLINE . stmt_list cond_else
   83          | IF expr COLON ENDLINE . stmt_list cond_elif

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    PERC     shift, and go to state 17

    $default  reduce using rule 47 (func_def)

    stmt_list       go to state 130
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    term            go to state 31
    fact            go to state 32
    unaop           go to state 33
    f_builtin       go to state 34
    f_print         go to state 35
    f_input         go to state 36
    estr_cond       go to state 37
    estr_while      go to state 38
    estr_for        go to state 39


State 117

   87 estr_while: WHILE expr COLON stmt_list . END

    END  shift, and go to state 131


State 118

   24 var: ID .

    $default  reduce using rule 24 (var)


State 119

   88 estr_for: FOR decl_var COMMA var . IN var COLON stmt_list END

    IN  shift, and go to state 132


State 120

   48 func_def: DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list END
   49         | DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END

    COLON  shift, and go to state 133


State 121

   45 param_func: decl_var .
   46           | decl_var . COMMA param_func

    COMMA  shift, and go to state 134

    $default  reduce using rule 45 (param_func)


State 122

   50 func_def: DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   51         | DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list END

    RPAREN  shift, and go to state 135


State 123

   37 list: LBRACE . data_types RBRACE

    INT   shift, and go to state 79
    REAL  shift, and go to state 80
    STR   shift, and go to state 81
    ID    shift, and go to state 82
    NIL   shift, and go to state 84
    LIST  shift, and go to state 85
    DICT  shift, and go to state 86

    data_type   go to state 87
    prim_type   go to state 88
    abs_type    go to state 89
    data_types  go to state 136


State 124

   31 prim_type: LIST ASSIGN list .

    $default  reduce using rule 31 (prim_type)


State 125

   34 dict: LBRACK . key_value RBRACK

    INT   shift, and go to state 79
    REAL  shift, and go to state 80
    STR   shift, and go to state 81
    ID    shift, and go to state 82
    NIL   shift, and go to state 84
    LIST  shift, and go to state 85
    DICT  shift, and go to state 86

    data_type  go to state 137
    prim_type  go to state 88
    abs_type   go to state 89
    key_value  go to state 138


State 126

   30 prim_type: DICT ASSIGN dict .

    $default  reduce using rule 30 (prim_type)


State 127

   39 data_types: data_type COMMA data_types .

    $default  reduce using rule 39 (data_types)


State 128

   42 decl_field_type: decl_var . ENDLINE
   43                | decl_var . ENDLINE decl_field_type

    ENDLINE  shift, and go to state 139


State 129

   44 type_def: TYPE ID COLON ENDLINE decl_field_type . END

    END  shift, and go to state 140


State 130

   81 estr_cond: IF expr COLON ENDLINE stmt_list . END
   82          | IF expr COLON ENDLINE stmt_list . cond_else
   83          | IF expr COLON ENDLINE stmt_list . cond_elif

    ELIF  shift, and go to state 141
    ELSE  shift, and go to state 142
    END   shift, and go to state 143

    cond_elif  go to state 144
    cond_else  go to state 145


State 131

   87 estr_while: WHILE expr COLON stmt_list END .

    $default  reduce using rule 87 (estr_while)


State 132

   88 estr_for: FOR decl_var COMMA var IN . var COLON stmt_list END

    ID  shift, and go to state 118

    var  go to state 146


State 133

   48 func_def: DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list END
   49         | DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END

    ENDLINE  shift, and go to state 147


State 134

   46 param_func: decl_var COMMA . param_func

    ID       shift, and go to state 48
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 121
    decl_data_type  go to state 25
    param_func      go to state 148


State 135

   50 func_def: DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END
   51         | DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 149


State 136

   37 list: LBRACE data_types . RBRACE

    RBRACE  shift, and go to state 150


State 137

   35 key_value: data_type . COLON data_type
   36          | data_type . COLON data_type COMMA key_value

    COLON  shift, and go to state 151


State 138

   34 dict: LBRACK key_value . RBRACK

    RBRACK  shift, and go to state 152


State 139

   42 decl_field_type: decl_var ENDLINE .
   43                | decl_var ENDLINE . decl_field_type

    ID       shift, and go to state 48
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 42 (decl_field_type)

    decl_var         go to state 128
    decl_data_type   go to state 25
    decl_field_type  go to state 153


State 140

   44 type_def: TYPE ID COLON ENDLINE decl_field_type END .

    $default  reduce using rule 44 (type_def)


State 141

   84 cond_elif: ELIF . expr COLON ENDLINE stmt_list cond_elif
   85          | ELIF . expr COLON ENDLINE stmt_list cond_else

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    ID      shift, and go to state 42
    LPAREN  shift, and go to state 7
    NOT     shift, and go to state 11
    MINUS   shift, and go to state 16
    PERC    shift, and go to state 17

    call_func  go to state 23
    expr       go to state 154
    term       go to state 31
    fact       go to state 32
    unaop      go to state 33


State 142

   86 cond_else: ELSE . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 155


State 143

   81 estr_cond: IF expr COLON ENDLINE stmt_list END .

    $default  reduce using rule 81 (estr_cond)


State 144

   83 estr_cond: IF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 83 (estr_cond)


State 145

   82 estr_cond: IF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 82 (estr_cond)


State 146

   88 estr_for: FOR decl_var COMMA var IN var . COLON stmt_list END

    COLON  shift, and go to state 156


State 147

   48 func_def: DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list END
   49         | DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    PERC     shift, and go to state 17

    $default  reduce using rule 47 (func_def)

    stmt_list       go to state 157
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    term            go to state 31
    fact            go to state 32
    unaop           go to state 33
    f_builtin       go to state 34
    f_print         go to state 35
    f_input         go to state 36
    estr_cond       go to state 37
    estr_while      go to state 38
    estr_for        go to state 39


State 148

   46 param_func: decl_var COMMA param_func .

    $default  reduce using rule 46 (param_func)


State 149

   50 func_def: DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END
   51         | DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 158


State 150

   37 list: LBRACE data_types RBRACE .

    $default  reduce using rule 37 (list)


State 151

   35 key_value: data_type COLON . data_type
   36          | data_type COLON . data_type COMMA key_value

    INT   shift, and go to state 79
    REAL  shift, and go to state 80
    STR   shift, and go to state 81
    ID    shift, and go to state 82
    NIL   shift, and go to state 84
    LIST  shift, and go to state 85
    DICT  shift, and go to state 86

    data_type  go to state 159
    prim_type  go to state 88
    abs_type   go to state 89


State 152

   34 dict: LBRACK key_value RBRACK .

    $default  reduce using rule 34 (dict)


State 153

   43 decl_field_type: decl_var ENDLINE decl_field_type .

    $default  reduce using rule 43 (decl_field_type)


State 154

   52 expr: expr . PLUS term
   53     | expr . MINUS term
   54     | expr . LT term
   55     | expr . LE term
   56     | expr . GE term
   57     | expr . GT term
   58     | expr . EQ term
   59     | expr . AND term
   60     | expr . OR term
   61     | expr . NEQ term
   84 cond_elif: ELIF expr . COLON ENDLINE stmt_list cond_elif
   85          | ELIF expr . COLON ENDLINE stmt_list cond_else

    COLON  shift, and go to state 160
    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60
    NEQ    shift, and go to state 61
    EQ     shift, and go to state 62
    LT     shift, and go to state 63
    LE     shift, and go to state 64
    GT     shift, and go to state 65
    GE     shift, and go to state 66
    AND    shift, and go to state 67
    OR     shift, and go to state 68


State 155

   86 cond_else: ELSE COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 161


State 156

   88 estr_for: FOR decl_var COMMA var IN var COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    PERC     shift, and go to state 17

    $default  reduce using rule 47 (func_def)

    stmt_list       go to state 162
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    term            go to state 31
    fact            go to state 32
    unaop           go to state 33
    f_builtin       go to state 34
    f_print         go to state 35
    f_input         go to state 36
    estr_cond       go to state 37
    estr_while      go to state 38
    estr_for        go to state 39


State 157

   48 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . END
   49         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END

    RETURN  shift, and go to state 163
    END     shift, and go to state 164


State 158

   50 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END
   51         | DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    PERC     shift, and go to state 17

    $default  reduce using rule 47 (func_def)

    stmt_list       go to state 165
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    term            go to state 31
    fact            go to state 32
    unaop           go to state 33
    f_builtin       go to state 34
    f_print         go to state 35
    f_input         go to state 36
    estr_cond       go to state 37
    estr_while      go to state 38
    estr_for        go to state 39


State 159

   35 key_value: data_type COLON data_type .
   36          | data_type COLON data_type . COMMA key_value

    COMMA  shift, and go to state 166

    $default  reduce using rule 35 (key_value)


State 160

   84 cond_elif: ELIF expr COLON . ENDLINE stmt_list cond_elif
   85          | ELIF expr COLON . ENDLINE stmt_list cond_else

    ENDLINE  shift, and go to state 167


State 161

   86 cond_else: ELSE COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    PERC     shift, and go to state 17

    $default  reduce using rule 47 (func_def)

    stmt_list       go to state 168
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    term            go to state 31
    fact            go to state 32
    unaop           go to state 33
    f_builtin       go to state 34
    f_print         go to state 35
    f_input         go to state 36
    estr_cond       go to state 37
    estr_while      go to state 38
    estr_for        go to state 39


State 162

   88 estr_for: FOR decl_var COMMA var IN var COLON stmt_list . END

    END  shift, and go to state 169


State 163

   49 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 170


State 164

   48 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 48 (func_def)


State 165

   50 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END
   51         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . END

    RETURN  shift, and go to state 171
    END     shift, and go to state 172


State 166

   36 key_value: data_type COLON data_type COMMA . key_value

    INT   shift, and go to state 79
    REAL  shift, and go to state 80
    STR   shift, and go to state 81
    ID    shift, and go to state 82
    NIL   shift, and go to state 84
    LIST  shift, and go to state 85
    DICT  shift, and go to state 86

    data_type  go to state 137
    prim_type  go to state 88
    abs_type   go to state 89
    key_value  go to state 173


State 167

   84 cond_elif: ELIF expr COLON ENDLINE . stmt_list cond_elif
   85          | ELIF expr COLON ENDLINE . stmt_list cond_else

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    ID       shift, and go to state 3
    TYPE     shift, and go to state 4
    PRINT    shift, and go to state 5
    INPUT    shift, and go to state 6
    LPAREN   shift, and go to state 7
    IF       shift, and go to state 8
    WHILE    shift, and go to state 9
    FOR      shift, and go to state 10
    NOT      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15
    MINUS    shift, and go to state 16
    PERC     shift, and go to state 17

    $default  reduce using rule 47 (func_def)

    stmt_list       go to state 174
    stmt            go to state 20
    assign          go to state 21
    lhs             go to state 22
    call_func       go to state 23
    decl_var        go to state 24
    decl_data_type  go to state 25
    var             go to state 26
    definition      go to state 27
    type_def        go to state 28
    func_def        go to state 29
    expr            go to state 30
    term            go to state 31
    fact            go to state 32
    unaop           go to state 33
    f_builtin       go to state 34
    f_print         go to state 35
    f_input         go to state 36
    estr_cond       go to state 37
    estr_while      go to state 38
    estr_for        go to state 39


State 168

   86 cond_else: ELSE COLON ENDLINE stmt_list . END

    END  shift, and go to state 175


State 169

   88 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END .

    $default  reduce using rule 88 (estr_for)


State 170

   49 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 176


State 171

   50 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 177


State 172

   51 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 51 (func_def)


State 173

   36 key_value: data_type COLON data_type COMMA key_value .

    $default  reduce using rule 36 (key_value)


State 174

   84 cond_elif: ELIF expr COLON ENDLINE stmt_list . cond_elif
   85          | ELIF expr COLON ENDLINE stmt_list . cond_else

    ELIF  shift, and go to state 141
    ELSE  shift, and go to state 142

    cond_elif  go to state 178
    cond_else  go to state 179


State 175

   86 cond_else: ELSE COLON ENDLINE stmt_list END .

    $default  reduce using rule 86 (cond_else)


State 176

   49 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 180


State 177

   50 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 181


State 178

   84 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 84 (cond_elif)


State 179

   85 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 85 (cond_elif)


State 180

   49 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 49 (func_def)


State 181

   50 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 182


State 182

   50 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 50 (func_def)
