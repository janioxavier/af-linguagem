Nonterminals useless in grammar

   call_func
   data_type
   prim_type
   abs_type
   data_types


Terminals unused in grammar

   SEMICOLON
   LBRACE
   RBRACE
   LBRACK
   RBRACK
   DOT
   SKIP
   NOT
   NIL
   TRUE
   FALSE
   BREAK
   SET
   LIST
   ADDPERC
   SUBPERC
   ADDEQ
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   DICT
   MAIN
   CONTSTMT
   DIV
   PERC
   '-'


Rules useless in grammar

   62 call_func: ID LPAREN RPAREN
   63          | ID LPAREN data_types RPAREN

   64 data_type: prim_type
   65          | abs_type

   66 prim_type: INT
   67          | REAL
   68          | STR
   69          | NIL

   70 abs_type: ID

   71 data_types: data_type
   72           | data_type COMMA data_types


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: definition end_stmt
    5     | decl_var end_stmt
    6     | estr_cond end_stmt
    7     | f_builtin end_stmt
    8     | expr end_stmt
    9     | estr_while end_stmt
   10     | estr_for end_stmt

   11 end_stmt: ENDLINE

   12 decl_var: decl_data_type ID
   13         | decl_data_type ID ASSIGN expr

   14 decl_data_type: DECINT
   15               | DECREAL
   16               | DECSTR
   17               | ID

   18 var: ID

   19 definition: type_def
   20           | func_def

   21 decl_field_type: decl_var ENDLINE
   22                | decl_var ENDLINE decl_field_type

   23 type_def: TYPE ID COLON ENDLINE decl_field_type END

   24 param_func: decl_var
   25           | decl_var COMMA param_func

   26 func_def: %empty
   27         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

   31 expr: LPAREN expr RPAREN
   32     | expr PLUS expr
   33     | expr MINUS expr
   34     | expr TIMES expr
   35     | expr DIVIDE expr
   36     | expr ASSIGN expr
   37     | expr LT expr
   38     | expr LE expr
   39     | expr GE expr
   40     | expr GT expr
   41     | expr EQ expr
   42     | expr AND expr
   43     | expr OR expr
   44     | expr DIVM expr
   45     | expr NEQ expr
   46     | ID
   47     | REAL
   48     | INT
   49     | STR

   50 f_builtin: f_print
   51          | f_input

   52 f_print: PRINT expr

   53 f_input: INPUT ID

   54 estr_cond: IF expr COLON ENDLINE stmt_list END
   55          | IF expr COLON ENDLINE stmt_list cond_else
   56          | IF expr COLON ENDLINE stmt_list cond_elif

   57 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif
   58          | ELIF expr COLON ENDLINE stmt_list cond_else

   59 cond_else: ELSE COLON ENDLINE stmt_list END

   60 estr_while: WHILE expr COLON stmt_list END

   61 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END


Terminals, with rules where they appear

$end (0) 0
'-' (45)
error (256)
INT (258) 48
REAL (259) 47
STR (260) 49
ID (261) 12 13 17 18 23 27 28 29 30 46 53
TYPE (262) 23
PRINT (263) 52
INPUT (264) 53
COMMA (265) 25 61
COLON (266) 23 27 28 29 30 54 55 56 57 58 59 60 61
SEMICOLON (267)
LPAREN (268) 27 28 29 30 31
RPAREN (269) 27 28 29 30 31
LBRACE (270)
RBRACE (271)
LBRACK (272)
RBRACK (273)
DOT (274)
ASSIGN (275) 13 36
ELIF (276) 57 58
IF (277) 54 55 56
ELSE (278) 59
RETURN (279) 28 29
WHILE (280) 60
FOR (281) 61
SKIP (282)
IN (283) 61
NOT (284)
NIL (285)
DEF (286) 27 28 29 30
TRUE (287)
FALSE (288)
BREAK (289)
SET (290)
LIST (291)
ADDPERC (292)
SUBPERC (293)
ADDEQ (294)
SUBEQ (295)
DIVEQ (296)
MULTEQ (297)
DIVMEQ (298)
DICT (299)
MAIN (300)
END (301) 23 27 28 29 30 54 59 60 61
ENDLINE (302) 11 21 22 23 27 28 29 30 54 55 56 57 58 59
CONTSTMT (303)
DIV (304)
DECINT (305) 14
DECREAL (306) 15
DECSTR (307) 16
PLUS (308) 32
MINUS (309) 33
AND (310) 42
OR (311) 43
NEQ (312) 45
EQ (313) 41
LT (314) 37
LE (315) 38
GT (316) 40
GE (317) 39
PERC (318)
DIVM (319) 44
TIMES (320) 34
DIVIDE (321) 35


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
prog (69)
    on left: 1, on right: 0
stmt_list (70)
    on left: 2 3, on right: 1 3 27 28 29 30 54 55 56 57 58 59 60 61
stmt (71)
    on left: 4 5 6 7 8 9 10, on right: 2 3
end_stmt (72)
    on left: 11, on right: 4 5 6 7 8 9 10
decl_var (73)
    on left: 12 13, on right: 5 21 22 24 25 61
decl_data_type (74)
    on left: 14 15 16 17, on right: 12 13
var (75)
    on left: 18, on right: 61
definition (76)
    on left: 19 20, on right: 4
decl_field_type (77)
    on left: 21 22, on right: 22 23
type_def (78)
    on left: 23, on right: 19
param_func (79)
    on left: 24 25, on right: 25 29 30
func_def (80)
    on left: 26 27 28 29 30, on right: 20
expr (81)
    on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    49, on right: 8 13 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
    52 54 55 56 57 58 60
f_builtin (82)
    on left: 50 51, on right: 7
f_print (83)
    on left: 52, on right: 50
f_input (84)
    on left: 53, on right: 51
estr_cond (85)
    on left: 54 55 56, on right: 6
cond_elif (86)
    on left: 57 58, on right: 56 57
cond_else (87)
    on left: 59, on right: 55 58
estr_while (88)
    on left: 60, on right: 9
estr_for (89)
    on left: 61, on right: 10


State 0

    0 $accept: . prog $end

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    prog            go to state 16
    stmt_list       go to state 17
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 1

   48 expr: INT .

    $default  reduce using rule 48 (expr)


State 2

   47 expr: REAL .

    $default  reduce using rule 47 (expr)


State 3

   49 expr: STR .

    $default  reduce using rule 49 (expr)


State 4

   17 decl_data_type: ID .
   46 expr: ID .

    ID        reduce using rule 17 (decl_data_type)
    $default  reduce using rule 46 (expr)


State 5

   23 type_def: TYPE . ID COLON ENDLINE decl_field_type END

    ID  shift, and go to state 31


State 6

   52 f_print: PRINT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 33


State 7

   53 f_input: INPUT . ID

    ID  shift, and go to state 34


State 8

   31 expr: LPAREN . expr RPAREN

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 35


State 9

   54 estr_cond: IF . expr COLON ENDLINE stmt_list END
   55          | IF . expr COLON ENDLINE stmt_list cond_else
   56          | IF . expr COLON ENDLINE stmt_list cond_elif

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 36


State 10

   60 estr_while: WHILE . expr COLON stmt_list END

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 37


State 11

   61 estr_for: FOR . decl_var COMMA var IN var COLON stmt_list END

    ID       shift, and go to state 38
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 39
    decl_data_type  go to state 20


State 12

   27 func_def: DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    ID  shift, and go to state 40


State 13

   14 decl_data_type: DECINT .

    $default  reduce using rule 14 (decl_data_type)


State 14

   15 decl_data_type: DECREAL .

    $default  reduce using rule 15 (decl_data_type)


State 15

   16 decl_data_type: DECSTR .

    $default  reduce using rule 16 (decl_data_type)


State 16

    0 $accept: prog . $end

    $end  shift, and go to state 41


State 17

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 18

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    ENDLINE   reduce using rule 26 (func_def)
    $default  reduce using rule 2 (stmt_list)

    stmt_list       go to state 42
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 19

    5 stmt: decl_var . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 44


State 20

   12 decl_var: decl_data_type . ID
   13         | decl_data_type . ID ASSIGN expr

    ID  shift, and go to state 45


State 21

    4 stmt: definition . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 46


State 22

   19 definition: type_def .

    $default  reduce using rule 19 (definition)


State 23

   20 definition: func_def .

    $default  reduce using rule 20 (definition)


State 24

    8 stmt: expr . end_stmt
   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN   shift, and go to state 47
    ENDLINE  shift, and go to state 43
    PLUS     shift, and go to state 48
    MINUS    shift, and go to state 49
    AND      shift, and go to state 50
    OR       shift, and go to state 51
    NEQ      shift, and go to state 52
    EQ       shift, and go to state 53
    LT       shift, and go to state 54
    LE       shift, and go to state 55
    GT       shift, and go to state 56
    GE       shift, and go to state 57
    DIVM     shift, and go to state 58
    TIMES    shift, and go to state 59
    DIVIDE   shift, and go to state 60

    end_stmt  go to state 61


State 25

    7 stmt: f_builtin . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 62


State 26

   50 f_builtin: f_print .

    $default  reduce using rule 50 (f_builtin)


State 27

   51 f_builtin: f_input .

    $default  reduce using rule 51 (f_builtin)


State 28

    6 stmt: estr_cond . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 63


State 29

    9 stmt: estr_while . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 64


State 30

   10 stmt: estr_for . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 65


State 31

   23 type_def: TYPE ID . COLON ENDLINE decl_field_type END

    COLON  shift, and go to state 66


State 32

   46 expr: ID .

    $default  reduce using rule 46 (expr)


State 33

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   52 f_print: PRINT expr .

    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    NEQ     shift, and go to state 52
    EQ      shift, and go to state 53
    LT      shift, and go to state 54
    LE      shift, and go to state 55
    GT      shift, and go to state 56
    GE      shift, and go to state 57
    DIVM    shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 52 (f_print)


State 34

   53 f_input: INPUT ID .

    $default  reduce using rule 53 (f_input)


State 35

   31 expr: LPAREN expr . RPAREN
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    RPAREN  shift, and go to state 67
    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    NEQ     shift, and go to state 52
    EQ      shift, and go to state 53
    LT      shift, and go to state 54
    LE      shift, and go to state 55
    GT      shift, and go to state 56
    GE      shift, and go to state 57
    DIVM    shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60


State 36

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   54 estr_cond: IF expr . COLON ENDLINE stmt_list END
   55          | IF expr . COLON ENDLINE stmt_list cond_else
   56          | IF expr . COLON ENDLINE stmt_list cond_elif

    COLON   shift, and go to state 68
    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    NEQ     shift, and go to state 52
    EQ      shift, and go to state 53
    LT      shift, and go to state 54
    LE      shift, and go to state 55
    GT      shift, and go to state 56
    GE      shift, and go to state 57
    DIVM    shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60


State 37

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   60 estr_while: WHILE expr . COLON stmt_list END

    COLON   shift, and go to state 69
    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    NEQ     shift, and go to state 52
    EQ      shift, and go to state 53
    LT      shift, and go to state 54
    LE      shift, and go to state 55
    GT      shift, and go to state 56
    GE      shift, and go to state 57
    DIVM    shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60


State 38

   17 decl_data_type: ID .

    $default  reduce using rule 17 (decl_data_type)


State 39

   61 estr_for: FOR decl_var . COMMA var IN var COLON stmt_list END

    COMMA  shift, and go to state 70


State 40

   27 func_def: DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    LPAREN  shift, and go to state 71


State 41

    0 $accept: prog $end .

    $default  accept


State 42

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 43

   11 end_stmt: ENDLINE .

    $default  reduce using rule 11 (end_stmt)


State 44

    5 stmt: decl_var end_stmt .

    $default  reduce using rule 5 (stmt)


State 45

   12 decl_var: decl_data_type ID .
   13         | decl_data_type ID . ASSIGN expr

    ASSIGN  shift, and go to state 72

    $default  reduce using rule 12 (decl_var)


State 46

    4 stmt: definition end_stmt .

    $default  reduce using rule 4 (stmt)


State 47

   36 expr: expr ASSIGN . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 73


State 48

   32 expr: expr PLUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 74


State 49

   33 expr: expr MINUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 75


State 50

   42 expr: expr AND . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 76


State 51

   43 expr: expr OR . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 77


State 52

   45 expr: expr NEQ . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 78


State 53

   41 expr: expr EQ . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 79


State 54

   37 expr: expr LT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 80


State 55

   38 expr: expr LE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 81


State 56

   40 expr: expr GT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 82


State 57

   39 expr: expr GE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 83


State 58

   44 expr: expr DIVM . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 84


State 59

   34 expr: expr TIMES . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 85


State 60

   35 expr: expr DIVIDE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 86


State 61

    8 stmt: expr end_stmt .

    $default  reduce using rule 8 (stmt)


State 62

    7 stmt: f_builtin end_stmt .

    $default  reduce using rule 7 (stmt)


State 63

    6 stmt: estr_cond end_stmt .

    $default  reduce using rule 6 (stmt)


State 64

    9 stmt: estr_while end_stmt .

    $default  reduce using rule 9 (stmt)


State 65

   10 stmt: estr_for end_stmt .

    $default  reduce using rule 10 (stmt)


State 66

   23 type_def: TYPE ID COLON . ENDLINE decl_field_type END

    ENDLINE  shift, and go to state 87


State 67

   31 expr: LPAREN expr RPAREN .

    $default  reduce using rule 31 (expr)


State 68

   54 estr_cond: IF expr COLON . ENDLINE stmt_list END
   55          | IF expr COLON . ENDLINE stmt_list cond_else
   56          | IF expr COLON . ENDLINE stmt_list cond_elif

    ENDLINE  shift, and go to state 88


State 69

   60 estr_while: WHILE expr COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 89
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 70

   61 estr_for: FOR decl_var COMMA . var IN var COLON stmt_list END

    ID  shift, and go to state 90

    var  go to state 91


State 71

   27 func_def: DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list END

    ID       shift, and go to state 38
    RPAREN   shift, and go to state 92
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 93
    decl_data_type  go to state 20
    param_func      go to state 94


State 72

   13 decl_var: decl_data_type ID ASSIGN . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 95


State 73

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   36     | expr ASSIGN expr .
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47

    $default  reduce using rule 36 (expr)


State 74

   32 expr: expr . PLUS expr
   32     | expr PLUS expr .
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 32 (expr)


State 75

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   33     | expr MINUS expr .
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 33 (expr)


State 76

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   42     | expr AND expr .
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 42 (expr)


State 77

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   43     | expr OR expr .
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 43 (expr)


State 78

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   45     | expr NEQ expr .

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 45 (expr)


State 79

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   41     | expr EQ expr .
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 41 (expr)


State 80

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   37     | expr LT expr .
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 37 (expr)


State 81

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   38     | expr LE expr .
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 38 (expr)


State 82

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   40     | expr GT expr .
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 40 (expr)


State 83

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   39     | expr GE expr .
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 39 (expr)


State 84

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   44     | expr DIVM expr .
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 44 (expr)


State 85

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   34     | expr TIMES expr .
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47

    $default  reduce using rule 34 (expr)


State 86

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   35     | expr DIVIDE expr .
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47

    $default  reduce using rule 35 (expr)


State 87

   23 type_def: TYPE ID COLON ENDLINE . decl_field_type END

    ID       shift, and go to state 38
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var         go to state 96
    decl_data_type   go to state 20
    decl_field_type  go to state 97


State 88

   54 estr_cond: IF expr COLON ENDLINE . stmt_list END
   55          | IF expr COLON ENDLINE . stmt_list cond_else
   56          | IF expr COLON ENDLINE . stmt_list cond_elif

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 98
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 89

   60 estr_while: WHILE expr COLON stmt_list . END

    END  shift, and go to state 99


State 90

   18 var: ID .

    $default  reduce using rule 18 (var)


State 91

   61 estr_for: FOR decl_var COMMA var . IN var COLON stmt_list END

    IN  shift, and go to state 100


State 92

   27 func_def: DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END

    COLON  shift, and go to state 101


State 93

   24 param_func: decl_var .
   25           | decl_var . COMMA param_func

    COMMA  shift, and go to state 102

    $default  reduce using rule 24 (param_func)


State 94

   29 func_def: DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list END

    RPAREN  shift, and go to state 103


State 95

   13 decl_var: decl_data_type ID ASSIGN expr .
   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr

    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    NEQ     shift, and go to state 52
    EQ      shift, and go to state 53
    LT      shift, and go to state 54
    LE      shift, and go to state 55
    GT      shift, and go to state 56
    GE      shift, and go to state 57
    DIVM    shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 13 (decl_var)


State 96

   21 decl_field_type: decl_var . ENDLINE
   22                | decl_var . ENDLINE decl_field_type

    ENDLINE  shift, and go to state 104


State 97

   23 type_def: TYPE ID COLON ENDLINE decl_field_type . END

    END  shift, and go to state 105


State 98

   54 estr_cond: IF expr COLON ENDLINE stmt_list . END
   55          | IF expr COLON ENDLINE stmt_list . cond_else
   56          | IF expr COLON ENDLINE stmt_list . cond_elif

    ELIF  shift, and go to state 106
    ELSE  shift, and go to state 107
    END   shift, and go to state 108

    cond_elif  go to state 109
    cond_else  go to state 110


State 99

   60 estr_while: WHILE expr COLON stmt_list END .

    $default  reduce using rule 60 (estr_while)


State 100

   61 estr_for: FOR decl_var COMMA var IN . var COLON stmt_list END

    ID  shift, and go to state 90

    var  go to state 111


State 101

   27 func_def: DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END

    ENDLINE  shift, and go to state 112


State 102

   25 param_func: decl_var COMMA . param_func

    ID       shift, and go to state 38
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 93
    decl_data_type  go to state 20
    param_func      go to state 113


State 103

   29 func_def: DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 114


State 104

   21 decl_field_type: decl_var ENDLINE .
   22                | decl_var ENDLINE . decl_field_type

    ID       shift, and go to state 38
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 21 (decl_field_type)

    decl_var         go to state 96
    decl_data_type   go to state 20
    decl_field_type  go to state 115


State 105

   23 type_def: TYPE ID COLON ENDLINE decl_field_type END .

    $default  reduce using rule 23 (type_def)


State 106

   57 cond_elif: ELIF . expr COLON ENDLINE stmt_list cond_elif
   58          | ELIF . expr COLON ENDLINE stmt_list cond_else

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 116


State 107

   59 cond_else: ELSE . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 117


State 108

   54 estr_cond: IF expr COLON ENDLINE stmt_list END .

    $default  reduce using rule 54 (estr_cond)


State 109

   56 estr_cond: IF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 56 (estr_cond)


State 110

   55 estr_cond: IF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 55 (estr_cond)


State 111

   61 estr_for: FOR decl_var COMMA var IN var . COLON stmt_list END

    COLON  shift, and go to state 118


State 112

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 119
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 113

   25 param_func: decl_var COMMA param_func .

    $default  reduce using rule 25 (param_func)


State 114

   29 func_def: DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 120


State 115

   22 decl_field_type: decl_var ENDLINE decl_field_type .

    $default  reduce using rule 22 (decl_field_type)


State 116

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   37     | expr . LT expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | expr . GT expr
   41     | expr . EQ expr
   42     | expr . AND expr
   43     | expr . OR expr
   44     | expr . DIVM expr
   45     | expr . NEQ expr
   57 cond_elif: ELIF expr . COLON ENDLINE stmt_list cond_elif
   58          | ELIF expr . COLON ENDLINE stmt_list cond_else

    COLON   shift, and go to state 121
    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    NEQ     shift, and go to state 52
    EQ      shift, and go to state 53
    LT      shift, and go to state 54
    LE      shift, and go to state 55
    GT      shift, and go to state 56
    GE      shift, and go to state 57
    DIVM    shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60


State 117

   59 cond_else: ELSE COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 122


State 118

   61 estr_for: FOR decl_var COMMA var IN var COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 123
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 119

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END

    RETURN  shift, and go to state 124
    END     shift, and go to state 125


State 120

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 126
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 121

   57 cond_elif: ELIF expr COLON . ENDLINE stmt_list cond_elif
   58          | ELIF expr COLON . ENDLINE stmt_list cond_else

    ENDLINE  shift, and go to state 127


State 122

   59 cond_else: ELSE COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 128
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 123

   61 estr_for: FOR decl_var COMMA var IN var COLON stmt_list . END

    END  shift, and go to state 129


State 124

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 130


State 125

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 27 (func_def)


State 126

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . END

    RETURN  shift, and go to state 131
    END     shift, and go to state 132


State 127

   57 cond_elif: ELIF expr COLON ENDLINE . stmt_list cond_elif
   58          | ELIF expr COLON ENDLINE . stmt_list cond_else

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 133
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 128

   59 cond_else: ELSE COLON ENDLINE stmt_list . END

    END  shift, and go to state 134


State 129

   61 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END .

    $default  reduce using rule 61 (estr_for)


State 130

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 135


State 131

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 136


State 132

   30 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 30 (func_def)


State 133

   57 cond_elif: ELIF expr COLON ENDLINE stmt_list . cond_elif
   58          | ELIF expr COLON ENDLINE stmt_list . cond_else

    ELIF  shift, and go to state 106
    ELSE  shift, and go to state 107

    cond_elif  go to state 137
    cond_else  go to state 138


State 134

   59 cond_else: ELSE COLON ENDLINE stmt_list END .

    $default  reduce using rule 59 (cond_else)


State 135

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 139


State 136

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 140


State 137

   57 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 57 (cond_elif)


State 138

   58 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 58 (cond_elif)


State 139

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 28 (func_def)


State 140

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 141


State 141

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 29 (func_def)
