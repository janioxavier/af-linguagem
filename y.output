Nonterminals useless in grammar

   call_func
   data_type
   prim_type
   abs_type
   data_types


Terminals unused in grammar

   SEMICOLON
   LBRACE
   RBRACE
   LBRACK
   RBRACK
   DOT
   SKIP
   NIL
   TRUE
   FALSE
   BREAK
   SET
   LIST
   ADDPERC
   SUBPERC
   ADDEQ
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   DICT
   MAIN
   CONTSTMT
   DIV
   PERC
   NOT
   '-'


Rules useless in grammar

   61 call_func: ID LPAREN RPAREN
   62          | ID LPAREN data_types RPAREN

   63 data_type: prim_type
   64          | abs_type

   65 prim_type: INT
   66          | REAL
   67          | STR
   68          | NIL

   69 abs_type: ID

   70 data_types: data_type
   71           | data_type COMMA data_types


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: definition end_stmt
    5     | decl_var end_stmt
    6     | estr_cond end_stmt
    7     | f_builtin end_stmt
    8     | expr end_stmt
    9     | estr_while end_stmt
   10     | estr_for end_stmt

   11 end_stmt: ENDLINE

   12 decl_var: decl_data_type ID
   13         | decl_data_type ID ASSIGN expr

   14 decl_data_type: DECINT
   15               | DECREAL
   16               | DECSTR

   17 var: ID

   18 definition: type_def
   19           | func_def

   20 decl_field_type: decl_var ENDLINE
   21                | decl_var ENDLINE decl_field_type

   22 type_def: TYPE ID COLON ENDLINE decl_field_type END

   23 param_func: decl_var
   24           | decl_var COMMA param_func

   25 func_def: %empty
   26         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END
   27         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   28         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

   30 expr: LPAREN expr RPAREN
   31     | expr PLUS expr
   32     | expr MINUS expr
   33     | expr TIMES expr
   34     | expr DIVIDE expr
   35     | expr ASSIGN expr
   36     | expr LT expr
   37     | expr LE expr
   38     | expr GE expr
   39     | expr GT expr
   40     | expr EQ expr
   41     | expr AND expr
   42     | expr OR expr
   43     | expr DIVM expr
   44     | expr NEQ expr
   45     | ID
   46     | REAL
   47     | INT
   48     | STR

   49 f_builtin: f_print
   50          | f_input

   51 f_print: PRINT expr

   52 f_input: INPUT ID

   53 estr_cond: IF expr COLON ENDLINE stmt_list END
   54          | IF expr COLON ENDLINE stmt_list cond_else
   55          | IF expr COLON ENDLINE stmt_list cond_elif

   56 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif
   57          | ELIF expr COLON ENDLINE stmt_list cond_else

   58 cond_else: ELSE COLON ENDLINE stmt_list END

   59 estr_while: WHILE expr COLON stmt_list END

   60 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END


Terminals, with rules where they appear

$end (0) 0
'-' (45)
error (256)
INT (258) 47
REAL (259) 46
STR (260) 48
ID (261) 12 13 17 22 26 27 28 29 45 52
TYPE (262) 22
PRINT (263) 51
INPUT (264) 52
COMMA (265) 24 60
COLON (266) 22 26 27 28 29 53 54 55 56 57 58 59 60
SEMICOLON (267)
LPAREN (268) 26 27 28 29 30
RPAREN (269) 26 27 28 29 30
LBRACE (270)
RBRACE (271)
LBRACK (272)
RBRACK (273)
DOT (274)
ASSIGN (275) 13 35
ELIF (276) 56 57
IF (277) 53 54 55
ELSE (278) 58
RETURN (279) 27 28
WHILE (280) 59
FOR (281) 60
SKIP (282)
IN (283) 60
NIL (284)
DEF (285) 26 27 28 29
TRUE (286)
FALSE (287)
BREAK (288)
SET (289)
LIST (290)
ADDPERC (291)
SUBPERC (292)
ADDEQ (293)
SUBEQ (294)
DIVEQ (295)
MULTEQ (296)
DIVMEQ (297)
DICT (298)
MAIN (299)
END (300) 22 26 27 28 29 53 58 59 60
ENDLINE (301) 11 20 21 22 26 27 28 29 53 54 55 56 57 58
CONTSTMT (302)
DIV (303)
DECINT (304) 14
DECREAL (305) 15
DECSTR (306) 16
PLUS (307) 31
MINUS (308) 32
AND (309) 41
OR (310) 42
NEQ (311) 44
EQ (312) 40
LT (313) 36
LE (314) 37
GT (315) 39
GE (316) 38
PERC (317)
DIVM (318) 43
TIMES (319) 33
DIVIDE (320) 34
NOT (321)


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
prog (69)
    on left: 1, on right: 0
stmt_list (70)
    on left: 2 3, on right: 1 3 26 27 28 29 53 54 55 56 57 58 59 60
stmt (71)
    on left: 4 5 6 7 8 9 10, on right: 2 3
end_stmt (72)
    on left: 11, on right: 4 5 6 7 8 9 10
decl_var (73)
    on left: 12 13, on right: 5 20 21 23 24 60
decl_data_type (74)
    on left: 14 15 16, on right: 12 13
var (75)
    on left: 17, on right: 60
definition (76)
    on left: 18 19, on right: 4
decl_field_type (77)
    on left: 20 21, on right: 21 22
type_def (78)
    on left: 22, on right: 18
param_func (79)
    on left: 23 24, on right: 24 28 29
func_def (80)
    on left: 25 26 27 28 29, on right: 19
expr (81)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48, on right: 8 13 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    51 53 54 55 56 57 59
f_builtin (82)
    on left: 49 50, on right: 7
f_print (83)
    on left: 51, on right: 49
f_input (84)
    on left: 52, on right: 50
estr_cond (85)
    on left: 53 54 55, on right: 6
cond_elif (86)
    on left: 56 57, on right: 55 56
cond_else (87)
    on left: 58, on right: 54 57
estr_while (88)
    on left: 59, on right: 9
estr_for (89)
    on left: 60, on right: 10


State 0

    0 $accept: . prog $end

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 25 (func_def)

    prog            go to state 16
    stmt_list       go to state 17
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 1

   47 expr: INT .

    $default  reduce using rule 47 (expr)


State 2

   46 expr: REAL .

    $default  reduce using rule 46 (expr)


State 3

   48 expr: STR .

    $default  reduce using rule 48 (expr)


State 4

   45 expr: ID .

    $default  reduce using rule 45 (expr)


State 5

   22 type_def: TYPE . ID COLON ENDLINE decl_field_type END

    ID  shift, and go to state 31


State 6

   51 f_print: PRINT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 32


State 7

   52 f_input: INPUT . ID

    ID  shift, and go to state 33


State 8

   30 expr: LPAREN . expr RPAREN

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 34


State 9

   53 estr_cond: IF . expr COLON ENDLINE stmt_list END
   54          | IF . expr COLON ENDLINE stmt_list cond_else
   55          | IF . expr COLON ENDLINE stmt_list cond_elif

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 35


State 10

   59 estr_while: WHILE . expr COLON stmt_list END

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 36


State 11

   60 estr_for: FOR . decl_var COMMA var IN var COLON stmt_list END

    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 37
    decl_data_type  go to state 20


State 12

   26 func_def: DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list END
   27         | DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   28         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    ID  shift, and go to state 38


State 13

   14 decl_data_type: DECINT .

    $default  reduce using rule 14 (decl_data_type)


State 14

   15 decl_data_type: DECREAL .

    $default  reduce using rule 15 (decl_data_type)


State 15

   16 decl_data_type: DECSTR .

    $default  reduce using rule 16 (decl_data_type)


State 16

    0 $accept: prog . $end

    $end  shift, and go to state 39


State 17

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 18

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    ENDLINE   reduce using rule 25 (func_def)
    $default  reduce using rule 2 (stmt_list)

    stmt_list       go to state 40
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 19

    5 stmt: decl_var . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 42


State 20

   12 decl_var: decl_data_type . ID
   13         | decl_data_type . ID ASSIGN expr

    ID  shift, and go to state 43


State 21

    4 stmt: definition . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 44


State 22

   18 definition: type_def .

    $default  reduce using rule 18 (definition)


State 23

   19 definition: func_def .

    $default  reduce using rule 19 (definition)


State 24

    8 stmt: expr . end_stmt
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN   shift, and go to state 45
    ENDLINE  shift, and go to state 41
    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    NEQ      shift, and go to state 50
    EQ       shift, and go to state 51
    LT       shift, and go to state 52
    LE       shift, and go to state 53
    GT       shift, and go to state 54
    GE       shift, and go to state 55
    DIVM     shift, and go to state 56
    TIMES    shift, and go to state 57
    DIVIDE   shift, and go to state 58

    end_stmt  go to state 59


State 25

    7 stmt: f_builtin . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 60


State 26

   49 f_builtin: f_print .

    $default  reduce using rule 49 (f_builtin)


State 27

   50 f_builtin: f_input .

    $default  reduce using rule 50 (f_builtin)


State 28

    6 stmt: estr_cond . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 61


State 29

    9 stmt: estr_while . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 62


State 30

   10 stmt: estr_for . end_stmt

    ENDLINE  shift, and go to state 41

    end_stmt  go to state 63


State 31

   22 type_def: TYPE ID . COLON ENDLINE decl_field_type END

    COLON  shift, and go to state 64


State 32

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr
   51 f_print: PRINT expr .

    ASSIGN  shift, and go to state 45
    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    NEQ     shift, and go to state 50
    EQ      shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    DIVM    shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 51 (f_print)


State 33

   52 f_input: INPUT ID .

    $default  reduce using rule 52 (f_input)


State 34

   30 expr: LPAREN expr . RPAREN
   31     | expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    RPAREN  shift, and go to state 65
    ASSIGN  shift, and go to state 45
    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    NEQ     shift, and go to state 50
    EQ      shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    DIVM    shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58


State 35

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr
   53 estr_cond: IF expr . COLON ENDLINE stmt_list END
   54          | IF expr . COLON ENDLINE stmt_list cond_else
   55          | IF expr . COLON ENDLINE stmt_list cond_elif

    COLON   shift, and go to state 66
    ASSIGN  shift, and go to state 45
    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    NEQ     shift, and go to state 50
    EQ      shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    DIVM    shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58


State 36

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr
   59 estr_while: WHILE expr . COLON stmt_list END

    COLON   shift, and go to state 67
    ASSIGN  shift, and go to state 45
    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    NEQ     shift, and go to state 50
    EQ      shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    DIVM    shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58


State 37

   60 estr_for: FOR decl_var . COMMA var IN var COLON stmt_list END

    COMMA  shift, and go to state 68


State 38

   26 func_def: DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list END
   27         | DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   28         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    LPAREN  shift, and go to state 69


State 39

    0 $accept: prog $end .

    $default  accept


State 40

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 41

   11 end_stmt: ENDLINE .

    $default  reduce using rule 11 (end_stmt)


State 42

    5 stmt: decl_var end_stmt .

    $default  reduce using rule 5 (stmt)


State 43

   12 decl_var: decl_data_type ID .
   13         | decl_data_type ID . ASSIGN expr

    ASSIGN  shift, and go to state 70

    $default  reduce using rule 12 (decl_var)


State 44

    4 stmt: definition end_stmt .

    $default  reduce using rule 4 (stmt)


State 45

   35 expr: expr ASSIGN . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 71


State 46

   31 expr: expr PLUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 72


State 47

   32 expr: expr MINUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 73


State 48

   41 expr: expr AND . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 74


State 49

   42 expr: expr OR . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 75


State 50

   44 expr: expr NEQ . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 76


State 51

   40 expr: expr EQ . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 77


State 52

   36 expr: expr LT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 78


State 53

   37 expr: expr LE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 79


State 54

   39 expr: expr GT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 80


State 55

   38 expr: expr GE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 81


State 56

   43 expr: expr DIVM . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 82


State 57

   33 expr: expr TIMES . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 83


State 58

   34 expr: expr DIVIDE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 84


State 59

    8 stmt: expr end_stmt .

    $default  reduce using rule 8 (stmt)


State 60

    7 stmt: f_builtin end_stmt .

    $default  reduce using rule 7 (stmt)


State 61

    6 stmt: estr_cond end_stmt .

    $default  reduce using rule 6 (stmt)


State 62

    9 stmt: estr_while end_stmt .

    $default  reduce using rule 9 (stmt)


State 63

   10 stmt: estr_for end_stmt .

    $default  reduce using rule 10 (stmt)


State 64

   22 type_def: TYPE ID COLON . ENDLINE decl_field_type END

    ENDLINE  shift, and go to state 85


State 65

   30 expr: LPAREN expr RPAREN .

    $default  reduce using rule 30 (expr)


State 66

   53 estr_cond: IF expr COLON . ENDLINE stmt_list END
   54          | IF expr COLON . ENDLINE stmt_list cond_else
   55          | IF expr COLON . ENDLINE stmt_list cond_elif

    ENDLINE  shift, and go to state 86


State 67

   59 estr_while: WHILE expr COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 25 (func_def)

    stmt_list       go to state 87
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 68

   60 estr_for: FOR decl_var COMMA . var IN var COLON stmt_list END

    ID  shift, and go to state 88

    var  go to state 89


State 69

   26 func_def: DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list END
   27         | DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   28         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list END

    RPAREN   shift, and go to state 90
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 91
    decl_data_type  go to state 20
    param_func      go to state 92


State 70

   13 decl_var: decl_data_type ID ASSIGN . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 93


State 71

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   35     | expr ASSIGN expr .
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45

    $default  reduce using rule 35 (expr)


State 72

   31 expr: expr . PLUS expr
   31     | expr PLUS expr .
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 31 (expr)


State 73

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   32     | expr MINUS expr .
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 32 (expr)


State 74

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   41     | expr AND expr .
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 41 (expr)


State 75

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   42     | expr OR expr .
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 42 (expr)


State 76

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr
   44     | expr NEQ expr .

    ASSIGN  shift, and go to state 45
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 44 (expr)


State 77

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   40     | expr EQ expr .
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 40 (expr)


State 78

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   36     | expr LT expr .
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 36 (expr)


State 79

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   37     | expr LE expr .
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 37 (expr)


State 80

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   39     | expr GT expr .
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 39 (expr)


State 81

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   38     | expr GE expr .
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 38 (expr)


State 82

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   43     | expr DIVM expr .
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 43 (expr)


State 83

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   33     | expr TIMES expr .
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45

    $default  reduce using rule 33 (expr)


State 84

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   34     | expr DIVIDE expr .
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45

    $default  reduce using rule 34 (expr)


State 85

   22 type_def: TYPE ID COLON ENDLINE . decl_field_type END

    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var         go to state 94
    decl_data_type   go to state 20
    decl_field_type  go to state 95


State 86

   53 estr_cond: IF expr COLON ENDLINE . stmt_list END
   54          | IF expr COLON ENDLINE . stmt_list cond_else
   55          | IF expr COLON ENDLINE . stmt_list cond_elif

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 25 (func_def)

    stmt_list       go to state 96
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 87

   59 estr_while: WHILE expr COLON stmt_list . END

    END  shift, and go to state 97


State 88

   17 var: ID .

    $default  reduce using rule 17 (var)


State 89

   60 estr_for: FOR decl_var COMMA var . IN var COLON stmt_list END

    IN  shift, and go to state 98


State 90

   26 func_def: DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list END
   27         | DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END

    COLON  shift, and go to state 99


State 91

   23 param_func: decl_var .
   24           | decl_var . COMMA param_func

    COMMA  shift, and go to state 100

    $default  reduce using rule 23 (param_func)


State 92

   28 func_def: DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list END

    RPAREN  shift, and go to state 101


State 93

   13 decl_var: decl_data_type ID ASSIGN expr .
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr

    ASSIGN  shift, and go to state 45
    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    NEQ     shift, and go to state 50
    EQ      shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    DIVM    shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 13 (decl_var)


State 94

   20 decl_field_type: decl_var . ENDLINE
   21                | decl_var . ENDLINE decl_field_type

    ENDLINE  shift, and go to state 102


State 95

   22 type_def: TYPE ID COLON ENDLINE decl_field_type . END

    END  shift, and go to state 103


State 96

   53 estr_cond: IF expr COLON ENDLINE stmt_list . END
   54          | IF expr COLON ENDLINE stmt_list . cond_else
   55          | IF expr COLON ENDLINE stmt_list . cond_elif

    ELIF  shift, and go to state 104
    ELSE  shift, and go to state 105
    END   shift, and go to state 106

    cond_elif  go to state 107
    cond_else  go to state 108


State 97

   59 estr_while: WHILE expr COLON stmt_list END .

    $default  reduce using rule 59 (estr_while)


State 98

   60 estr_for: FOR decl_var COMMA var IN . var COLON stmt_list END

    ID  shift, and go to state 88

    var  go to state 109


State 99

   26 func_def: DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list END
   27         | DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END

    ENDLINE  shift, and go to state 110


State 100

   24 param_func: decl_var COMMA . param_func

    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 91
    decl_data_type  go to state 20
    param_func      go to state 111


State 101

   28 func_def: DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 112


State 102

   20 decl_field_type: decl_var ENDLINE .
   21                | decl_var ENDLINE . decl_field_type

    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 20 (decl_field_type)

    decl_var         go to state 94
    decl_data_type   go to state 20
    decl_field_type  go to state 113


State 103

   22 type_def: TYPE ID COLON ENDLINE decl_field_type END .

    $default  reduce using rule 22 (type_def)


State 104

   56 cond_elif: ELIF . expr COLON ENDLINE stmt_list cond_elif
   57          | ELIF . expr COLON ENDLINE stmt_list cond_else

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 4
    LPAREN  shift, and go to state 8

    expr  go to state 114


State 105

   58 cond_else: ELSE . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 115


State 106

   53 estr_cond: IF expr COLON ENDLINE stmt_list END .

    $default  reduce using rule 53 (estr_cond)


State 107

   55 estr_cond: IF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 55 (estr_cond)


State 108

   54 estr_cond: IF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 54 (estr_cond)


State 109

   60 estr_for: FOR decl_var COMMA var IN var . COLON stmt_list END

    COLON  shift, and go to state 116


State 110

   26 func_def: DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list END
   27         | DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 25 (func_def)

    stmt_list       go to state 117
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 111

   24 param_func: decl_var COMMA param_func .

    $default  reduce using rule 24 (param_func)


State 112

   28 func_def: DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 118


State 113

   21 decl_field_type: decl_var ENDLINE decl_field_type .

    $default  reduce using rule 21 (decl_field_type)


State 114

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . DIVIDE expr
   35     | expr . ASSIGN expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GE expr
   39     | expr . GT expr
   40     | expr . EQ expr
   41     | expr . AND expr
   42     | expr . OR expr
   43     | expr . DIVM expr
   44     | expr . NEQ expr
   56 cond_elif: ELIF expr . COLON ENDLINE stmt_list cond_elif
   57          | ELIF expr . COLON ENDLINE stmt_list cond_else

    COLON   shift, and go to state 119
    ASSIGN  shift, and go to state 45
    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    NEQ     shift, and go to state 50
    EQ      shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    DIVM    shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58


State 115

   58 cond_else: ELSE COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 120


State 116

   60 estr_for: FOR decl_var COMMA var IN var COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 25 (func_def)

    stmt_list       go to state 121
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 117

   26 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . END
   27         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END

    RETURN  shift, and go to state 122
    END     shift, and go to state 123


State 118

   28 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 25 (func_def)

    stmt_list       go to state 124
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 119

   56 cond_elif: ELIF expr COLON . ENDLINE stmt_list cond_elif
   57          | ELIF expr COLON . ENDLINE stmt_list cond_else

    ENDLINE  shift, and go to state 125


State 120

   58 cond_else: ELSE COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 25 (func_def)

    stmt_list       go to state 126
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 121

   60 estr_for: FOR decl_var COMMA var IN var COLON stmt_list . END

    END  shift, and go to state 127


State 122

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 128


State 123

   26 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 26 (func_def)


State 124

   28 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END
   29         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . END

    RETURN  shift, and go to state 129
    END     shift, and go to state 130


State 125

   56 cond_elif: ELIF expr COLON ENDLINE . stmt_list cond_elif
   57          | ELIF expr COLON ENDLINE . stmt_list cond_else

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 25 (func_def)

    stmt_list       go to state 131
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 126

   58 cond_else: ELSE COLON ENDLINE stmt_list . END

    END  shift, and go to state 132


State 127

   60 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END .

    $default  reduce using rule 60 (estr_for)


State 128

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 133


State 129

   28 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 134


State 130

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 29 (func_def)


State 131

   56 cond_elif: ELIF expr COLON ENDLINE stmt_list . cond_elif
   57          | ELIF expr COLON ENDLINE stmt_list . cond_else

    ELIF  shift, and go to state 104
    ELSE  shift, and go to state 105

    cond_elif  go to state 135
    cond_else  go to state 136


State 132

   58 cond_else: ELSE COLON ENDLINE stmt_list END .

    $default  reduce using rule 58 (cond_else)


State 133

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 137


State 134

   28 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 138


State 135

   56 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 56 (cond_elif)


State 136

   57 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 57 (cond_elif)


State 137

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 27 (func_def)


State 138

   28 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 139


State 139

   28 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 28 (func_def)
