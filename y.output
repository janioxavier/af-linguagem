Terminals unused in grammar

   SEMICOLON
   DOT
   ELIF
   IF
   ELSE
   WHILE
   FOR
   SKIP
   IN
   TRUE
   FALSE
   BREAK
   SET
   ADDPERC
   SUBPERC
   ADDEQ
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   MAIN
   DIVIDE


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: assign end_stmt
    5     | definition end_stmt
    6     | decl_int end_stmt
    7     | decl_real end_stmt
    8     | decl_str end_stmt
    9     | decl_type end_stmt

   10 end_stmt: ENDLINE
   11         | CONTSTMT end_stmt

   12 assign: lhs ASSIGN rhs

   13 lhs: decl_int
   14    | decl_real
   15    | decl_str
   16    | decl_type
   17    | var

   18 rhs: var
   19    | expr
   20    | call_func

   21 call_func: ID LPAREN RPAREN
   22          | ID LPAREN data_types RPAREN

   23 decl_int: DECINT ID

   24 decl_real: DECREAL ID

   25 decl_str: DECSTR ID

   26 decl_type: TYPE ID

   27 var: ID

   28 data_type: prim_type
   29          | abs_type

   30 prim_type: INT
   31          | REAL
   32          | STR
   33          | DICT ASSIGN dict
   34          | LIST ASSIGN list
   35          | NIL

   36 abs_type: TYPE ID

   37 dict: LBRACK key_value RBRACK

   38 key_value: data_type COLON data_type
   39          | data_type COLON data_type COMMA key_value

   40 list: LBRACE data_types RBRACE

   41 data_types: data_type
   42           | data_type COMMA data_types

   43 definition: type_def
   44           | func_def

   45 type_def: TYPE ID COLON ENDLINE stmt_list END

   46 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list END
   47         | DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

   48 expr: expr opbi1 term
   49     | term

   50 opbi1: PLUS
   51      | MINUS
   52      | LT
   53      | LE
   54      | GE
   55      | GT
   56      | EQ
   57      | AND
   58      | OR
   59      | DIVM
   60      | NEQ

   61 opbi2: DIV
   62      | TIMES

   63 term: term opbi2 fact
   64     | fact

   65 fact: LPAREN expr RPAREN
   66     | unaop data_type
   67     | data_type

   68 unaop: NOT
   69      | PERC
   70      | MINUS


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 30
REAL (259) 31
STR (260) 32
TYPE (261) 26 36 45
ID (262) 21 22 23 24 25 26 27 36 45 46 47
COMMA (263) 39 42
COLON (264) 38 39 45 46 47
SEMICOLON (265)
LPAREN (266) 21 22 46 47 65
RPAREN (267) 21 22 46 47 65
LBRACE (268) 40
RBRACE (269) 40
LBRACK (270) 37
RBRACK (271) 37
DOT (272)
PLUS (273) 50
MINUS (274) 51 70
TIMES (275) 62
DIV (276) 61
NEQ (277) 60
RETURN (278) 47
EQ (279) 56
LT (280) 52
LE (281) 53
GT (282) 55
GE (283) 54
AND (284) 57
OR (285) 58
ASSIGN (286) 12 33 34
ELIF (287)
IF (288)
ELSE (289)
WHILE (290)
FOR (291)
SKIP (292)
IN (293)
NOT (294) 68
NIL (295) 35
DEF (296) 46 47
TRUE (297)
FALSE (298)
BREAK (299)
SET (300)
LIST (301) 34
DIVM (302) 59
PERC (303) 69
ADDPERC (304)
SUBPERC (305)
ADDEQ (306)
SUBEQ (307)
DIVEQ (308)
MULTEQ (309)
DIVMEQ (310)
DICT (311) 33
MAIN (312)
END (313) 45 46 47
ENDLINE (314) 10 45 46 47
CONTSTMT (315) 11
DIVIDE (316)
DECINT (317) 23
DECREAL (318) 24
DECSTR (319) 25


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
prog (66)
    on left: 1, on right: 0
stmt_list (67)
    on left: 2 3, on right: 1 3 45 46 47
stmt (68)
    on left: 4 5 6 7 8 9, on right: 2 3
end_stmt (69)
    on left: 10 11, on right: 4 5 6 7 8 9 11
assign (70)
    on left: 12, on right: 4
lhs (71)
    on left: 13 14 15 16 17, on right: 12
rhs (72)
    on left: 18 19 20, on right: 12
call_func (73)
    on left: 21 22, on right: 20
decl_int (74)
    on left: 23, on right: 6 13
decl_real (75)
    on left: 24, on right: 7 14
decl_str (76)
    on left: 25, on right: 8 15
decl_type (77)
    on left: 26, on right: 9 16
var (78)
    on left: 27, on right: 17 18
data_type (79)
    on left: 28 29, on right: 38 39 41 42 47 66 67
prim_type (80)
    on left: 30 31 32 33 34 35, on right: 28
abs_type (81)
    on left: 36, on right: 29
dict (82)
    on left: 37, on right: 33
key_value (83)
    on left: 38 39, on right: 37 39
list (84)
    on left: 40, on right: 34
data_types (85)
    on left: 41 42, on right: 22 40 42 46 47
definition (86)
    on left: 43 44, on right: 5
type_def (87)
    on left: 45, on right: 43
func_def (88)
    on left: 46 47, on right: 44
expr (89)
    on left: 48 49, on right: 19 48 65
opbi1 (90)
    on left: 50 51 52 53 54 55 56 57 58 59 60, on right: 48
opbi2 (91)
    on left: 61 62, on right: 63
term (92)
    on left: 63 64, on right: 48 49 63
fact (93)
    on left: 65 66 67, on right: 63 64
unaop (94)
    on left: 68 69 70, on right: 66


State 0

    0 $accept: . prog $end

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    DEF      shift, and go to state 3
    DECINT   shift, and go to state 4
    DECREAL  shift, and go to state 5
    DECSTR   shift, and go to state 6

    prog        go to state 7
    stmt_list   go to state 8
    stmt        go to state 9
    assign      go to state 10
    lhs         go to state 11
    decl_int    go to state 12
    decl_real   go to state 13
    decl_str    go to state 14
    decl_type   go to state 15
    var         go to state 16
    definition  go to state 17
    type_def    go to state 18
    func_def    go to state 19


State 1

   26 decl_type: TYPE . ID
   45 type_def: TYPE . ID COLON ENDLINE stmt_list END

    ID  shift, and go to state 20


State 2

   27 var: ID .

    $default  reduce using rule 27 (var)


State 3

   46 func_def: DEF . ID LPAREN data_types RPAREN COLON ENDLINE stmt_list END
   47         | DEF . ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

    ID  shift, and go to state 21


State 4

   23 decl_int: DECINT . ID

    ID  shift, and go to state 22


State 5

   24 decl_real: DECREAL . ID

    ID  shift, and go to state 23


State 6

   25 decl_str: DECSTR . ID

    ID  shift, and go to state 24


State 7

    0 $accept: prog . $end

    $end  shift, and go to state 25


State 8

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 9

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    DEF      shift, and go to state 3
    DECINT   shift, and go to state 4
    DECREAL  shift, and go to state 5
    DECSTR   shift, and go to state 6

    $default  reduce using rule 2 (stmt_list)

    stmt_list   go to state 26
    stmt        go to state 9
    assign      go to state 10
    lhs         go to state 11
    decl_int    go to state 12
    decl_real   go to state 13
    decl_str    go to state 14
    decl_type   go to state 15
    var         go to state 16
    definition  go to state 17
    type_def    go to state 18
    func_def    go to state 19


State 10

    4 stmt: assign . end_stmt

    ENDLINE   shift, and go to state 27
    CONTSTMT  shift, and go to state 28

    end_stmt  go to state 29


State 11

   12 assign: lhs . ASSIGN rhs

    ASSIGN  shift, and go to state 30


State 12

    6 stmt: decl_int . end_stmt
   13 lhs: decl_int .

    ENDLINE   shift, and go to state 27
    CONTSTMT  shift, and go to state 28

    $default  reduce using rule 13 (lhs)

    end_stmt  go to state 31


State 13

    7 stmt: decl_real . end_stmt
   14 lhs: decl_real .

    ENDLINE   shift, and go to state 27
    CONTSTMT  shift, and go to state 28

    $default  reduce using rule 14 (lhs)

    end_stmt  go to state 32


State 14

    8 stmt: decl_str . end_stmt
   15 lhs: decl_str .

    ENDLINE   shift, and go to state 27
    CONTSTMT  shift, and go to state 28

    $default  reduce using rule 15 (lhs)

    end_stmt  go to state 33


State 15

    9 stmt: decl_type . end_stmt
   16 lhs: decl_type .

    ENDLINE   shift, and go to state 27
    CONTSTMT  shift, and go to state 28

    $default  reduce using rule 16 (lhs)

    end_stmt  go to state 34


State 16

   17 lhs: var .

    $default  reduce using rule 17 (lhs)


State 17

    5 stmt: definition . end_stmt

    ENDLINE   shift, and go to state 27
    CONTSTMT  shift, and go to state 28

    end_stmt  go to state 35


State 18

   43 definition: type_def .

    $default  reduce using rule 43 (definition)


State 19

   44 definition: func_def .

    $default  reduce using rule 44 (definition)


State 20

   26 decl_type: TYPE ID .
   45 type_def: TYPE ID . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 36

    $default  reduce using rule 26 (decl_type)


State 21

   46 func_def: DEF ID . LPAREN data_types RPAREN COLON ENDLINE stmt_list END
   47         | DEF ID . LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

    LPAREN  shift, and go to state 37


State 22

   23 decl_int: DECINT ID .

    $default  reduce using rule 23 (decl_int)


State 23

   24 decl_real: DECREAL ID .

    $default  reduce using rule 24 (decl_real)


State 24

   25 decl_str: DECSTR ID .

    $default  reduce using rule 25 (decl_str)


State 25

    0 $accept: prog $end .

    $default  accept


State 26

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 27

   10 end_stmt: ENDLINE .

    $default  reduce using rule 10 (end_stmt)


State 28

   11 end_stmt: CONTSTMT . end_stmt

    ENDLINE   shift, and go to state 27
    CONTSTMT  shift, and go to state 28

    end_stmt  go to state 38


State 29

    4 stmt: assign end_stmt .

    $default  reduce using rule 4 (stmt)


State 30

   12 assign: lhs ASSIGN . rhs

    INT     shift, and go to state 39
    REAL    shift, and go to state 40
    STR     shift, and go to state 41
    TYPE    shift, and go to state 42
    ID      shift, and go to state 43
    LPAREN  shift, and go to state 44
    MINUS   shift, and go to state 45
    NOT     shift, and go to state 46
    NIL     shift, and go to state 47
    LIST    shift, and go to state 48
    PERC    shift, and go to state 49
    DICT    shift, and go to state 50

    rhs        go to state 51
    call_func  go to state 52
    var        go to state 53
    data_type  go to state 54
    prim_type  go to state 55
    abs_type   go to state 56
    expr       go to state 57
    term       go to state 58
    fact       go to state 59
    unaop      go to state 60


State 31

    6 stmt: decl_int end_stmt .

    $default  reduce using rule 6 (stmt)


State 32

    7 stmt: decl_real end_stmt .

    $default  reduce using rule 7 (stmt)


State 33

    8 stmt: decl_str end_stmt .

    $default  reduce using rule 8 (stmt)


State 34

    9 stmt: decl_type end_stmt .

    $default  reduce using rule 9 (stmt)


State 35

    5 stmt: definition end_stmt .

    $default  reduce using rule 5 (stmt)


State 36

   45 type_def: TYPE ID COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 61


State 37

   46 func_def: DEF ID LPAREN . data_types RPAREN COLON ENDLINE stmt_list END
   47         | DEF ID LPAREN . data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END

    INT   shift, and go to state 39
    REAL  shift, and go to state 40
    STR   shift, and go to state 41
    TYPE  shift, and go to state 42
    NIL   shift, and go to state 47
    LIST  shift, and go to state 48
    DICT  shift, and go to state 50

    data_type   go to state 62
    prim_type   go to state 55
    abs_type    go to state 56
    data_types  go to state 63


State 38

   11 end_stmt: CONTSTMT end_stmt .

    $default  reduce using rule 11 (end_stmt)


State 39

   30 prim_type: INT .

    $default  reduce using rule 30 (prim_type)


State 40

   31 prim_type: REAL .

    $default  reduce using rule 31 (prim_type)


State 41

   32 prim_type: STR .

    $default  reduce using rule 32 (prim_type)


State 42

   36 abs_type: TYPE . ID

    ID  shift, and go to state 64


State 43

   21 call_func: ID . LPAREN RPAREN
   22          | ID . LPAREN data_types RPAREN
   27 var: ID .

    LPAREN  shift, and go to state 65

    $default  reduce using rule 27 (var)


State 44

   65 fact: LPAREN . expr RPAREN

    INT     shift, and go to state 39
    REAL    shift, and go to state 40
    STR     shift, and go to state 41
    TYPE    shift, and go to state 42
    LPAREN  shift, and go to state 44
    MINUS   shift, and go to state 45
    NOT     shift, and go to state 46
    NIL     shift, and go to state 47
    LIST    shift, and go to state 48
    PERC    shift, and go to state 49
    DICT    shift, and go to state 50

    data_type  go to state 54
    prim_type  go to state 55
    abs_type   go to state 56
    expr       go to state 66
    term       go to state 58
    fact       go to state 59
    unaop      go to state 60


State 45

   70 unaop: MINUS .

    $default  reduce using rule 70 (unaop)


State 46

   68 unaop: NOT .

    $default  reduce using rule 68 (unaop)


State 47

   35 prim_type: NIL .

    $default  reduce using rule 35 (prim_type)


State 48

   34 prim_type: LIST . ASSIGN list

    ASSIGN  shift, and go to state 67


State 49

   69 unaop: PERC .

    $default  reduce using rule 69 (unaop)


State 50

   33 prim_type: DICT . ASSIGN dict

    ASSIGN  shift, and go to state 68


State 51

   12 assign: lhs ASSIGN rhs .

    $default  reduce using rule 12 (assign)


State 52

   20 rhs: call_func .

    $default  reduce using rule 20 (rhs)


State 53

   18 rhs: var .

    $default  reduce using rule 18 (rhs)


State 54

   67 fact: data_type .

    $default  reduce using rule 67 (fact)


State 55

   28 data_type: prim_type .

    $default  reduce using rule 28 (data_type)


State 56

   29 data_type: abs_type .

    $default  reduce using rule 29 (data_type)


State 57

   19 rhs: expr .
   48 expr: expr . opbi1 term

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    NEQ    shift, and go to state 71
    EQ     shift, and go to state 72
    LT     shift, and go to state 73
    LE     shift, and go to state 74
    GT     shift, and go to state 75
    GE     shift, and go to state 76
    AND    shift, and go to state 77
    OR     shift, and go to state 78
    DIVM   shift, and go to state 79

    $default  reduce using rule 19 (rhs)

    opbi1  go to state 80


State 58

   49 expr: term .
   63 term: term . opbi2 fact

    TIMES  shift, and go to state 81
    DIV    shift, and go to state 82

    $default  reduce using rule 49 (expr)

    opbi2  go to state 83


State 59

   64 term: fact .

    $default  reduce using rule 64 (term)


State 60

   66 fact: unaop . data_type

    INT   shift, and go to state 39
    REAL  shift, and go to state 40
    STR   shift, and go to state 41
    TYPE  shift, and go to state 42
    NIL   shift, and go to state 47
    LIST  shift, and go to state 48
    DICT  shift, and go to state 50

    data_type  go to state 84
    prim_type  go to state 55
    abs_type   go to state 56


State 61

   45 type_def: TYPE ID COLON ENDLINE . stmt_list END

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    DEF      shift, and go to state 3
    DECINT   shift, and go to state 4
    DECREAL  shift, and go to state 5
    DECSTR   shift, and go to state 6

    stmt_list   go to state 85
    stmt        go to state 9
    assign      go to state 10
    lhs         go to state 11
    decl_int    go to state 12
    decl_real   go to state 13
    decl_str    go to state 14
    decl_type   go to state 15
    var         go to state 16
    definition  go to state 17
    type_def    go to state 18
    func_def    go to state 19


State 62

   41 data_types: data_type .
   42           | data_type . COMMA data_types

    COMMA  shift, and go to state 86

    $default  reduce using rule 41 (data_types)


State 63

   46 func_def: DEF ID LPAREN data_types . RPAREN COLON ENDLINE stmt_list END
   47         | DEF ID LPAREN data_types . RPAREN COLON ENDLINE stmt_list RETURN data_type END

    RPAREN  shift, and go to state 87


State 64

   36 abs_type: TYPE ID .

    $default  reduce using rule 36 (abs_type)


State 65

   21 call_func: ID LPAREN . RPAREN
   22          | ID LPAREN . data_types RPAREN

    INT     shift, and go to state 39
    REAL    shift, and go to state 40
    STR     shift, and go to state 41
    TYPE    shift, and go to state 42
    RPAREN  shift, and go to state 88
    NIL     shift, and go to state 47
    LIST    shift, and go to state 48
    DICT    shift, and go to state 50

    data_type   go to state 62
    prim_type   go to state 55
    abs_type    go to state 56
    data_types  go to state 89


State 66

   48 expr: expr . opbi1 term
   65 fact: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 90
    PLUS    shift, and go to state 69
    MINUS   shift, and go to state 70
    NEQ     shift, and go to state 71
    EQ      shift, and go to state 72
    LT      shift, and go to state 73
    LE      shift, and go to state 74
    GT      shift, and go to state 75
    GE      shift, and go to state 76
    AND     shift, and go to state 77
    OR      shift, and go to state 78
    DIVM    shift, and go to state 79

    opbi1  go to state 80


State 67

   34 prim_type: LIST ASSIGN . list

    LBRACE  shift, and go to state 91

    list  go to state 92


State 68

   33 prim_type: DICT ASSIGN . dict

    LBRACK  shift, and go to state 93

    dict  go to state 94


State 69

   50 opbi1: PLUS .

    $default  reduce using rule 50 (opbi1)


State 70

   51 opbi1: MINUS .

    $default  reduce using rule 51 (opbi1)


State 71

   60 opbi1: NEQ .

    $default  reduce using rule 60 (opbi1)


State 72

   56 opbi1: EQ .

    $default  reduce using rule 56 (opbi1)


State 73

   52 opbi1: LT .

    $default  reduce using rule 52 (opbi1)


State 74

   53 opbi1: LE .

    $default  reduce using rule 53 (opbi1)


State 75

   55 opbi1: GT .

    $default  reduce using rule 55 (opbi1)


State 76

   54 opbi1: GE .

    $default  reduce using rule 54 (opbi1)


State 77

   57 opbi1: AND .

    $default  reduce using rule 57 (opbi1)


State 78

   58 opbi1: OR .

    $default  reduce using rule 58 (opbi1)


State 79

   59 opbi1: DIVM .

    $default  reduce using rule 59 (opbi1)


State 80

   48 expr: expr opbi1 . term

    INT     shift, and go to state 39
    REAL    shift, and go to state 40
    STR     shift, and go to state 41
    TYPE    shift, and go to state 42
    LPAREN  shift, and go to state 44
    MINUS   shift, and go to state 45
    NOT     shift, and go to state 46
    NIL     shift, and go to state 47
    LIST    shift, and go to state 48
    PERC    shift, and go to state 49
    DICT    shift, and go to state 50

    data_type  go to state 54
    prim_type  go to state 55
    abs_type   go to state 56
    term       go to state 95
    fact       go to state 59
    unaop      go to state 60


State 81

   62 opbi2: TIMES .

    $default  reduce using rule 62 (opbi2)


State 82

   61 opbi2: DIV .

    $default  reduce using rule 61 (opbi2)


State 83

   63 term: term opbi2 . fact

    INT     shift, and go to state 39
    REAL    shift, and go to state 40
    STR     shift, and go to state 41
    TYPE    shift, and go to state 42
    LPAREN  shift, and go to state 44
    MINUS   shift, and go to state 45
    NOT     shift, and go to state 46
    NIL     shift, and go to state 47
    LIST    shift, and go to state 48
    PERC    shift, and go to state 49
    DICT    shift, and go to state 50

    data_type  go to state 54
    prim_type  go to state 55
    abs_type   go to state 56
    fact       go to state 96
    unaop      go to state 60


State 84

   66 fact: unaop data_type .

    $default  reduce using rule 66 (fact)


State 85

   45 type_def: TYPE ID COLON ENDLINE stmt_list . END

    END  shift, and go to state 97


State 86

   42 data_types: data_type COMMA . data_types

    INT   shift, and go to state 39
    REAL  shift, and go to state 40
    STR   shift, and go to state 41
    TYPE  shift, and go to state 42
    NIL   shift, and go to state 47
    LIST  shift, and go to state 48
    DICT  shift, and go to state 50

    data_type   go to state 62
    prim_type   go to state 55
    abs_type    go to state 56
    data_types  go to state 98


State 87

   46 func_def: DEF ID LPAREN data_types RPAREN . COLON ENDLINE stmt_list END
   47         | DEF ID LPAREN data_types RPAREN . COLON ENDLINE stmt_list RETURN data_type END

    COLON  shift, and go to state 99


State 88

   21 call_func: ID LPAREN RPAREN .

    $default  reduce using rule 21 (call_func)


State 89

   22 call_func: ID LPAREN data_types . RPAREN

    RPAREN  shift, and go to state 100


State 90

   65 fact: LPAREN expr RPAREN .

    $default  reduce using rule 65 (fact)


State 91

   40 list: LBRACE . data_types RBRACE

    INT   shift, and go to state 39
    REAL  shift, and go to state 40
    STR   shift, and go to state 41
    TYPE  shift, and go to state 42
    NIL   shift, and go to state 47
    LIST  shift, and go to state 48
    DICT  shift, and go to state 50

    data_type   go to state 62
    prim_type   go to state 55
    abs_type    go to state 56
    data_types  go to state 101


State 92

   34 prim_type: LIST ASSIGN list .

    $default  reduce using rule 34 (prim_type)


State 93

   37 dict: LBRACK . key_value RBRACK

    INT   shift, and go to state 39
    REAL  shift, and go to state 40
    STR   shift, and go to state 41
    TYPE  shift, and go to state 42
    NIL   shift, and go to state 47
    LIST  shift, and go to state 48
    DICT  shift, and go to state 50

    data_type  go to state 102
    prim_type  go to state 55
    abs_type   go to state 56
    key_value  go to state 103


State 94

   33 prim_type: DICT ASSIGN dict .

    $default  reduce using rule 33 (prim_type)


State 95

   48 expr: expr opbi1 term .
   63 term: term . opbi2 fact

    TIMES  shift, and go to state 81
    DIV    shift, and go to state 82

    $default  reduce using rule 48 (expr)

    opbi2  go to state 83


State 96

   63 term: term opbi2 fact .

    $default  reduce using rule 63 (term)


State 97

   45 type_def: TYPE ID COLON ENDLINE stmt_list END .

    $default  reduce using rule 45 (type_def)


State 98

   42 data_types: data_type COMMA data_types .

    $default  reduce using rule 42 (data_types)


State 99

   46 func_def: DEF ID LPAREN data_types RPAREN COLON . ENDLINE stmt_list END
   47         | DEF ID LPAREN data_types RPAREN COLON . ENDLINE stmt_list RETURN data_type END

    ENDLINE  shift, and go to state 104


State 100

   22 call_func: ID LPAREN data_types RPAREN .

    $default  reduce using rule 22 (call_func)


State 101

   40 list: LBRACE data_types . RBRACE

    RBRACE  shift, and go to state 105


State 102

   38 key_value: data_type . COLON data_type
   39          | data_type . COLON data_type COMMA key_value

    COLON  shift, and go to state 106


State 103

   37 dict: LBRACK key_value . RBRACK

    RBRACK  shift, and go to state 107


State 104

   46 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE . stmt_list END
   47         | DEF ID LPAREN data_types RPAREN COLON ENDLINE . stmt_list RETURN data_type END

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    DEF      shift, and go to state 3
    DECINT   shift, and go to state 4
    DECREAL  shift, and go to state 5
    DECSTR   shift, and go to state 6

    stmt_list   go to state 108
    stmt        go to state 9
    assign      go to state 10
    lhs         go to state 11
    decl_int    go to state 12
    decl_real   go to state 13
    decl_str    go to state 14
    decl_type   go to state 15
    var         go to state 16
    definition  go to state 17
    type_def    go to state 18
    func_def    go to state 19


State 105

   40 list: LBRACE data_types RBRACE .

    $default  reduce using rule 40 (list)


State 106

   38 key_value: data_type COLON . data_type
   39          | data_type COLON . data_type COMMA key_value

    INT   shift, and go to state 39
    REAL  shift, and go to state 40
    STR   shift, and go to state 41
    TYPE  shift, and go to state 42
    NIL   shift, and go to state 47
    LIST  shift, and go to state 48
    DICT  shift, and go to state 50

    data_type  go to state 109
    prim_type  go to state 55
    abs_type   go to state 56


State 107

   37 dict: LBRACK key_value RBRACK .

    $default  reduce using rule 37 (dict)


State 108

   46 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list . END
   47         | DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list . RETURN data_type END

    RETURN  shift, and go to state 110
    END     shift, and go to state 111


State 109

   38 key_value: data_type COLON data_type .
   39          | data_type COLON data_type . COMMA key_value

    COMMA  shift, and go to state 112

    $default  reduce using rule 38 (key_value)


State 110

   47 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN . data_type END

    INT   shift, and go to state 39
    REAL  shift, and go to state 40
    STR   shift, and go to state 41
    TYPE  shift, and go to state 42
    NIL   shift, and go to state 47
    LIST  shift, and go to state 48
    DICT  shift, and go to state 50

    data_type  go to state 113
    prim_type  go to state 55
    abs_type   go to state 56


State 111

   46 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 46 (func_def)


State 112

   39 key_value: data_type COLON data_type COMMA . key_value

    INT   shift, and go to state 39
    REAL  shift, and go to state 40
    STR   shift, and go to state 41
    TYPE  shift, and go to state 42
    NIL   shift, and go to state 47
    LIST  shift, and go to state 48
    DICT  shift, and go to state 50

    data_type  go to state 102
    prim_type  go to state 55
    abs_type   go to state 56
    key_value  go to state 114


State 113

   47 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type . END

    END  shift, and go to state 115


State 114

   39 key_value: data_type COLON data_type COMMA key_value .

    $default  reduce using rule 39 (key_value)


State 115

   47 func_def: DEF ID LPAREN data_types RPAREN COLON ENDLINE stmt_list RETURN data_type END .

    $default  reduce using rule 47 (func_def)
