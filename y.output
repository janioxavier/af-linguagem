Nonterminals useless in grammar

   call_func
   data_type
   prim_type
   abs_type
   data_types


Terminals unused in grammar

   SEMICOLON
   LBRACE
   RBRACE
   LBRACK
   RBRACK
   DOT
   SKIP
   NOT
   NIL
   TRUE
   FALSE
   BREAK
   SET
   LIST
   DIVM
   ADDPERC
   SUBPERC
   ADDEQ
   SUBEQ
   DIVEQ
   MULTEQ
   DIVMEQ
   DICT
   MAIN
   CONTSTMT
   DIV
   AND
   OR
   NEQ
   EQ
   LT
   LE
   GT
   GE
   PERC
   '-'


Rules useless in grammar

   53 call_func: ID LPAREN RPAREN
   54          | ID LPAREN data_types RPAREN

   55 data_type: prim_type
   56          | abs_type

   57 prim_type: INT
   58          | REAL
   59          | STR
   60          | NIL

   61 abs_type: ID

   62 data_types: data_type
   63           | data_type COMMA data_types


Grammar

    0 $accept: prog $end

    1 prog: stmt_list

    2 stmt_list: stmt
    3          | stmt stmt_list

    4 stmt: definition end_stmt
    5     | decl_var end_stmt
    6     | estr_cond end_stmt
    7     | f_builtin end_stmt
    8     | expr end_stmt
    9     | estr_while end_stmt
   10     | estr_for end_stmt

   11 end_stmt: ENDLINE

   12 decl_var: decl_data_type ID
   13         | decl_data_type ID ASSIGN expr

   14 decl_data_type: DECINT
   15               | DECREAL
   16               | DECSTR
   17               | ID

   18 var: ID

   19 definition: type_def
   20           | func_def

   21 decl_field_type: decl_var ENDLINE
   22                | decl_var ENDLINE decl_field_type

   23 type_def: TYPE ID COLON ENDLINE decl_field_type END

   24 param_func: decl_var
   25           | decl_var COMMA param_func

   26 func_def: %empty
   27         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

   31 expr: LPAREN expr RPAREN
   32     | expr PLUS expr
   33     | expr MINUS expr
   34     | expr TIMES expr
   35     | expr DIVIDE expr
   36     | expr ASSIGN expr
   37     | ID
   38     | REAL
   39     | INT
   40     | STR

   41 f_builtin: f_print
   42          | f_input

   43 f_print: PRINT expr

   44 f_input: INPUT ID

   45 estr_cond: IF expr COLON ENDLINE stmt_list END
   46          | IF expr COLON ENDLINE stmt_list cond_else
   47          | IF expr COLON ENDLINE stmt_list cond_elif

   48 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif
   49          | ELIF expr COLON ENDLINE stmt_list cond_else

   50 cond_else: ELSE COLON ENDLINE stmt_list END

   51 estr_while: WHILE expr COLON stmt_list END

   52 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END


Terminals, with rules where they appear

$end (0) 0
'-' (45)
error (256)
INT (258) 39
REAL (259) 38
STR (260) 40
ID (261) 12 13 17 18 23 27 28 29 30 37 44
TYPE (262) 23
PRINT (263) 43
INPUT (264) 44
COMMA (265) 25 52
COLON (266) 23 27 28 29 30 45 46 47 48 49 50 51 52
SEMICOLON (267)
LPAREN (268) 27 28 29 30 31
RPAREN (269) 27 28 29 30 31
LBRACE (270)
RBRACE (271)
LBRACK (272)
RBRACK (273)
DOT (274)
ASSIGN (275) 13 36
ELIF (276) 48 49
IF (277) 45 46 47
ELSE (278) 50
RETURN (279) 28 29
WHILE (280) 51
FOR (281) 52
SKIP (282)
IN (283) 52
NOT (284)
NIL (285)
DEF (286) 27 28 29 30
TRUE (287)
FALSE (288)
BREAK (289)
SET (290)
LIST (291)
DIVM (292)
ADDPERC (293)
SUBPERC (294)
ADDEQ (295)
SUBEQ (296)
DIVEQ (297)
MULTEQ (298)
DIVMEQ (299)
DICT (300)
MAIN (301)
END (302) 23 27 28 29 30 45 50 51 52
ENDLINE (303) 11 21 22 23 27 28 29 30 45 46 47 48 49 50
CONTSTMT (304)
DIV (305)
DECINT (306) 14
DECREAL (307) 15
DECSTR (308) 16
PLUS (309) 32
MINUS (310) 33
AND (311)
OR (312)
NEQ (313)
EQ (314)
LT (315)
LE (316)
GT (317)
GE (318)
PERC (319)
TIMES (320) 34
DIVIDE (321) 35


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
prog (69)
    on left: 1, on right: 0
stmt_list (70)
    on left: 2 3, on right: 1 3 27 28 29 30 45 46 47 48 49 50 51 52
stmt (71)
    on left: 4 5 6 7 8 9 10, on right: 2 3
end_stmt (72)
    on left: 11, on right: 4 5 6 7 8 9 10
decl_var (73)
    on left: 12 13, on right: 5 21 22 24 25 52
decl_data_type (74)
    on left: 14 15 16 17, on right: 12 13
var (75)
    on left: 18, on right: 52
definition (76)
    on left: 19 20, on right: 4
decl_field_type (77)
    on left: 21 22, on right: 22 23
type_def (78)
    on left: 23, on right: 19
param_func (79)
    on left: 24 25, on right: 25 29 30
func_def (80)
    on left: 26 27 28 29 30, on right: 20
expr (81)
    on left: 31 32 33 34 35 36 37 38 39 40, on right: 8 13 31 32 33
    34 35 36 43 45 46 47 48 49 51
f_builtin (82)
    on left: 41 42, on right: 7
f_print (83)
    on left: 43, on right: 41
f_input (84)
    on left: 44, on right: 42
estr_cond (85)
    on left: 45 46 47, on right: 6
cond_elif (86)
    on left: 48 49, on right: 47 48
cond_else (87)
    on left: 50, on right: 46 49
estr_while (88)
    on left: 51, on right: 9
estr_for (89)
    on left: 52, on right: 10


State 0

    0 $accept: . prog $end

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    prog            go to state 16
    stmt_list       go to state 17
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 1

   39 expr: INT .

    $default  reduce using rule 39 (expr)


State 2

   38 expr: REAL .

    $default  reduce using rule 38 (expr)


State 3

   40 expr: STR .

    $default  reduce using rule 40 (expr)


State 4

   17 decl_data_type: ID .
   37 expr: ID .

    ID        reduce using rule 17 (decl_data_type)
    $default  reduce using rule 37 (expr)


State 5

   23 type_def: TYPE . ID COLON ENDLINE decl_field_type END

    ID  shift, and go to state 31


State 6

   43 f_print: PRINT . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 33


State 7

   44 f_input: INPUT . ID

    ID  shift, and go to state 34


State 8

   31 expr: LPAREN . expr RPAREN

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 35


State 9

   45 estr_cond: IF . expr COLON ENDLINE stmt_list END
   46          | IF . expr COLON ENDLINE stmt_list cond_else
   47          | IF . expr COLON ENDLINE stmt_list cond_elif

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 36


State 10

   51 estr_while: WHILE . expr COLON stmt_list END

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 37


State 11

   52 estr_for: FOR . decl_var COMMA var IN var COLON stmt_list END

    ID       shift, and go to state 38
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 39
    decl_data_type  go to state 20


State 12

   27 func_def: DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF . ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF . ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    ID  shift, and go to state 40


State 13

   14 decl_data_type: DECINT .

    $default  reduce using rule 14 (decl_data_type)


State 14

   15 decl_data_type: DECREAL .

    $default  reduce using rule 15 (decl_data_type)


State 15

   16 decl_data_type: DECSTR .

    $default  reduce using rule 16 (decl_data_type)


State 16

    0 $accept: prog . $end

    $end  shift, and go to state 41


State 17

    1 prog: stmt_list .

    $default  reduce using rule 1 (prog)


State 18

    2 stmt_list: stmt .
    3          | stmt . stmt_list

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    ENDLINE   reduce using rule 26 (func_def)
    $default  reduce using rule 2 (stmt_list)

    stmt_list       go to state 42
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 19

    5 stmt: decl_var . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 44


State 20

   12 decl_var: decl_data_type . ID
   13         | decl_data_type . ID ASSIGN expr

    ID  shift, and go to state 45


State 21

    4 stmt: definition . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 46


State 22

   19 definition: type_def .

    $default  reduce using rule 19 (definition)


State 23

   20 definition: func_def .

    $default  reduce using rule 20 (definition)


State 24

    8 stmt: expr . end_stmt
   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr

    ASSIGN   shift, and go to state 47
    ENDLINE  shift, and go to state 43
    PLUS     shift, and go to state 48
    MINUS    shift, and go to state 49
    TIMES    shift, and go to state 50
    DIVIDE   shift, and go to state 51

    end_stmt  go to state 52


State 25

    7 stmt: f_builtin . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 53


State 26

   41 f_builtin: f_print .

    $default  reduce using rule 41 (f_builtin)


State 27

   42 f_builtin: f_input .

    $default  reduce using rule 42 (f_builtin)


State 28

    6 stmt: estr_cond . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 54


State 29

    9 stmt: estr_while . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 55


State 30

   10 stmt: estr_for . end_stmt

    ENDLINE  shift, and go to state 43

    end_stmt  go to state 56


State 31

   23 type_def: TYPE ID . COLON ENDLINE decl_field_type END

    COLON  shift, and go to state 57


State 32

   37 expr: ID .

    $default  reduce using rule 37 (expr)


State 33

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   43 f_print: PRINT expr .

    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51

    $default  reduce using rule 43 (f_print)


State 34

   44 f_input: INPUT ID .

    $default  reduce using rule 44 (f_input)


State 35

   31 expr: LPAREN expr . RPAREN
   32     | expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr

    RPAREN  shift, and go to state 58
    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51


State 36

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   45 estr_cond: IF expr . COLON ENDLINE stmt_list END
   46          | IF expr . COLON ENDLINE stmt_list cond_else
   47          | IF expr . COLON ENDLINE stmt_list cond_elif

    COLON   shift, and go to state 59
    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51


State 37

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   51 estr_while: WHILE expr . COLON stmt_list END

    COLON   shift, and go to state 60
    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51


State 38

   17 decl_data_type: ID .

    $default  reduce using rule 17 (decl_data_type)


State 39

   52 estr_for: FOR decl_var . COMMA var IN var COLON stmt_list END

    COMMA  shift, and go to state 61


State 40

   27 func_def: DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID . LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID . LPAREN param_func RPAREN COLON ENDLINE stmt_list END

    LPAREN  shift, and go to state 62


State 41

    0 $accept: prog $end .

    $default  accept


State 42

    3 stmt_list: stmt stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 43

   11 end_stmt: ENDLINE .

    $default  reduce using rule 11 (end_stmt)


State 44

    5 stmt: decl_var end_stmt .

    $default  reduce using rule 5 (stmt)


State 45

   12 decl_var: decl_data_type ID .
   13         | decl_data_type ID . ASSIGN expr

    ASSIGN  shift, and go to state 63

    $default  reduce using rule 12 (decl_var)


State 46

    4 stmt: definition end_stmt .

    $default  reduce using rule 4 (stmt)


State 47

   36 expr: expr ASSIGN . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 64


State 48

   32 expr: expr PLUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 65


State 49

   33 expr: expr MINUS . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 66


State 50

   34 expr: expr TIMES . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 67


State 51

   35 expr: expr DIVIDE . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 68


State 52

    8 stmt: expr end_stmt .

    $default  reduce using rule 8 (stmt)


State 53

    7 stmt: f_builtin end_stmt .

    $default  reduce using rule 7 (stmt)


State 54

    6 stmt: estr_cond end_stmt .

    $default  reduce using rule 6 (stmt)


State 55

    9 stmt: estr_while end_stmt .

    $default  reduce using rule 9 (stmt)


State 56

   10 stmt: estr_for end_stmt .

    $default  reduce using rule 10 (stmt)


State 57

   23 type_def: TYPE ID COLON . ENDLINE decl_field_type END

    ENDLINE  shift, and go to state 69


State 58

   31 expr: LPAREN expr RPAREN .

    $default  reduce using rule 31 (expr)


State 59

   45 estr_cond: IF expr COLON . ENDLINE stmt_list END
   46          | IF expr COLON . ENDLINE stmt_list cond_else
   47          | IF expr COLON . ENDLINE stmt_list cond_elif

    ENDLINE  shift, and go to state 70


State 60

   51 estr_while: WHILE expr COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 71
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 61

   52 estr_for: FOR decl_var COMMA . var IN var COLON stmt_list END

    ID  shift, and go to state 72

    var  go to state 73


State 62

   27 func_def: DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   29         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN . param_func RPAREN COLON ENDLINE stmt_list END

    ID       shift, and go to state 38
    RPAREN   shift, and go to state 74
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 75
    decl_data_type  go to state 20
    param_func      go to state 76


State 63

   13 decl_var: decl_data_type ID ASSIGN . expr

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 77


State 64

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   36     | expr ASSIGN expr .

    ASSIGN  shift, and go to state 47

    $default  reduce using rule 36 (expr)


State 65

   32 expr: expr . PLUS expr
   32     | expr PLUS expr .
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51

    $default  reduce using rule 32 (expr)


State 66

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   33     | expr MINUS expr .
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr

    ASSIGN  shift, and go to state 47
    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51

    $default  reduce using rule 33 (expr)


State 67

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   34     | expr TIMES expr .
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr

    ASSIGN  shift, and go to state 47

    $default  reduce using rule 34 (expr)


State 68

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   35     | expr DIVIDE expr .
   36     | expr . ASSIGN expr

    ASSIGN  shift, and go to state 47

    $default  reduce using rule 35 (expr)


State 69

   23 type_def: TYPE ID COLON ENDLINE . decl_field_type END

    ID       shift, and go to state 38
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var         go to state 78
    decl_data_type   go to state 20
    decl_field_type  go to state 79


State 70

   45 estr_cond: IF expr COLON ENDLINE . stmt_list END
   46          | IF expr COLON ENDLINE . stmt_list cond_else
   47          | IF expr COLON ENDLINE . stmt_list cond_elif

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 80
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 71

   51 estr_while: WHILE expr COLON stmt_list . END

    END  shift, and go to state 81


State 72

   18 var: ID .

    $default  reduce using rule 18 (var)


State 73

   52 estr_for: FOR decl_var COMMA var . IN var COLON stmt_list END

    IN  shift, and go to state 82


State 74

   27 func_def: DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END

    COLON  shift, and go to state 83


State 75

   24 param_func: decl_var .
   25           | decl_var . COMMA param_func

    COMMA  shift, and go to state 84

    $default  reduce using rule 24 (param_func)


State 76

   29 func_def: DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func . RPAREN COLON ENDLINE stmt_list END

    RPAREN  shift, and go to state 85


State 77

   13 decl_var: decl_data_type ID ASSIGN expr .
   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr

    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51

    $default  reduce using rule 13 (decl_var)


State 78

   21 decl_field_type: decl_var . ENDLINE
   22                | decl_var . ENDLINE decl_field_type

    ENDLINE  shift, and go to state 86


State 79

   23 type_def: TYPE ID COLON ENDLINE decl_field_type . END

    END  shift, and go to state 87


State 80

   45 estr_cond: IF expr COLON ENDLINE stmt_list . END
   46          | IF expr COLON ENDLINE stmt_list . cond_else
   47          | IF expr COLON ENDLINE stmt_list . cond_elif

    ELIF  shift, and go to state 88
    ELSE  shift, and go to state 89
    END   shift, and go to state 90

    cond_elif  go to state 91
    cond_else  go to state 92


State 81

   51 estr_while: WHILE expr COLON stmt_list END .

    $default  reduce using rule 51 (estr_while)


State 82

   52 estr_for: FOR decl_var COMMA var IN . var COLON stmt_list END

    ID  shift, and go to state 72

    var  go to state 93


State 83

   27 func_def: DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list END
   28         | DEF ID LPAREN RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END

    ENDLINE  shift, and go to state 94


State 84

   25 param_func: decl_var COMMA . param_func

    ID       shift, and go to state 38
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    decl_var        go to state 75
    decl_data_type  go to state 20
    param_func      go to state 95


State 85

   29 func_def: DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 96


State 86

   21 decl_field_type: decl_var ENDLINE .
   22                | decl_var ENDLINE . decl_field_type

    ID       shift, and go to state 38
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 21 (decl_field_type)

    decl_var         go to state 78
    decl_data_type   go to state 20
    decl_field_type  go to state 97


State 87

   23 type_def: TYPE ID COLON ENDLINE decl_field_type END .

    $default  reduce using rule 23 (type_def)


State 88

   48 cond_elif: ELIF . expr COLON ENDLINE stmt_list cond_elif
   49          | ELIF . expr COLON ENDLINE stmt_list cond_else

    INT     shift, and go to state 1
    REAL    shift, and go to state 2
    STR     shift, and go to state 3
    ID      shift, and go to state 32
    LPAREN  shift, and go to state 8

    expr  go to state 98


State 89

   50 cond_else: ELSE . COLON ENDLINE stmt_list END

    COLON  shift, and go to state 99


State 90

   45 estr_cond: IF expr COLON ENDLINE stmt_list END .

    $default  reduce using rule 45 (estr_cond)


State 91

   47 estr_cond: IF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 47 (estr_cond)


State 92

   46 estr_cond: IF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 46 (estr_cond)


State 93

   52 estr_for: FOR decl_var COMMA var IN var . COLON stmt_list END

    COLON  shift, and go to state 100


State 94

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 101
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 95

   25 param_func: decl_var COMMA param_func .

    $default  reduce using rule 25 (param_func)


State 96

   29 func_def: DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 102


State 97

   22 decl_field_type: decl_var ENDLINE decl_field_type .

    $default  reduce using rule 22 (decl_field_type)


State 98

   32 expr: expr . PLUS expr
   33     | expr . MINUS expr
   34     | expr . TIMES expr
   35     | expr . DIVIDE expr
   36     | expr . ASSIGN expr
   48 cond_elif: ELIF expr . COLON ENDLINE stmt_list cond_elif
   49          | ELIF expr . COLON ENDLINE stmt_list cond_else

    COLON   shift, and go to state 103
    ASSIGN  shift, and go to state 47
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    TIMES   shift, and go to state 50
    DIVIDE  shift, and go to state 51


State 99

   50 cond_else: ELSE COLON . ENDLINE stmt_list END

    ENDLINE  shift, and go to state 104


State 100

   52 estr_for: FOR decl_var COMMA var IN var COLON . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 105
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 101

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . END
   28         | DEF ID LPAREN RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END

    RETURN  shift, and go to state 106
    END     shift, and go to state 107


State 102

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 108
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 103

   48 cond_elif: ELIF expr COLON . ENDLINE stmt_list cond_elif
   49          | ELIF expr COLON . ENDLINE stmt_list cond_else

    ENDLINE  shift, and go to state 109


State 104

   50 cond_else: ELSE COLON ENDLINE . stmt_list END

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 110
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 105

   52 estr_for: FOR decl_var COMMA var IN var COLON stmt_list . END

    END  shift, and go to state 111


State 106

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 112


State 107

   27 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 27 (func_def)


State 108

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . RETURN ID ENDLINE END
   30         | DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list . END

    RETURN  shift, and go to state 113
    END     shift, and go to state 114


State 109

   48 cond_elif: ELIF expr COLON ENDLINE . stmt_list cond_elif
   49          | ELIF expr COLON ENDLINE . stmt_list cond_else

    INT      shift, and go to state 1
    REAL     shift, and go to state 2
    STR      shift, and go to state 3
    ID       shift, and go to state 4
    TYPE     shift, and go to state 5
    PRINT    shift, and go to state 6
    INPUT    shift, and go to state 7
    LPAREN   shift, and go to state 8
    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    FOR      shift, and go to state 11
    DEF      shift, and go to state 12
    DECINT   shift, and go to state 13
    DECREAL  shift, and go to state 14
    DECSTR   shift, and go to state 15

    $default  reduce using rule 26 (func_def)

    stmt_list       go to state 115
    stmt            go to state 18
    decl_var        go to state 19
    decl_data_type  go to state 20
    definition      go to state 21
    type_def        go to state 22
    func_def        go to state 23
    expr            go to state 24
    f_builtin       go to state 25
    f_print         go to state 26
    f_input         go to state 27
    estr_cond       go to state 28
    estr_while      go to state 29
    estr_for        go to state 30


State 110

   50 cond_else: ELSE COLON ENDLINE stmt_list . END

    END  shift, and go to state 116


State 111

   52 estr_for: FOR decl_var COMMA var IN var COLON stmt_list END .

    $default  reduce using rule 52 (estr_for)


State 112

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 117


State 113

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN . ID ENDLINE END

    ID  shift, and go to state 118


State 114

   30 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list END .

    $default  reduce using rule 30 (func_def)


State 115

   48 cond_elif: ELIF expr COLON ENDLINE stmt_list . cond_elif
   49          | ELIF expr COLON ENDLINE stmt_list . cond_else

    ELIF  shift, and go to state 88
    ELSE  shift, and go to state 89

    cond_elif  go to state 119
    cond_else  go to state 120


State 116

   50 cond_else: ELSE COLON ENDLINE stmt_list END .

    $default  reduce using rule 50 (cond_else)


State 117

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 121


State 118

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID . ENDLINE END

    ENDLINE  shift, and go to state 122


State 119

   48 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_elif .

    $default  reduce using rule 48 (cond_elif)


State 120

   49 cond_elif: ELIF expr COLON ENDLINE stmt_list cond_else .

    $default  reduce using rule 49 (cond_elif)


State 121

   28 func_def: DEF ID LPAREN RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 28 (func_def)


State 122

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE . END

    END  shift, and go to state 123


State 123

   29 func_def: DEF ID LPAREN param_func RPAREN COLON ENDLINE stmt_list RETURN ID ENDLINE END .

    $default  reduce using rule 29 (func_def)
